<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:ig="http://schemas.infragistics.com/xaml"
                    xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives"
                    xmlns:igControlsPrim="http://schemas.infragistics.com/xaml/primitives"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" mc:Ignorable="d">

    <!-- ********************************** COLORS **********************************-->
    <Color x:Key="Color_00">#FF000000</Color>
    <Color x:Key="Color_01">#FF333333</Color>
    <Color x:Key="Color_02">#FF3E3E3E</Color>
    <Color x:Key="Color_03">#FF505050</Color>
    <Color x:Key="Color_04">#FF696969</Color>
    <Color x:Key="Color_05">#FF818181</Color>
    <Color x:Key="Color_06">#FF9B9B9B</Color>
    <Color x:Key="Color_07">#FFB1B1B1</Color>
    <Color x:Key="Color_08">#FFD0D0D0</Color>
    <Color x:Key="Color_09">#FFE0E0E0</Color>
    <Color x:Key="Color_010">#FFF1F1F1</Color>
    <Color x:Key="Color_011">#FFffffff</Color>
    <Color x:Key="Color_012">#FFDCEDF3</Color>
    <Color x:Key="Color_013">#FFB5DDE7</Color>
    <Color x:Key="Color_014">#FF94D7F3</Color>
    <Color x:Key="Color_015">#FF52beed</Color>
    <Color x:Key="Color_016">#FF3BB7EB</Color>
    <Color x:Key="Color_017">#FF16A9E7</Color>
    <Color x:Key="Color_018">#FF2788B1</Color>
    <Color x:Key="Color_019">#FF19759B</Color>
    <Color x:Key="Color_020">#FF1A5F7C</Color>
    <Color x:Key="Color_021">#FFd3404b</Color>
    <Color x:Key="Color_022">#FFc62d36</Color>
    <Color x:Key="Color_023">#FFBE8C57</Color>
    <Color x:Key="Color_024">#FFF8E791</Color>
    <Color x:Key="Color_025">#00FFFFFF</Color>
    <Color x:Key="Color_026">#B2D6D6D6</Color>
    <Color x:Key="Color_027">#B2E7E7E7</Color>
    <Color x:Key="Color_029">#052A2E31</Color>
    <Color x:Key="Color_030">#152A2E31</Color>
    <Color x:Key="Color_031">#252A2E31</Color>
    <Color x:Key="Color_032">#352A2E31</Color>
    <Color x:Key="Color_033">#001A5F7C</Color>
    <Color x:Key="Color_034">#00565656</Color>
    <Color x:Key="Color_035">#33565656</Color>
    <Color x:Key="Color_036">#4D666666</Color>
    <Color x:Key="Color_037">#4CACACAC</Color>
    <Color x:Key="Color_038">#19000000</Color>
    <Color x:Key="Color_039">#33000000</Color>
    <Color x:Key="Color_227">#59000000</Color>
    <Color x:Key="Color_040">#cc666666</Color>
    <Color x:Key="Color_041">#A5FFFFFF</Color>
    <Color x:Key="Color_042">#B2E7E7E7</Color>
    <Color x:Key="Color_067">#052A2E31</Color>
    <Color x:Key="Color_068">#152A2E31</Color>
    <Color x:Key="Color_069">#252A2E31</Color>
    <Color x:Key="Color_070">#352A2E31</Color>

    <!-- ********************************** BRUSHES **********************************-->
    <SolidColorBrush x:Key="ForegroundBrush" Color="{StaticResource Color_01}"/>
    <SolidColorBrush x:Key="LightForegroundBrush" Color="{StaticResource Color_011}"/>

    <LinearGradientBrush x:Key="TextBoxGradient" StartPoint="0.505,0.469" EndPoint="0.505,-0.023">
        <GradientStop Color="{StaticResource Color_011}" Offset="0.377"/>
        <GradientStop Color="{StaticResource Color_09}" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ScrollbarHThumbBgBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="{StaticResource Color_04}" Offset="1"/>
        <GradientStop Color="{StaticResource Color_05}"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ScrollbarVThumbBgBrush" EndPoint="1,0.5" StartPoint="0,0.5">
        <GradientStop Color="{StaticResource Color_04}" Offset="1"/>
        <GradientStop Color="{StaticResource Color_05}"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="HorizThumb_Hover" StartPoint="0.684,-0.023" EndPoint="0.684,0.971">
        <GradientStop Color="{StaticResource Color_016}"/>
        <GradientStop Color="{StaticResource Color_018}" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="HorizThumb_Pressed" StartPoint="0.684,1.2" EndPoint="0.684,0.03">
        <GradientStop Color="{StaticResource Color_016}"/>
        <GradientStop Color="{StaticResource Color_018}" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="VertThumb_Hover" StartPoint="0.199,0.469" EndPoint="1.17,0.469">
        <GradientStop Color="{StaticResource Color_016}"/>
        <GradientStop Color="{StaticResource Color_018}" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="VertThumb_Pressed" StartPoint="0.199,0.469" EndPoint="1.17,0.469">
        <GradientStop Color="{StaticResource Color_016}" Offset="1"/>
        <GradientStop Color="{StaticResource Color_018}"/>
    </LinearGradientBrush>

    <RadialGradientBrush x:Key="CheckBoxFill" RadiusX="0.916" RadiusY="0.667" Center="0.5,0.6" GradientOrigin="0.5,0.6">
        <GradientStop Color="{StaticResource Color_011}" Offset="0.645"/>
        <GradientStop Color="{StaticResource Color_08}" Offset="1"/>
    </RadialGradientBrush>

    <RadialGradientBrush x:Key="CheckBoxInnerShadow" RadiusX="0.916" RadiusY="2.028" Center="0.929,0.499" GradientOrigin="0.929,0.499">
        <GradientStop Color="{StaticResource Color_034}" Offset="0.679"/>
        <GradientStop Color="{StaticResource Color_035}" Offset="0.997"/>
    </RadialGradientBrush>
    <SolidColorBrush Color="{StaticResource Color_06}" x:Key="CheckBoxNormalStroke"/>
    <SolidColorBrush x:Key="CheckBoxHoverStroke" Color="{StaticResource Color_016}"/>
    <SolidColorBrush x:Key="CheckBoxFocusedStroke" Color="{StaticResource Color_016}"/>
    <SolidColorBrush x:Key="CheckBoxGlyphFill" Color="{StaticResource Color_03}"/>

    <RadialGradientBrush x:Key="ScrollbarVBgBrush" Center="0.071435546875,0.5039216175738735" GradientOrigin="0,0.5" RadiusX="0.5" RadiusY="1.1" Opacity="0.3">
        <GradientStop Color="{StaticResource Color_040}"/>
        <GradientStop Color="{StaticResource Color_036}" Offset="0.9666669964790344"/>
        <GradientStop Color="{StaticResource Color_036}" Offset="0.9777780175209045"/>
    </RadialGradientBrush>

    <RadialGradientBrush x:Key="ScrollbarHBgBrush" Center="0.495,0.128" GradientOrigin="0.495,0.128" RadiusX="1.134" RadiusY="0.65" Opacity="0.3">
        <GradientStop Color="{StaticResource Color_040}"/>
        <GradientStop Color="{StaticResource Color_036}" Offset="0.9666669964790344"/>
        <GradientStop Color="{StaticResource Color_036}" Offset="0.9777780175209045"/>
    </RadialGradientBrush>

    <SolidColorBrush x:Key="ArrowHoverStroke" Color="{StaticResource Color_018}"/>
    <SolidColorBrush x:Key="DisabledStroke" Color="{StaticResource Color_08}"/>
    <SolidColorBrush x:Key="LightBrush1" Color="{StaticResource Color_016}"/>
    <SolidColorBrush x:Key="DarkBrush1" Color="{StaticResource Color_018}"/>
    <SolidColorBrush x:Key="InvalidUnfocusedBrush" Color="{StaticResource Color_021}"/>
    <SolidColorBrush x:Key="InvalidFocusedBrush" Color="{StaticResource Color_022}"/>
    <SolidColorBrush x:Key="ArrowDarkStroke" Color="{StaticResource Color_04}"/>
    <SolidColorBrush x:Key="ArrowBgColor" Color="{StaticResource Color_05}"/>
    <SolidColorBrush x:Key="ScrollbarStroke" Color="{StaticResource Color_037}"/>
    <SolidColorBrush x:Key="TransparentBrush" Color="{StaticResource Color_025}"/>
    <SolidColorBrush x:Key="ScrollviewerCornerFill" Color="{StaticResource Color_010}"/>
    <SolidColorBrush x:Key="ScrollBarDisabledBackground" Color="{StaticResource Color_010}"/>

    <LinearGradientBrush x:Key="SelectedBackground" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="{StaticResource Color_011}"/>
        <GradientStop Offset="0.97" Color="{StaticResource Color_010}"/>
        <GradientStop Offset="0.99" Color="{StaticResource Color_010}"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="comboItemHoverFillBrush" StartPoint="0.49,0" EndPoint="0.49,1.02">
        <GradientStop Offset="0" Color="{StaticResource Color_016}"/>
        <GradientStop Offset="0.98" Color="{StaticResource Color_018}"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="btnBackgroundBrush" StartPoint="0.55,0.04" EndPoint="0.55,0.97">
        <GradientStop Color="{StaticResource Color_04}"/>
        <GradientStop Color="{StaticResource Color_02}" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="btnHoverBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="{StaticResource Color_016}"/>
        <GradientStop Color="{StaticResource Color_018}" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="btnPressedBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="{StaticResource Color_016}" Offset="1"/>
        <GradientStop Color="{StaticResource Color_018}"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="SelectedStroke" Color="{StaticResource Color_018}"/>
    <SolidColorBrush x:Key="MouseOverBackground" Color="{StaticResource Color_012}"/>
    <SolidColorBrush x:Key="btnBorderBrush" Color="{StaticResource Color_02}"/>
    <SolidColorBrush x:Key="btnHoverBorderBrush" Color="{StaticResource Color_018}"/>
    <SolidColorBrush x:Key="btnPressedBorderBrush" Color="{StaticResource Color_018}"/>
    <SolidColorBrush x:Key="ValidationTooltipBg1" Color="{StaticResource Color_067}"/>
    <SolidColorBrush x:Key="ValidationTooltipBg2" Color="{StaticResource Color_068}"/>
    <SolidColorBrush x:Key="ValidationTooltipBg3" Color="{StaticResource Color_069}"/>
    <SolidColorBrush x:Key="ValidationTooltipBg4" Color="{StaticResource Color_070}"/>
    <SolidColorBrush x:Key="PopupStrokeBrush" Color="{StaticResource Color_07}"/>
    <LinearGradientBrush x:Key="PopupBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="{StaticResource Color_09}" Offset="1"/>
        <GradientStop Color="{StaticResource Color_011}"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboeditorBorderBrush" Color="{StaticResource Color_07}"/>
    <SolidColorBrush x:Key="BorderEditModeBrush" Color="{StaticResource Color_08}"/>
    <SolidColorBrush x:Key="ArrowBackgroundStroke" Color="{StaticResource Color_227}"/>

    <!-- *********************************  CheckBox Style  ********************************* -->
    <Style x:Key="CheckBoxStyle" TargetType="CheckBox">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Padding" Value="4,1,0,0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="18"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.2"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="disabled" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="checkBox" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="IndeterminateIcon" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="focused" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="invalidUnfocused" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="invalidFocused" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="normal" Opacity="1" Width="14" RadiusX="1" RadiusY="1" Stroke="{StaticResource CheckBoxNormalStroke}" StrokeThickness="1" HorizontalAlignment="Left" Margin="2,2,0,0" Height="14" VerticalAlignment="Top" Fill="{StaticResource CheckBoxFill}"/>
                        <Rectangle x:Name="hover" Width="14" RadiusX="1" RadiusY="1" Stroke="{StaticResource CheckBoxHoverStroke}" StrokeThickness="1" HorizontalAlignment="Left" Margin="2,2,0,0" Height="14" VerticalAlignment="Top" Fill="{StaticResource CheckBoxFill}" Opacity="0"/>
                        <Rectangle x:Name="pressed" Opacity="0" Width="14" RadiusX="1" RadiusY="1" Stroke="{StaticResource CheckBoxFocusedStroke}" StrokeThickness="1" Fill="{StaticResource CheckBoxFill}" HorizontalAlignment="Left" Margin="2,2,0,0" Height="14" VerticalAlignment="Top"/>
                        <Rectangle x:Name="focused" Opacity="0" Width="14" RadiusX="1" RadiusY="1" Stroke="{StaticResource CheckBoxFocusedStroke}" StrokeThickness="1" Fill="{StaticResource CheckBoxFill}" HorizontalAlignment="Left" Margin="2,2,0,0" Height="14" VerticalAlignment="Top"/>
                        <Rectangle x:Name="disabled" Opacity="0" Width="14" RadiusX="1" RadiusY="1" Stroke="{StaticResource DisabledStroke}" StrokeThickness="1" Fill="{StaticResource CheckBoxFill}" HorizontalAlignment="Left" Margin="2,2,0,0" Height="14" VerticalAlignment="Top"/>
                        <Rectangle x:Name="invalidUnfocused" Opacity="0" Width="14" RadiusX="1" RadiusY="1" Stroke="{StaticResource InvalidUnfocusedBrush}" StrokeThickness="1" HorizontalAlignment="Left" Margin="2,2,0,0" Height="14" VerticalAlignment="Top" Fill="{StaticResource CheckBoxFill}"/>
                        <Rectangle x:Name="invalidFocused" Opacity="0" Width="14" RadiusX="1" RadiusY="1" Stroke="{StaticResource InvalidFocusedBrush}" StrokeThickness="1" HorizontalAlignment="Left" Margin="2,2,0,0" Height="14" VerticalAlignment="Top" Fill="{StaticResource CheckBoxFill}"/>
                        <Rectangle x:Name="innerShadow" Width="14" StrokeThickness="1" HorizontalAlignment="Left" Margin="2,2,0,0" Height="14" VerticalAlignment="Top" RadiusX="0.5" RadiusY="0.5" Fill="{StaticResource CheckBoxInnerShadow}"/>
                        <Path x:Name="checkBox" Height="8" Width="10" Stretch="Fill" Opacity="0" Fill="{StaticResource CheckBoxGlyphFill}" HorizontalAlignment="Left" Data="M 1145.607177734375,430 C1145.607177734375,430 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1138,434.5538330078125 1138,434.5538330078125 1138,434.5538330078125 1141.482177734375,438 1141.482177734375,438 1141.482177734375,438 1141.96875,437.9375 1141.96875,437.9375 1141.96875,437.9375 1147,431.34619140625 1147,431.34619140625 1147,431.34619140625 1145.607177734375,430 1145.607177734375,430 z" Margin="4,5,0,0" UseLayoutRounding="False" VerticalAlignment="Top"/>
                        <Rectangle x:Name="IndeterminateIcon" Fill="{StaticResource CheckBoxGlyphFill}" Height="2" Width="6" VerticalAlignment="Top" Margin="0,8,0,0" Opacity="0"/>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ********************************************************** WPF SPECIFIC INLINE-CONTROLS RESOURCES **********************************************************-->

    <!-- *********************************  Horizontal Scrollbar Button Style  ********************************* -->
    <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid x:Name="grid1">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="normal">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Fill="Transparent"/>
                        <Path x:Name="normal" Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z " Height="5" Stretch="Uniform" Width="8" Stroke="{StaticResource ArrowDarkStroke}" Fill="{StaticResource ArrowBgColor}"/>
                        <Path x:Name="hover" Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z " Height="5" Stretch="Uniform" Width="8" Fill="{StaticResource LightBrush1}" Opacity="0" Stroke="{StaticResource ArrowHoverStroke}"/>
                        <Path x:Name="pressed" Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z " Height="5" Stretch="Uniform" Width="8" Fill="{StaticResource DarkBrush1}" Opacity="0" Stroke="{StaticResource ArrowHoverStroke}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  Vertical Scrollbar Page Button Style  ********************************* -->
    <Style x:Key="VScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Rectangle>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  Horizontal Scrollbar Gray THumb Style  ********************************* -->
    <Style x:Key="HScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Margin="0">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="normal">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="normal" RadiusY="2" RadiusX="2" StrokeThickness="1" Margin="1" Fill="{StaticResource ScrollbarHThumbBgBrush}" Stroke="{StaticResource ArrowDarkStroke}"/>
                        <Rectangle x:Name="hover" RadiusY="2" RadiusX="2" StrokeThickness="1" Margin="1" Fill="{StaticResource HorizThumb_Hover}" Opacity="0" Stroke="{StaticResource ArrowHoverStroke}"/>
                        <Rectangle x:Name="pressed" Fill="{StaticResource HorizThumb_Pressed}" RadiusY="2" RadiusX="2" StrokeThickness="1" Margin="1" Opacity="0" Stroke="{StaticResource ArrowHoverStroke}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  Vertical Scrollbar THumb Style  ********************************* -->
    <Style x:Key="VScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="grid" Height="Auto" Width="Auto">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="normal">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.4"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="normal" RadiusY="2" RadiusX="2" StrokeThickness="1" Margin="1" Stroke="{StaticResource ArrowDarkStroke}" Fill="{StaticResource ScrollbarHThumbBgBrush}">

                        </Rectangle>
                        <Rectangle x:Name="hover" RadiusY="2" RadiusX="2" StrokeThickness="1" Margin="1" Fill="{StaticResource VertThumb_Hover}" Opacity="0" Stroke="{StaticResource ArrowHoverStroke}"/>
                        <Rectangle x:Name="pressed" Fill="{StaticResource VertThumb_Pressed}" RadiusY="2" RadiusX="2" StrokeThickness="1" Margin="1" Opacity="0" Stroke="{StaticResource ArrowHoverStroke}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  Horizontal Scrollbar Page Button Style  ********************************* -->
    <Style x:Key="HScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  Scrollbar Style  ********************************* -->
    <Style x:Key="ScrollbarStyle" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        <Setter Property="Width" Value="20"/>
        <Setter Property="MinWidth" Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                            <RowDefinition Height="0.00001*"/>
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.3"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="repeatButton">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.6"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="repeatButton1">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.6"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="thumb">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Grid.RowSpan="3" StrokeThickness="1" Fill="{StaticResource ScrollbarVBgBrush}" Stroke="{StaticResource ScrollbarStroke}" Margin="0"/>
                        <RepeatButton x:Name="repeatButton" Margin="1" Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}"/>
                        <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource VScrollBarPageButton}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VScrollBarPageButton}"/>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb x:Name="thumb" Style="{StaticResource VScrollBarThumb}" Margin="5,0"/>
                            </Track.Thumb>
                        </Track>
                        <RepeatButton x:Name="repeatButton1" Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2" Style="{StaticResource ScrollBarButton}" Margin="1" RenderTransformOrigin="0.5,0.5">
                            <RepeatButton.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform Angle="180"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </RepeatButton.RenderTransform>
                            <Path x:Name="smallIncreaseGlyph" Width="9" Height="5" Data="M 4,5 C4,5 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1 0,1 0,0 0,0 0,0 9,0 9,0 9,0 9,1 9,1 9,1 8,1 8,1 8,1 8,2 8,2 8,2 7,2 7,2 7,2 7,3 7,3 7,3 6,3 6,3 6,3 6,4 6,4 6,4 5,4 5,4 5,4 5,5 5,5 5,5 4,5 4,5 z" IsHitTestVisible="False" HorizontalAlignment="Center" VerticalAlignment="Center" d:LayoutOverrides="Width, Height, Margin" Fill="Lime">
                            </Path>
                        </RepeatButton>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="MinWidth" Value="0"/>
                <Setter Property="Height" Value="20"/>
                <Setter Property="MinHeight" Value="20"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                    <ColumnDefinition Width="0.00001*"/>
                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                </Grid.ColumnDefinitions>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0:0:0.3"/>
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="repeatButton">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="repeatButton1">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled"/>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Rectangle Grid.ColumnSpan="5" StrokeThickness="1" Fill="{StaticResource ScrollbarHBgBrush}" Stroke="{StaticResource ScrollbarStroke}"/>
                                <RepeatButton x:Name="repeatButton" Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}" Opacity="1" RenderTransformOrigin="0.5,0.5">
                                    <RepeatButton.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="-90"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </RepeatButton.RenderTransform>
                                    <Path x:Name="horizontalSmallDecreaseGlyph" Width="5" Height="9" Data="M 0,4 C0,4 1,4 1,4 1,4 1,3 1,3 1,3 2,3 2,3 2,3 2,2 2,2 2,2 3,2 3,2 3,2 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 5,0 5,0 5,0 5,9 5,9 5,9 4,9 4,9 4,9 4,8 4,8 4,8 3,8 3,8 3,8 3,7 3,7 3,7 2,7 2,7 2,7 2,6 2,6 2,6 1,6 1,6 1,6 1,5 1,5 1,5 0,5 0,5 0,5 0,4 0,4 z" IsHitTestVisible="False" HorizontalAlignment="Center" Margin="0" d:LayoutOverrides="Width" VerticalAlignment="Center" Fill="Magenta">
                                    </Path>
                                </RepeatButton>
                                <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource HScrollBarPageButton}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource HScrollBarPageButton}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource HScrollBarThumb}" Margin="0,5"/>
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton x:Name="repeatButton1" Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}" Opacity="1" RenderTransformOrigin="0.5,0.5">
                                    <RepeatButton.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="90"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </RepeatButton.RenderTransform>
                                    <Path x:Name="horizontalSmallIncreaseGlyph" Width="5" Height="9" Data="M 5,4 C5,4 4,4 4,4 4,4 4,3 4,3 4,3 3,3 3,3 3,3 3,2 3,2 3,2 2,2 2,2 2,2 2,1 2,1 2,1 1,1 1,1 1,1 1,0 1,0 1,0 0,0 0,0 0,0 0,9 0,9 0,9 1,9 1,9 1,9 1,8 1,8 1,8 2,8 2,8 2,8 2,7 2,7 2,7 3,7 3,7 3,7 3,6 3,6 3,6 4,6 4,6 4,6 4,5 4,5 4,5 5,5 5,5 5,5 5,4 5,4 z" IsHitTestVisible="False" HorizontalAlignment="Center" Margin="0" d:LayoutOverrides="Width" VerticalAlignment="Center" Fill="Cyan">
                                    </Path>
                                </RepeatButton>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- *********************************  ScrollViewer Style ********************************* -->
    <Style x:Key="ScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Rectangle x:Name="Corner" Grid.Column="1" Fill="{StaticResource ScrollviewerCornerFill}" Grid.Row="1" Opacity="0.5"/>
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                        <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Style="{StaticResource ScrollbarStyle}"/>
                        <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Style="{StaticResource ScrollbarStyle}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style TargetType="ig:ComboEditorItemControl">
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Background" Value="{StaticResource TransparentBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ig:ComboEditorItemControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentControl">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ForegroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="mouseOverRectangle" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentControl">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation d:IsOptimized="True" Duration="0" Storyboard.TargetName="content" Storyboard.TargetProperty="(UIElement.Opacity)" To="0.35"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected"/>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="selectedRectangle" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusedRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="FocusedRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionModeStates">
                                <VisualState x:Name="CheckBox">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SelectedCheckbox">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Standard"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}"/>
                        <Rectangle x:Name="selectedRectangle" Fill="{StaticResource SelectedBackground}" IsHitTestVisible="False" Opacity="0" Stroke="{StaticResource SelectedStroke}"/>
                        <Rectangle x:Name="mouseOverRectangle" Fill="{StaticResource comboItemHoverFillBrush}" IsHitTestVisible="False" Opacity="0" Stroke="{StaticResource SelectedStroke}"/>
                        <Rectangle x:Name="FocusedRectangle" IsHitTestVisible="False" Opacity="0" Stroke="{StaticResource SelectedStroke}" StrokeThickness="0.5"/>
                        <StackPanel x:Name="content" Orientation="Horizontal">
                            <CheckBox x:Name="SelectedCheckbox" VerticalAlignment="Center" IsHitTestVisible="False" Visibility="Collapsed" Style="{StaticResource CheckBoxStyle}"/>
                            <ContentControl x:Name="contentControl">
                                <ContentPresenter x:Name="contentPresenter" Margin="{TemplateBinding Padding}" VerticalAlignment="Center" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                            </ContentControl>
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
    </Style>
    <ControlTemplate x:Key="ValidationToolTipTemplate">
        <Grid x:Name="Root" Margin="5,0" Opacity="0" RenderTransformOrigin="0,0">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OpenStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0"/>
                        <VisualTransition GeneratedDuration="0:0:0.2" To="Open">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="xform" Storyboard.TargetProperty="X">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Closed">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Open">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="xform" Storyboard.TargetProperty="X">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity">
                                <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ValidationStates">
                    <VisualState x:Name="Valid"/>
                    <VisualState x:Name="InvalidFocused"/>
                    <VisualState x:Name="InvalidUnfocused"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.RenderTransform>
                <TranslateTransform x:Name="xform" X="-25"/>
            </Grid.RenderTransform>
            <Border Margin="4,4,-4,-4" Background="{StaticResource ValidationTooltipBg1}" CornerRadius="5"/>
            <Border Margin="3,3,-3,-3" Background="{StaticResource ValidationTooltipBg2}" CornerRadius="4"/>
            <Border Margin="2,2,-2,-2" Background="{StaticResource ValidationTooltipBg3}" CornerRadius="3"/>
            <Border Margin="1,1,-1,-1" Background="{StaticResource ValidationTooltipBg4}" CornerRadius="2"/>
            <Border Background="{StaticResource InvalidFocusedBrush}" CornerRadius="2"/>
            <Border CornerRadius="2">
                <TextBlock MaxWidth="250" Margin="8,4,8,4" Foreground="{StaticResource LightForegroundBrush}" Text="{Binding (Validation.Errors)[0].ErrorContent}" TextWrapping="Wrap" UseLayoutRounding="false"/>
            </Border>
        </Grid>
    </ControlTemplate>

    <Style x:Key="toggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Foreground" Value="{StaticResource LightForegroundBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="hoverElem" Storyboard.TargetProperty="(UIElement.Opacity)" To="1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation d:IsOptimized="True" Duration="0" Storyboard.TargetName="pressedElem" Storyboard.TargetProperty="(UIElement.Opacity)" To="1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="checkedElem" Storyboard.TargetProperty="(UIElement.Opacity)" To="1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="focusElem" Storyboard.TargetProperty="(UIElement.Opacity)" To="1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidFocused"/>
                                <VisualState x:Name="InvalidUnfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="NormalElem" Fill="{StaticResource btnBackgroundBrush}" RadiusX="3" RadiusY="3" Stroke="{StaticResource btnBorderBrush}" StrokeThickness="1"/>
                        <Rectangle x:Name="hoverElem" Fill="{StaticResource btnHoverBrush}" Opacity="0" RadiusX="3" RadiusY="3" Stroke="{StaticResource btnHoverBorderBrush}" StrokeThickness="1"/>
                        <Rectangle x:Name="pressedElem" Fill="{StaticResource btnPressedBrush}" Opacity="0" RadiusX="3" RadiusY="3" Stroke="{StaticResource btnPressedBorderBrush}" StrokeThickness="1"/>
                        <Rectangle x:Name="checkedElem" Fill="{StaticResource btnPressedBrush}" Opacity="0" RadiusX="3" RadiusY="3" Stroke="{StaticResource btnPressedBorderBrush}" StrokeThickness="1"/>
                        <Rectangle x:Name="focusElem" Opacity="0" RadiusX="3" RadiusY="3" Stroke="{StaticResource SelectedStroke}" StrokeThickness="1"/>
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ig:XamComboEditor">
        <Setter Property="Padding" Value="4,2"/>
        <Setter Property="MinHeight" Value="22"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="{StaticResource btnBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ComboeditorBorderBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ig:XamComboEditor">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value=".55"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="borderEditMode" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SelectedStroke}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ModeStates">
                                <VisualState x:Name="Selectable">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="contentControl">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Editable">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextBoxPresenter" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectConentPanel" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="borderEditMode" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="ToggleButton">
                                            <EasingInt32KeyFrame KeyTime="0" Value="1"/>
                                        </Int32AnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).Color" Storyboard.TargetName="WaterMark">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource Color_01}"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="WaterMark">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.6"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="WaterMarkStates">
                                <VisualState x:Name="WaterMarkHidden"/>
                                <VisualState x:Name="WaterMarkVisible">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="WaterMark" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DropDownStates">
                                <VisualState x:Name="Closed"/>
                                <VisualState x:Name="Open">
                                    <Storyboard>
                                        <BooleanAnimationUsingKeyFrames Storyboard.TargetName="Popup" Storyboard.TargetProperty="IsOpen">
                                            <DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
                                        </BooleanAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidFocused"/>
                                <VisualState x:Name="InvalidUnfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="ContentPresenterBorder">
                            <Grid x:Name="gridLayout" ShowGridLines="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="22"/>
                                </Grid.ColumnDefinitions>
                                <Popup x:Name="Popup" Grid.ColumnSpan="2" VerticalAlignment="Bottom" IsOpen="False">
                                    <Border x:Name="RootPopupElement" Height="Auto" MaxHeight="{TemplateBinding MaxDropDownHeight}" HorizontalAlignment="Stretch" Background="{StaticResource PopupBackgroundBrush}" BorderBrush="{StaticResource PopupStrokeBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <igPrim:ItemsPanel x:Name="ItemsPanel"/>
                                            <ScrollBar x:Name="VerticalScrollBar" Width="20" Grid.Column="1" Grid.Row="0" Style="{StaticResource ScrollbarStyle}"/>
                                            <ScrollBar x:Name="HorizontalScrollBar" Height="20" Grid.Column="0" Grid.Row="1" Style="{StaticResource ScrollbarStyle}"/>
                                        </Grid>
                                    </Border>
                                </Popup>
                                <Border x:Name="borderEditMode" Grid.ColumnSpan="2" Background="{StaticResource TextBoxGradient}" BorderBrush="{StaticResource BorderEditModeBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" Visibility="Collapsed"/>
                                <ToggleButton x:Name="ToggleButton" Grid.ColumnSpan="2" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="Right" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" IsTabStop="False" Style="{StaticResource toggleButtonStyle}" igControlsPrim:XamlHelper.Focusable="False" Margin="0,0,-1,0">
                                    <Grid Margin="0,0,4,0">
                                        <Path Width="10" Height="6" Data="M 0,2 C0,2 1,2 1,2 1,2 1,3 1,3 1,3 2,3 2,3 2,3 2,4 2,4 2,4 3,4 3,4 3,4 3,5 3,5 3,5 4,5 4,5 4,5 4,6 4,6 4,6 6,6 6,6 6,6 6,5 6,5 6,5 7,5 7,5 7,5 7,4 7,4 7,4 8,4 8,4 8,4 8,3 8,3 8,3 9,3 9,3 9,3 9,2 9,2 9,2 10,2 10,2 10,2 10,0 10,0 10,0 0,0 0,0 0,0 0,2 0,2 z" Fill="{StaticResource ArrowBackgroundStroke}" Stretch="Fill"/>
                                        <Path Width="8" Height="4" Data="M 0,1 C0,1 1,1 1,1 1,1 1,2 1,2 1,2 2,2 2,2 2,2 2,3 2,3 2,3 3,3 3,3 3,3 3,4 3,4 3,4 5,4 5,4 5,4 5,3 5,3 5,3 6,3 6,3 6,3 6,2 6,2 6,2 7,2 7,2 7,2 7,1 7,1 7,1 8,1 8,1 8,1 8,0 8,0 8,0 0,0 0,0 0,0 0,1 0,1 z" Fill="{StaticResource LightForegroundBrush}" Stretch="Fill"/>
                                    </Grid>
                                </ToggleButton>
                                <TextBlock Opacity="0.6" x:Name="WaterMark" HorizontalAlignment="Stretch" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" IsHitTestVisible="False" Padding="{TemplateBinding Padding}" Text="{TemplateBinding EmptyText}" Visibility="Collapsed" Margin="3,1,0,1" Foreground="{StaticResource LightForegroundBrush}"/>
                                <igPrim:SpecializedTextBox x:Name="TextBoxPresenter" HorizontalAlignment="Stretch" Margin="1,0,0,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Background="{StaticResource TransparentBrush}" BorderThickness="0" Padding="{TemplateBinding Padding}" Visibility="Collapsed" Foreground="{StaticResource ForegroundBrush}"/>
                                <ContentControl x:Name="contentControl" Foreground="{StaticResource LightForegroundBrush}" HorizontalAlignment="Stretch" Visibility="Visible" FontSize="11" VerticalAlignment="Center">
                                    <Grid>
                                        <StackPanel x:Name="MultiSelectConentPanel" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Orientation="Horizontal" Margin="10,0,0,0"/>
                                    </Grid>
                                </ContentControl>
                            </Grid>
                        </Border>
                        <Border x:Name="FocusVisualElement" Margin="-1" BorderBrush="{StaticResource SelectedStroke}" BorderThickness="1" CornerRadius="2" IsHitTestVisible="false" Opacity="0"/>
                        <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource LightForegroundBrush}" IsHitTestVisible="false" Opacity="0" RadiusX="1" RadiusY="1"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>