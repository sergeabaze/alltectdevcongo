<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:igControlsPrim="http://schemas.infragistics.com/xaml/primitives"
    xmlns:igPrimBase="http://schemas.infragistics.com/xaml/primitives"
    xmlns:igShared="http://schemas.infragistics.com/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
    xmlns:System="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    mc:Ignorable="PresentationOptions d">

    <!--__________________________________ Generic Variables__________________________________-->
    <Thickness x:Key="ComboCellBorderNormalThickness">0</Thickness>
    <System:Double x:Key="ComboCellBorderMouseOverThickness">0</System:Double>
    <System:Double x:Key="ComboCellBorderSelectedThickness">0</System:Double>
    <System:Double x:Key="ComboCellBorderFocusThickness">0</System:Double>
    <System:Double x:Key="ComboRadius">3</System:Double>
    <CornerRadius x:Key="ComboTextBoxRadius">3</CornerRadius>
    <CornerRadius x:Key="ComboPopoutRadius">0</CornerRadius>

    <!--toggle button width for EditorItem-->
    <System:Double x:Key="ToggleButtonWidth">20</System:Double>

    <!-- START ==== COLORS -->
    <Color x:Key="Color_00">#FF333333</Color>
    <Color x:Key="Color_01">#FF505050</Color>
    <Color x:Key="Color_02">#FF4f4f4f</Color>
    <Color x:Key="Color_03">#FF666666</Color>
    <Color x:Key="Color_04">#FF7C7C7C</Color>
    <Color x:Key="Color_05">#FF9B9B9B</Color>
    <Color x:Key="Color_06">#FFB1B1B1</Color>
    <Color x:Key="Color_07">#FFD6D6D6</Color>
    <Color x:Key="Color_08">#FFE9E9E9</Color>
    <Color x:Key="Color_09">#FFFFFFFF</Color>
    <Color x:Key="Color_010">#ff2788B1</Color>
    <Color x:Key="Color_011">#FF16A9E7</Color>
    <Color x:Key="Color_012">#FF3bb7eb</Color>
    <Color x:Key="Color_013">#FF6DBDD1</Color>
    <Color x:Key="Color_014">#FF99C1E2</Color>
    <Color x:Key="Color_015">#cc666666</Color>
    <Color x:Key="Color_016">#00FFFFFF</Color>
    <Color x:Key="Color_017">#052A2E31</Color>
    <Color x:Key="Color_018">#352A2E31</Color>
    <Color x:Key="Color_019">#5EC9C9C9</Color>
    <Color x:Key="Color_020">#B2E9E9E9</Color>
    <Color x:Key="Color_021">#4c666666</Color>
    <Color x:Key="Color_022">#00565656</Color>
    <Color x:Key="Color_023">#33565656</Color>
    <Color x:Key="Color_024">#4CACACAC</Color>
    <Color x:Key="Color_025">#FFDC000C</Color>
    <Color x:Key="Color_026">#FFc62d36</Color>
    <!-- END ==== COLORS -->
    <!-- START ==== BRUSHES -->
    <!--__________________________________ Generic Brushes __________________________________-->

    <LinearGradientBrush x:Key="LightGrayGradient" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="{StaticResource Color_09}"  />
        <GradientStop Color="{StaticResource Color_08}" Offset="1" />
    </LinearGradientBrush>

    <!--__________________________________ Header Brushes __________________________________-->
    <LinearGradientBrush x:Key="HeaderNormalBackgroundBrush" StartPoint="0,0" EndPoint="0,0.97">
        <GradientStop Offset="0" Color="{StaticResource Color_04}"/>
        <GradientStop Offset="0.93" Color="{StaticResource Color_01}"/>
        <GradientStop Offset="0.98" Color="{StaticResource Color_02}"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HeaderHoverBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="{StaticResource Color_02}"/>
        <GradientStop Offset="0.93" Color="{StaticResource Color_04}"/>
        <GradientStop Offset="0.99" Color="{StaticResource Color_04}"/>
    </LinearGradientBrush>

    <!--__________________________________ Cell Brushes __________________________________-->

    <LinearGradientBrush x:Key="CellItemSelectedBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="{StaticResource Color_09}"/>
        <GradientStop Offset="0.97" Color="{StaticResource Color_08}"/>
        <GradientStop Offset="1" Color="{StaticResource Color_08}"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="CellRowHoverBackgroundBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="{StaticResource Color_012}"/>
        <GradientStop Offset="0.98" Color="{StaticResource Color_010}"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="CellRowActiveBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="{StaticResource Color_09}"/>
        <GradientStop Offset="0.97" Color="{StaticResource Color_08}"/>
        <GradientStop Offset="1" Color="{StaticResource Color_08}"/>
    </LinearGradientBrush>

    <!--__________________________________ Toggle Brushes __________________________________-->
    <LinearGradientBrush x:Key="DropDown_Normal" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="{StaticResource Color_03}" />
        <GradientStop Color="{StaticResource Color_00}" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="DropDown_Hover" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="{StaticResource Color_012}" />
        <GradientStop Color="{StaticResource Color_010}" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="DropDown_Pressed" StartPoint="0,0 " EndPoint="0,1 ">
        <GradientStop Color="{StaticResource Color_012}" Offset="1" />
        <GradientStop Color="{StaticResource Color_010}" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="DropDown_Disabled" StartPoint="0,0 " EndPoint="0,1 ">
        <GradientStop Color="{StaticResource Color_07}" />
        <GradientStop Color="{StaticResource Color_05}" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="DropDown_Focused" StartPoint="0,0 " EndPoint="0,1 ">
        <GradientStop Color="{StaticResource Color_01}" />
        <GradientStop Color="{StaticResource Color_00}" Offset="1" />
    </LinearGradientBrush>

    <!-- *********************************  ScrollBars Brushes ********************************* -->

    <LinearGradientBrush x:Key="ScrollbarHThumbBgBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="{StaticResource Color_03}" Offset="1"/>
        <GradientStop Color="{StaticResource Color_04}"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ScrollbarVThumbBgBrush" EndPoint="1,0.5" StartPoint="0,0.5">
        <GradientStop Color="{StaticResource Color_03}" Offset="1"/>
        <GradientStop Color="{StaticResource Color_04}"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HorizThumb_Hover" StartPoint="0.684,-0.023" EndPoint="0.684,0.971">
        <GradientStop Color="{StaticResource Color_012}"/>
        <GradientStop Color="{StaticResource Color_010}" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HorizThumb_Pressed" StartPoint="0.684,1.2" EndPoint="0.684,0.03">
        <GradientStop Color="{StaticResource Color_012}"/>
        <GradientStop Color="{StaticResource Color_010}" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="VertThumb_Hover" StartPoint="0.199,0.469" EndPoint="1.17,0.469">
        <GradientStop Color="{StaticResource Color_012}"/>
        <GradientStop Color="{StaticResource Color_010}" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="VertThumb_Pressed" StartPoint="0.199,0.469" EndPoint="1.17,0.469">
        <GradientStop Color="{StaticResource Color_012}" Offset="1"/>
        <GradientStop Color="{StaticResource Color_010}"/>
    </LinearGradientBrush>

    <RadialGradientBrush x:Key="ScrollbarVBgBrush" Center="0,0.5" GradientOrigin="0,0.5" RadiusX="0.5" RadiusY="1.1" Opacity="0.3">
        <GradientStop Color="{StaticResource Color_015}"/>
        <GradientStop Color="{StaticResource Color_021}" Offset="1"/>
    </RadialGradientBrush>
    <RadialGradientBrush x:Key="ScrollbarHBgBrush" Center="0.495,0.128" GradientOrigin="0.5,0.1" RadiusX="1.134" RadiusY="0.65" Opacity="0.3">
        <GradientStop Color="{StaticResource Color_015}"/>
        <GradientStop Color="{StaticResource Color_021}" Offset="1"/>
    </RadialGradientBrush>
    <RadialGradientBrush x:Key="CheckBoxFill" RadiusX="0.916" RadiusY="0.667" Center="0.556,0.654" GradientOrigin="0.556,0.654">
        <GradientStop Color="{StaticResource Color_09}" Offset="0.645"/>
        <GradientStop Color="{StaticResource Color_07}" Offset="1"/>
    </RadialGradientBrush>
    <RadialGradientBrush x:Key="TextBoxInnerShadow" RadiusX="0.916" RadiusY="2.028" Center="0.929,0.499" GradientOrigin="0.929,0.499">
        <GradientStop Color="{StaticResource Color_022}" Offset="0.679"/>
        <GradientStop Color="{StaticResource Color_023}" Offset="0.997"/>
    </RadialGradientBrush>

    <LinearGradientBrush x:Key="TextBoxGradient" StartPoint="0.505,0.469" EndPoint="0.505,-0.023">
        <GradientStop Color="{StaticResource Color_09}" Offset="0.377" />
        <GradientStop Color="{StaticResource Color_08}" Offset="1" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ForegroundBrush" Color="{StaticResource Color_00}"/>
    <SolidColorBrush x:Key="Gray4" Color="{StaticResource Color_00}"/>
    <SolidColorBrush x:Key="Gray2" Color="{StaticResource Color_05}"/>
    <SolidColorBrush x:Key="GridBorderBrush" Color="{StaticResource Color_06}"/>
    <SolidColorBrush x:Key="HeaderNormalBorderBrush" Color="{StaticResource Color_01}"/>
    <SolidColorBrush x:Key="HeaderNormalForegroundBrush" Color="{StaticResource Color_09}"/>
    <SolidColorBrush x:Key="CellItemNormalBackgroundBrush" Color="{StaticResource Color_09}"/>
    <SolidColorBrush x:Key="CellItemNormalBorderBrush" Color="{StaticResource Color_06}"/>
    <SolidColorBrush x:Key="CellItemSelectedBorderBrush" Color="{StaticResource Color_010}"/>
    <SolidColorBrush x:Key="CellRowActiveBorderBrush" Color="{StaticResource Color_010}"/>
    <SolidColorBrush x:Key="TextBoxBorderBrush" Color="{StaticResource Color_05}"/>
    <SolidColorBrush x:Key="DropDownStroke_Normal" Color="{StaticResource Color_00}"/>
    <SolidColorBrush x:Key="DropDownStroke_Hover" Color="{StaticResource Color_010}"/>
    <SolidColorBrush x:Key="DropDownStroke_Disabled" Color="{StaticResource Color_05}"/>
    <SolidColorBrush x:Key="DropDownStroke_Pressed" Color="{StaticResource Color_010}"/>
    <SolidColorBrush x:Key="DropDownStroke_Focused" Color="{StaticResource Color_012}"/>
    <SolidColorBrush x:Key="BaseScrollbarBg" Color="{StaticResource Color_020}"/>
    <SolidColorBrush x:Key="ArrowDarkStroke" Color="{StaticResource Color_03}"/>
    <SolidColorBrush x:Key="ArrowBgColor" Color="{StaticResource Color_04}"/>
    <SolidColorBrush x:Key="ScrollbarStroke" Color="{StaticResource Color_024}"/>
    <SolidColorBrush x:Key="ScrollBarDisabledBackground" Color="{StaticResource Color_09}"/>
    <SolidColorBrush x:Key="ArrowHoverStroke" Color="{StaticResource Color_010}"/>
    <SolidColorBrush x:Key="LightBrush1" Color="{StaticResource Color_012}"/>
    <SolidColorBrush x:Key="DarkBrush1" Color="{StaticResource Color_010}"/>
    <SolidColorBrush x:Key="Gray0" Color="{StaticResource Color_08}"/>
    <SolidColorBrush x:Key="Gray1" Color="{StaticResource Color_07}"/>
    <SolidColorBrush x:Key="Gray3" Color="{StaticResource Color_04}"/>
    <SolidColorBrush x:Key="DisabledStateBrush" Color="{StaticResource Color_04}"/>
    <SolidColorBrush x:Key="Cyan0" Color="{StaticResource Color_012}"/>
    <SolidColorBrush x:Key="Cyan1" Color="{StaticResource Color_011}"/>
    <SolidColorBrush x:Key="Cyan2" Color="{StaticResource Color_010}"/>
    <SolidColorBrush x:Key="LightBrush12" Color="{StaticResource Color_026}"/>
    <SolidColorBrush x:Key="DarkBrush12" Color="{StaticResource Color_026}"/>
    <SolidColorBrush x:Key="TransparentBrush" Color="{StaticResource Color_016}"/>
    <SolidColorBrush x:Key="TransparentBackground1" Color="{StaticResource Color_017}"/>
    <SolidColorBrush x:Key="TransparentBackground2" Color="{StaticResource Color_017}"/>
    <SolidColorBrush x:Key="ReadOnlyElementBg" Color="{StaticResource Color_019}"/>
    <SolidColorBrush x:Key="TransparentBackground3" Color="{StaticResource Color_018}"/>
    <SolidColorBrush x:Key="DisabledElementBorder" Color="{StaticResource Color_020}"/>
    <SolidColorBrush x:Key="DisabledElementBg" Color="{StaticResource Color_020}"/>
    <SolidColorBrush x:Key="TransparentBackground4" Color="{StaticResource Color_018}"/>
    <SolidColorBrush x:Key="InvalidStateBrush" Color="{StaticResource Color_025}"/>
    <SolidColorBrush x:Key="LightForegroundBrush" Color="{StaticResource Color_09}"/>
    <SolidColorBrush x:Key="FocusStroke" Color="{StaticResource Color_013}"/>

    <LinearGradientBrush x:Key="GlyphBrush" EndPoint="0.5,0" StartPoint="0.5,1">
        <GradientStop Color="{StaticResource Color_016}" Offset="0"/>
        <GradientStop Color="{StaticResource Color_016}" Offset="1"/>
    </LinearGradientBrush>

    <!-- END ==== BRUSHES -->

    <!-- *********************************  Horizontal Scrollbar Button Style  ********************************* -->
    <Style x:Key="ScrollBarButton" TargetType="RepeatButton">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Grid x:Name="grid1">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="normal">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidFocused"/>
                                <VisualState x:Name="InvalidUnfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Fill="{StaticResource TransparentBrush}"/>
                        <Path x:Name="normal" Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z " Height="5" Stretch="Uniform" Width="8" Stroke="{StaticResource ArrowDarkStroke}" Fill="{StaticResource ArrowBgColor}"/>
                        <Path x:Name="hover" Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z " Height="5" Stretch="Uniform" Width="8" Fill="{StaticResource LightBrush1}" Opacity="0" Stroke="{StaticResource ArrowHoverStroke}"/>
                        <Path x:Name="pressed" Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z " Height="5" Stretch="Uniform" Width="8" Fill="{StaticResource DarkBrush1}" Opacity="0" Stroke="{StaticResource ArrowHoverStroke}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VScrollBarPageButton" TargetType="RepeatButton">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Rectangle>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HScrollBarThumb" TargetType="Thumb">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Grid Margin="0">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="normal">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="normal" RadiusY="2" RadiusX="2" StrokeThickness="1" Margin="1" Fill="{StaticResource ScrollbarHThumbBgBrush}" Stroke="{StaticResource ArrowDarkStroke}"/>
                        <Rectangle x:Name="hover" RadiusY="2" RadiusX="2" StrokeThickness="1" Margin="1" Fill="{StaticResource HorizThumb_Hover}" Opacity="0" Stroke="{StaticResource ArrowHoverStroke}"/>
                        <Rectangle x:Name="pressed" Fill="{StaticResource HorizThumb_Pressed}" RadiusY="2" RadiusX="2" StrokeThickness="1" Margin="1" Opacity="0" Stroke="{StaticResource ArrowHoverStroke}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VScrollBarThumb" TargetType="Thumb">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Grid x:Name="grid" Height="Auto" Width="Auto">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="normal">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.4"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="normal" RadiusY="2" RadiusX="2" StrokeThickness="1" Margin="1" Stroke="{StaticResource ArrowDarkStroke}" Fill="{StaticResource ScrollbarVThumbBgBrush}" />
                        <Rectangle x:Name="hover" RadiusY="2" RadiusX="2" StrokeThickness="1" Margin="1" Fill="{StaticResource VertThumb_Hover}" Opacity="0" Stroke="{StaticResource ArrowHoverStroke}"/>
                        <Rectangle x:Name="pressed" Fill="{StaticResource VertThumb_Pressed}" RadiusY="2" RadiusX="2" StrokeThickness="1" Margin="1" Opacity="0" Stroke="{StaticResource ArrowHoverStroke}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HScrollBarPageButton" TargetType="RepeatButton">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="WpfScrollbar" TargetType="ScrollBar">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        <Setter Property="Width" Value="18"/>
        <Setter Property="MinWidth" Value="18"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollBar">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                            <RowDefinition Height="0.00001*"/>
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.3"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="repeatButton">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.6"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="repeatButton1">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.6"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="thumb">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Grid.RowSpan="3" StrokeThickness="1" Fill="{StaticResource ScrollbarVBgBrush}" Stroke="{StaticResource ScrollbarStroke}" Margin="0"/>
                        <RepeatButton x:Name="repeatButton" Margin="1" Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}"/>
                        <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource VScrollBarPageButton}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VScrollBarPageButton}"/>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb x:Name="thumb" Style="{DynamicResource VScrollBarThumb}" Margin="4,0"/>
                            </Track.Thumb>
                        </Track>
                        <RepeatButton x:Name="repeatButton1" Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2" Style="{StaticResource ScrollBarButton}" Margin="1" RenderTransformOrigin="0.5,0.5">
                            <RepeatButton.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform Angle="180"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </RepeatButton.RenderTransform>
                            <Path x:Name="smallIncreaseGlyph" Width="9" Height="5" Data="M 4,5 C4,5 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1 0,1 0,0 0,0 0,0 9,0 9,0 9,0 9,1 9,1 9,1 8,1 8,1 8,1 8,2 8,2 8,2 7,2 7,2 7,2 7,3 7,3 7,3 6,3 6,3 6,3 6,4 6,4 6,4 5,4 5,4 5,4 5,5 5,5 5,5 4,5 4,5 z" IsHitTestVisible="False" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{StaticResource GlyphBrush}"/>
                        </RepeatButton>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="MinWidth" Value="0"/>
                <Setter Property="Height" Value="18"/>
                <Setter Property="MinHeight" Value="18"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ScrollBar">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                    <ColumnDefinition Width="0.00001*"/>
                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                </Grid.ColumnDefinitions>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0:0:0.3"/>
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="repeatButton">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="repeatButton1">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled"/>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Rectangle Grid.ColumnSpan="5" StrokeThickness="1" Fill="{StaticResource ScrollbarHBgBrush}" Stroke="{StaticResource ScrollbarStroke}"/>
                                <RepeatButton x:Name="repeatButton" Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{DynamicResource ScrollBarButton}" Opacity="1" RenderTransformOrigin="0.5,0.5">
                                    <RepeatButton.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="-90"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </RepeatButton.RenderTransform>
                                    <Path x:Name="horizontalSmallDecreaseGlyph" Width="5" Height="9" Data="M 0,4 C0,4 1,4 1,4 1,4 1,3 1,3 1,3 2,3 2,3 2,3 2,2 2,2 2,2 3,2 3,2 3,2 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 5,0 5,0 5,0 5,9 5,9 5,9 4,9 4,9 4,9 4,8 4,8 4,8 3,8 3,8 3,8 3,7 3,7 3,7 2,7 2,7 2,7 2,6 2,6 2,6 1,6 1,6 1,6 1,5 1,5 1,5 0,5 0,5 0,5 0,4 0,4 z" IsHitTestVisible="False" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" Fill="{StaticResource GlyphBrush}"/>
                                </RepeatButton>
                                <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource HScrollBarPageButton}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource HScrollBarPageButton}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource HScrollBarThumb}" Margin="0,5"/>
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton x:Name="repeatButton1" Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{DynamicResource ScrollBarButton}" Opacity="1" RenderTransformOrigin="0.5,0.5">
                                    <RepeatButton.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="90"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </RepeatButton.RenderTransform>
                                    <Path x:Name="horizontalSmallIncreaseGlyph" Width="5" Height="9" Data="M 5,4 C5,4 4,4 4,4 4,4 4,3 4,3 4,3 3,3 3,3 3,3 3,2 3,2 3,2 2,2 2,2 2,2 2,1 2,1 2,1 1,1 1,1 1,1 1,0 1,0 1,0 0,0 0,0 0,0 0,9 0,9 0,9 1,9 1,9 1,9 1,8 1,8 1,8 2,8 2,8 2,8 2,7 2,7 2,7 3,7 3,7 3,7 3,6 3,6 3,6 4,6 4,6 4,6 4,5 4,5 4,5 5,5 5,5 5,5 5,4 5,4 z" IsHitTestVisible="False" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" Fill="{StaticResource GlyphBrush}"/>
                                </RepeatButton>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="toggleButtonContentTemplate">
        <Grid Margin="3,0" VerticalAlignment="Center">
            <Path x:Name="BtnArrowBackground" Width="7" Height="4" Data="M 0,0 C0,0 7,0 7,0 7,0 3.5,3.5 3.5,3.5 3.5,3.5 0,0 0,0 z" Stretch="Fill">
                <Path.Fill>
                    <SolidColorBrush  x:Name="BtnArrowColorBackground" Color="{StaticResource Color_00}"/>
                </Path.Fill>
            </Path>
            <Path x:Name="BtnArrowForeground" Width="7" Height="4" Margin="0,2,0,0" Data="M 0,0 C0,0 7,0 7,0 7,0 3.5,3.5 3.5,3.5 3.5,3.5 0,0 0,0 z" Stretch="Fill">
                <Path.Fill>
                    <SolidColorBrush  x:Name="BtnArrowColorForeground" Color="{StaticResource Color_09}"/>
                </Path.Fill>
            </Path>
        </Grid>
    </DataTemplate>

    <!--Start GENERIC-->

    <igControlsPrim:ValueConverterGroup x:Key="boolToVisibility">
        <!-- if true sets visibility to Visible -->
        <igControlsPrim:FixedValueConverter>
            <igControlsPrim:FixedValueConverter.SourceValue>
                <System:Boolean>True
                </System:Boolean>
            </igControlsPrim:FixedValueConverter.SourceValue>
            <igControlsPrim:FixedValueConverter.DestinationValue>
                <Visibility>Visible
                </Visibility>
            </igControlsPrim:FixedValueConverter.DestinationValue>
        </igControlsPrim:FixedValueConverter>
        <!-- if false sets visibility to Collapsed -->
        <igControlsPrim:FixedValueConverter>
            <igControlsPrim:FixedValueConverter.DestinationValue>
                <Visibility>Collapsed
                </Visibility>
            </igControlsPrim:FixedValueConverter.DestinationValue>
        </igControlsPrim:FixedValueConverter>
    </igControlsPrim:ValueConverterGroup>

    <ControlTemplate x:Key="ValidationToolTipTemplate">
        <Grid x:Name="Root" Margin="5,0" Opacity="0" RenderTransformOrigin="0,0">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OpenStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0"/>
                        <VisualTransition GeneratedDuration="0:0:0.2" To="Open">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="xform" Storyboard.TargetProperty="X">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Closed">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Open">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="xform" Storyboard.TargetProperty="X">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity">
                                <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ValidationStates">
                    <VisualState x:Name="Valid"/>
                    <VisualState x:Name="InvalidFocused"/>
                    <VisualState x:Name="InvalidUnfocused"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.RenderTransform>
                <TranslateTransform x:Name="xform" X="-25"/>
            </Grid.RenderTransform>
            <Border Margin="4,4,-4,-4" Background="{StaticResource TransparentBackground1}" CornerRadius="5"/>
            <Border Margin="3,3,-3,-3" Background="{StaticResource TransparentBackground2}" CornerRadius="4"/>
            <Border Margin="2,2,-2,-2" Background="{StaticResource TransparentBackground3}" CornerRadius="3"/>
            <Border Margin="1,1,-1,-1" Background="{StaticResource TransparentBackground4}" CornerRadius="2"/>
            <Border Background="{StaticResource InvalidStateBrush}" CornerRadius="2"/>
            <Border CornerRadius="2">
                <TextBlock MaxWidth="250" Margin="8,4,8,4" Foreground="{StaticResource LightForegroundBrush}" Text="{Binding (Validation.Errors)[0].ErrorContent}" TextWrapping="Wrap" UseLayoutRounding="false"/>
            </Border>
        </Grid>
    </ControlTemplate>

    <!-- JM 05-24-11 Port to WPF.  Change x:Name to x:Key -->
    <Style x:Key="toggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Content" Value="x" />
        <Setter Property="ContentTemplate" Value="{StaticResource toggleButtonContentTemplate}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Width="{TemplateBinding Width}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="hoverElem" Storyboard.TargetProperty="(UIElement.Opacity)" To="1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="pressedElem" Storyboard.TargetProperty="(UIElement.Opacity)" To="1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="checkedElem" Storyboard.TargetProperty="(UIElement.Opacity)" To="1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Fill="{StaticResource DropDown_Normal}" RadiusX="{StaticResource ComboRadius}" RadiusY="{StaticResource ComboRadius}" Stroke="{StaticResource DropDownStroke_Normal}" StrokeThickness="{TemplateBinding BorderThickness}"/>
                        <Rectangle x:Name="hoverElem" Fill="{StaticResource DropDown_Hover}" Opacity="0" RadiusX="{StaticResource ComboRadius}" RadiusY="{StaticResource ComboRadius}"  Stroke="{StaticResource DropDownStroke_Hover}" StrokeThickness="{TemplateBinding BorderThickness}"/>
                        <Rectangle x:Name="pressedElem" Fill="{StaticResource DropDown_Pressed}" Opacity="0" RadiusX="{StaticResource ComboRadius}" RadiusY="{StaticResource ComboRadius}"  Stroke="{StaticResource DropDownStroke_Pressed}" StrokeThickness="{TemplateBinding BorderThickness}"/>
                        <Rectangle x:Name="checkedElem" Fill="{StaticResource DropDown_Focused}" Opacity="0" RadiusX="{StaticResource ComboRadius}" RadiusY="{StaticResource ComboRadius}"  Stroke="{StaticResource DropDownStroke_Focused}" StrokeThickness="{TemplateBinding BorderThickness}"/>
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"
						VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="CrossTemplate" >
        <Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Cross" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value=".7"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Cross" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value=".3"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Cross" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Unfocused"/>
                    <VisualState x:Name="Focused"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <!-- *************************************
									 Clear Selection Button
									 ************************************** -->
            <!-- The button's background needs to be transparent to make it clickable-->
            <Rectangle Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Fill="{StaticResource TransparentBrush}"/>
            <!-- This is the "X" for the button -->
            <Path x:Name="Cross" Data="M17.978895,14.4374 L14.459287,17.981174 L9.5024157,13.021268 L4.5621309,17.986851 L1.0009997,14.46541 L5.96099,9.4979582 L1.0248781,4.5379386 L4.544733,
			1.0159005 L9.5026722,5.9762726 L14.459279,0.99506438 L17.999273,4.5379333 L13.063161,9.5396385 z"
			Fill="{TemplateBinding Background}" Stretch="Fill" UseLayoutRounding="False"  Width="10" Height="10" Opacity=".5"/>

        </Grid>

    </ControlTemplate>

    <Style x:Key="SpecializedTextBoxStyle1" TargetType="igPrimBase:SpecializedTextBox">
        <Setter Property="Padding" Value="4 0 0 0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrimBase:SpecializedTextBox">
                    <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Padding="{TemplateBinding Padding}" VerticalAlignment="Center"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  CheckBox Style  ********************************* -->

    <Style x:Key="igCheckBox" TargetType="CheckBox">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Padding" Value="4,1,0,0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="16"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.2"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="innerShadow" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="disabled" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="checkBox" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="focused" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="invalidUnfocused" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="invalidFocused" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="normal"
    						Opacity="1"
    						Width="13"
    						RadiusX="1"
    						RadiusY="1"
    						Stroke="{StaticResource Gray2}"
    						StrokeThickness="1" HorizontalAlignment="Left" Margin="2,2,0,2" Height="13" VerticalAlignment="Top" Fill="{StaticResource CheckBoxFill}" />
                        <Rectangle x:Name="hover"
    						Width="13"
    						RadiusX="1"
    						RadiusY="1"
    						Stroke="{StaticResource Cyan0}"
    						StrokeThickness="1" HorizontalAlignment="Left" Margin="2,2,0,2" Height="13" VerticalAlignment="Top" Fill="{StaticResource CheckBoxFill}" Opacity="0" />
                        <Rectangle x:Name="pressed"
    						Opacity="0"
    						Width="13"
    						RadiusX="1"
    						RadiusY="1"
    						Stroke="{StaticResource Cyan1}"
    						StrokeThickness="1"
    						Fill="{StaticResource CheckBoxFill}" HorizontalAlignment="Left" Margin="2,2,0,2" Height="13" VerticalAlignment="Top" />
                        <Rectangle x:Name="focused"
    						Opacity="0"
    						Width="13"
    						RadiusX="1"
    						RadiusY="1"
    						Stroke="{StaticResource Cyan1}"
    						StrokeThickness="1"
    						Fill="{StaticResource CheckBoxFill}" HorizontalAlignment="Left" Margin="2,2,0,2" Height="13" VerticalAlignment="Top" />
                        <Rectangle x:Name="disabled"
    						Opacity="0"
    						Width="13"
    						RadiusX="1"
    						RadiusY="1"
    						Stroke="{StaticResource Gray1}"
    						StrokeThickness="1"
    						Fill="{StaticResource CheckBoxFill}" HorizontalAlignment="Left" Margin="2,2,0,2" Height="13" VerticalAlignment="Top" />
                        <Rectangle x:Name="invalidUnfocused"
    						Opacity="0"
    						Width="13"
    						RadiusX="1"
    						RadiusY="1"
    						Stroke="{StaticResource LightBrush12}"
    						StrokeThickness="1" HorizontalAlignment="Left" Margin="2,2,0,2" Height="13" VerticalAlignment="Top" Fill="{StaticResource CheckBoxFill}" />
                        <Rectangle x:Name="invalidFocused"
    						Opacity="0"
    						Width="13"
    						RadiusX="1"
    						RadiusY="1"
    						Stroke="{StaticResource DarkBrush12}"
    						StrokeThickness="1" HorizontalAlignment="Left" Margin="2,2,0,2" Height="13" VerticalAlignment="Top" Fill="{StaticResource CheckBoxFill}" />
                        <Rectangle x:Name="innerShadow"
    						Width="11"
    						StrokeThickness="1" HorizontalAlignment="Left" Margin="3,3,0,0" Height="11" VerticalAlignment="Top" RadiusX="0.5" RadiusY="0.5" Fill="{StaticResource TextBoxInnerShadow}" />
                        <Path x:Name="checkBox"
    						Height="8"
    						Width="9"
    						Stretch="Fill"
    						Opacity="0"
    						Data="M 1145.607177734375,430 C1145.607177734375,430 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1138,434.5538330078125 1138,434.5538330078125 1138,434.5538330078125 1141.482177734375,438 1141.482177734375,438 1141.482177734375,438 1141.96875,437.9375 1141.96875,437.9375 1141.96875,437.9375 1147,431.34619140625 1147,431.34619140625 1147,431.34619140625 1145.607177734375,430 1145.607177734375,430 z"
    						Fill="{StaticResource HeaderNormalBorderBrush}" HorizontalAlignment="Left" Margin="4,5,0,0" UseLayoutRounding="False" VerticalAlignment="Top" />
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="igXamMultiColumnComboEditor" TargetType="igShared:XamMultiColumnComboEditor">
        <Setter Property="Padding" Value="4,2"/>
        <Setter Property="MinHeight" Value="22"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="BorderThickness" Value="1"/>
        <!-- JM 05-24-11 Port to WPF.  Set the TabNavigation property in code behind so we can use the same template for WPF and SL -->
        <!--<Setter Property="TabNavigation" Value="Once"/>-->
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="Background" Value="{StaticResource TextBoxGradient}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Gray2}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igShared:XamMultiColumnComboEditor">
                    <Grid>
                        <Grid.Resources>
                            <Style BasedOn="{StaticResource igCheckBox}" TargetType="CheckBox" />
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value=".55"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00">
                                                <SplineDoubleKeyFrame.Value>
                                                    <System:Double>1</System:Double>
                                                </SplineDoubleKeyFrame.Value>
                                            </SplineDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ModeStates">
                                <VisualState x:Name="Selectable"/>
                                <VisualState x:Name="Editable">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextBoxPresenter" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectConentPanel" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="borderEditMode" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButton" Storyboard.TargetProperty="(Grid.Column)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Int32>2</System:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="WaterMarkStates">
                                <VisualState x:Name="WaterMarkHidden"/>
                                <VisualState x:Name="WaterMarkVisible">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="WaterMark" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DropDownStates">
                                <VisualState x:Name="Closed"/>
                                <VisualState x:Name="Open">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Popup" Storyboard.TargetProperty="IsOpen">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="PositionStates">
                                <VisualState x:Name="Below"/>
                                <VisualState x:Name="Above">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Resizer" Storyboard.TargetProperty="Position">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <igControlsPrim:ResizerPosition>Above</igControlsPrim:ResizerPosition>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Resizer" Storyboard.TargetProperty="(Grid.Row)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Int32>0</System:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootPopupElement" Storyboard.TargetProperty="(Grid.Row)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Int32>1</System:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="ContentPresenterBorder">
                            <Grid x:Name="gridLayout" ShowGridLines="False">

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Popup x:Name="Popup" AllowsTransparency="True" Grid.ColumnSpan="2" VerticalAlignment="Bottom" IsOpen="False">

                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>

                                        <Border x:Name="RootPopupElement" Height="Auto" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinHeight="40" HorizontalAlignment="Stretch" CornerRadius="{StaticResource ComboPopoutRadius}" Background="{StaticResource LightGrayGradient}" BorderBrush="{StaticResource GridBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>

                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>

                                                <igPrimBase:MultiColumnComboItemsPanel x:Name="ItemsPanel" Grid.Row="1"/>
                                                <ScrollBar x:Name="VerticalScrollBar" Grid.Column="1" Grid.Row="1" Style="{StaticResource WpfScrollbar}" />
                                                <ScrollBar x:Name="HorizontalScrollBar" Height="20" Grid.Column="0" Grid.Row="2" Style="{StaticResource WpfScrollbar}" />

                                                <ContentControl x:Name="FooterContentArea"
																										Grid.ColumnSpan="2"
																										Grid.Row="3"
																										Content="{TemplateBinding Footer}"
																										ContentTemplate="{TemplateBinding FooterTemplate}"
																										HorizontalContentAlignment="Stretch"/>
                                            </Grid>

                                        </Border>

                                        <igPrimBase:PopupResizer x:Name="Resizer" Grid.ColumnSpan="2" Grid.Row="1" Popup="{Binding ElementName=Popup}" ResizeElement="{Binding ElementName=RootPopupElement}"
                                                                 Visibility="{Binding AllowDropDownResizing, Converter={StaticResource boolToVisibility}, RelativeSource={RelativeSource TemplatedParent}}"
                                                                    BorderBrush="{StaticResource GridBorderBrush}" />

                                    </Grid>
                                </Popup>

                                <Border x:Name="borderEditMode" Grid.ColumnSpan="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"  CornerRadius="{StaticResource ComboTextBoxRadius}" Visibility="Collapsed" Margin="0,0,-1,0"/>

                                <Rectangle x:Name="FocusVisualElement" Grid.ColumnSpan="2" RadiusX="{StaticResource ComboRadius}" RadiusY="{StaticResource ComboRadius}" Margin="0" IsHitTestVisible="false" Opacity="0" Stroke="{StaticResource LightBrush1}" StrokeThickness="1"/>

                                <ToggleButton x:Name="ToggleButton" Grid.Column="1"  IsTabStop="False"  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource toggleButtonStyle}" Width="{StaticResource ToggleButtonWidth}" igControlsPrim:XamlHelper.Focusable="False"/>

                                <TextBlock x:Name="WaterMark"
																			 HorizontalAlignment="Stretch"
																			 VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
																			 Foreground="{TemplateBinding Foreground}"
																			 IsHitTestVisible="False"
																			 Padding="{TemplateBinding Padding}"
																			 Text="{TemplateBinding EmptyText}"
																			 Visibility="Collapsed"/>
                                <igPrimBase:SpecializedTextBox x:Name="TextBoxPresenter"
																			HorizontalAlignment="Stretch"
																			Margin="1,1,0,1"
																			Style="{StaticResource SpecializedTextBoxStyle1}"
																Background="{StaticResource TransparentBrush}"
																			BorderThickness="0"
																			Foreground="{TemplateBinding Foreground}"
																			Visibility="Collapsed"/>

                                <StackPanel x:Name="MultiSelectConentPanel"
																				HorizontalAlignment="Stretch"
																				Margin="{TemplateBinding Padding}"
																				VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
																				Orientation="Horizontal"/>

                                <Button Grid.Column="1" IsEnabled="False" Visibility="{TemplateBinding SelectedItemsResetButtonVisibility}" Width="20" Height="20"
                        			HorizontalAlignment="Right" Margin="0,0,4,0" VerticalAlignment="Center" ClickMode="Press" Cursor="Hand" Background="{StaticResource Gray4}" Template="{StaticResource CrossTemplate}">
                                    <igShared:Commanding.Command>
                                        <igPrimBase:MultiColumnComboEditorCommandSource CommandType="ClearSelection" EventName="Click"/>
                                    </igShared:Commanding.Command>
                                    <ToolTipService.ToolTip>
                                        <ToolTip Content="{Binding LocalizedStrings[SelectedItemsResetButton_ToolTip], RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </ToolTipService.ToolTip>
                                </Button>
                            </Grid>
                        </Border>

                        <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource LightForegroundBrush}" IsHitTestVisible="false" Opacity="0" RadiusX="1" RadiusY="1"/>

                        <Border x:Name="ValidationErrorElement" BorderBrush="{StaticResource InvalidStateBrush}" BorderThickness="1" CornerRadius="1" Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
                                    <ToolTip.Triggers>
                                        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsHitTestVisible">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <System:Boolean>true</System:Boolean>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </ToolTip.Triggers>
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <Grid Width="12" Height="12" HorizontalAlignment="Right" Margin="1,-4,-4,0" VerticalAlignment="Top" Background="{StaticResource TransparentBrush}">
                                <Path Margin="1,3,0,0" Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="{StaticResource InvalidStateBrush}"/>
                                <Path Margin="1,3,0,0" Data="M 0,0 L2,0 L 8,6 L8,8" Fill="{StaticResource LightForegroundBrush}"/>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="igShared:XamMultiColumnComboEditor" BasedOn="{StaticResource igXamMultiColumnComboEditor}"/>

    <Style x:Key="igComboHeaderCellControl" TargetType="igShared:ComboHeaderCellControl">
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Background" Value="{StaticResource HeaderNormalBackgroundBrush}"/>
        <Setter Property="BorderThickness" Value="{StaticResource ComboCellBorderNormalThickness}"/>
        <Setter Property="BorderBrush" Value="{StaticResource HeaderNormalBorderBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource HeaderNormalForegroundBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="MinHeight" Value="24"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igShared:ComboHeaderCellControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd_Hover" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidFocused"/>
                                <VisualState x:Name="InvalidUnfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                        <Rectangle x:Name="Bd_Hover" Fill="{StaticResource HeaderHoverBackgroundBrush}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{StaticResource ComboCellBorderMouseOverThickness}" Visibility="Collapsed"/>
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="igShared:ComboHeaderCellControl" BasedOn="{StaticResource igComboHeaderCellControl}"/>

    <Style  x:Key="igComboCellControl" TargetType="igShared:ComboCellControl">
        <Setter Property="BorderThickness" Value="{StaticResource ComboCellBorderNormalThickness}"/>
        <Setter Property="Background" Value="{StaticResource CellItemNormalBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource CellItemNormalBorderBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igShared:ComboCellControl">
                    <Grid  Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="mouseOverRectangle" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value=".55"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected"/>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="selectedRectangle" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidFocused"/>
                                <VisualState x:Name="InvalidUnfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                        <Rectangle x:Name="mouseOverRectangle" Fill="{StaticResource CellRowHoverBackgroundBrush}" Stroke="{StaticResource CellItemNormalBorderBrush}" StrokeThickness="{StaticResource ComboCellBorderMouseOverThickness}" IsHitTestVisible="False" Opacity="0"/>
                        <Rectangle x:Name="selectedRectangle" Fill="{StaticResource CellItemSelectedBackgroundBrush}" Stroke="{StaticResource CellItemSelectedBorderBrush}" StrokeThickness="{StaticResource ComboCellBorderSelectedThickness}" IsHitTestVisible="False" Opacity="0"/>
                        <Rectangle x:Name="FocusVisualElement" Fill="{StaticResource CellRowActiveBackgroundBrush}" Stroke="{StaticResource CellRowActiveBorderBrush}" StrokeThickness="{StaticResource ComboCellBorderFocusThickness}" Visibility="Collapsed"/>
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="igShared:ComboCellControl" BasedOn="{StaticResource igComboCellControl}"/>

    <Style x:Key="igRowSelectionCheckBoxCellControl" TargetType="igShared:RowSelectionCheckBoxCellControl">
        <Setter Property="Padding" Value="4"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{StaticResource CellItemNormalBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource CellItemNormalBorderBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igShared:RowSelectionCheckBoxCellControl">
                    <Grid Background="{TemplateBinding Background}">
                        <CheckBox x:Name="Checkbox" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" IsHitTestVisible="False"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="igShared:RowSelectionCheckBoxCellControl" BasedOn="{StaticResource igRowSelectionCheckBoxCellControl}"/>

    <Style x:Key="igRowSelectionCheckBoxHeaderCellControl" TargetType="igShared:RowSelectionCheckBoxHeaderCellControl">
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Background" Value="{StaticResource HeaderNormalBackgroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igShared:RowSelectionCheckBoxHeaderCellControl">
                    <Grid>
                        <Rectangle Fill="{TemplateBinding Background}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="igShared:RowSelectionCheckBoxHeaderCellControl" BasedOn="{StaticResource igRowSelectionCheckBoxHeaderCellControl}"/>

    <Style x:Key="igHighlightingTextBlock" TargetType="igControlsPrim:HighlightingTextBlock">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igControlsPrim:HighlightingTextBlock">
                    <Grid>
                        <TextBlock x:Name="TextBlock"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="igControlsPrim:HighlightingTextBlock" BasedOn="{StaticResource igHighlightingTextBlock}"/>

</ResourceDictionary>