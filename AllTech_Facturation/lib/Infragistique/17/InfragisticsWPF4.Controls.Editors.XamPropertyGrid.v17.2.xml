<?xml version="1.0"?>
<doc>
    <assembly>
        <name>InfragisticsWPF4.Controls.Editors.XamPropertyGrid.v17.2</name>
    </assembly>
    <members>
        <member name="M:Infragistics.Documents.RichText.TreeList`2.Enumerator.#ctor(Infragistics.Documents.RichText.TreeList{`0,`1},`0)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.RichText.TreeList`2.Enumerator.PushAncestorsHelper(`0,System.Boolean)">
            <summary>
            Pushes the n's ancestors to _ancestors. 'IncludeN' parameter indicates whether to include 'n' node itself.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.RichText.TreeList`2.Node.InitializeAggregateInfo">
            <summary>
            Called to re-initialize aggregation of information from the left and the right child nodes 
            and current node's info.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.RichText.TreeList`2.Node.Aggregate_Insert(`0)">
            <summary>
            Called when the specified node is inserted as this node's descendant.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.RichText.TreeList`2.Node.Aggregate_Remove(`0)">
            <summary>
            Called when the specified descendant node is removed.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.RichText.TreeList`2.Node.SetItem(`1)">
            <summary>
            This method is used to set or change the item of the node.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Infragistics.Documents.RichText.TreeList`2.#ctor">
            <summary>
            Constructor. Initializes a new instance of <b>TreeList</b>.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.RichText.TreeList`2.Count">
            <summary>
            Gets the count of items.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.RichText.TreeList`2.Item(System.Int32)">
            <summary>
            Gets or sets the item at the specified index.
            </summary>
            <param name="index">Index at which to get or set the item.</param>
            <returns>The item at the specified index.</returns>
        </member>
        <member name="P:Infragistics.Documents.RichText.TreeList`2.IsReadOnly">
            <summary>
            Indicates whether the list is read-only.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.RichText.TreeList`2.NodeHasParentOverride">
            <summary>
            Indicates whether the TNode has parent and should have its SetParent called. 
            Default implementation returns false.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.RichText.TreeList`2.NotifyChangesOverride">
            <summary>
            Indicates whether to call NotifyCollectionChanged, OnItemAdded and OnItemRemoved methods. 
            Default implementation returns false.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.RichText.TreeList`2.TrackNodesOnItemsOverride">
            <summary>
            Indicates whether the derived class supports GetItemNode and SetItemNode methods.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.RichText.TreeList`2.Version">
            <summary>
            Gets the version number of this list which is simply an integer value that's incremented every time
            a change is made to the list.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.RichText.TreeList`2.BalanceHelper(`0,`0)">
            <summary>
            Rotates the 'n' node for balancing purposes if required.
            </summary>
            <param name="parent"></param>
            <param name="n"></param>
        </member>
        <member name="M:Infragistics.Documents.RichText.TreeList`2.CalcRotateDirection(`0)">
            <summary>
            Calculates the rotate direction for the purposes of load balancing.
            </summary>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Documents.RichText.TreeList`2.IndexOfHelper_UsingParent(`0)">
            <summary>
            Calculates the index of the item associated with the specified node in the collection. This method
            requires parent references.
            </summary>
            <param name="n">Item node.</param>
            <returns>Index of the item of the specified node in the collection.</returns>
        </member>
        <member name="M:Infragistics.Documents.RichText.TreeList`2.RemoveHelper(`0,`0,System.Int32)">
            <summary>
            Removes the item at 'i'. Returns the removed node.
            </summary>
            <param name="parent"></param>
            <param name="n"></param>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Documents.RichText.TreeList`2.RemoveMax(`0,`0)">
            <summary>
            Removes the maximum node of the tree formed by the 'n'. Note that if 'n' is the maximum node and the parent is
            null then it will not be removed.
            </summary>
            <returns>Returns the removed node or null if no node is removed.</returns>
        </member>
        <member name="M:Infragistics.Documents.RichText.TreeList`2.RemoveMin(`0,`0)">
            <summary>
            Removes the minimum node of the tree formed by the 'n'. Note that if 'n' is the minimum node and the parent is
            null then it will not be removed.
            </summary>
            <returns>Returns the removed node or null if no node is removed.</returns>
        </member>
        <member name="M:Infragistics.Documents.RichText.TreeList`2.GetItemNode(`1)">
            <summary>
            If the derived class returns true from TrackNodesOnItemsOverride then this method will be called
            to retrieve the node for the item, previously set via the <see cref="M:Infragistics.Documents.RichText.TreeList`2.SetItemNode(`1,`0)"/> method.
            </summary>
            <param name="item">Item for which to get the node.</param>
        </member>
        <member name="M:Infragistics.Documents.RichText.TreeList`2.OnItemAdded(`1)">
            <summary>
            If the 'notifyChanges' parameter was passed in as true into the constructor, this method 
            is called when an item is added.
            </summary>
            <param name="item">Item that was added.</param>
        </member>
        <member name="M:Infragistics.Documents.RichText.TreeList`2.OnItemRemoved(`1)">
            <summary>
            If the 'notifyChanges' parameter was passed in as true into the constructor, this method 
            is called when an item is removed.
            </summary>
            <param name="item">Item that was removed.</param>
        </member>
        <member name="M:Infragistics.Documents.RichText.TreeList`2.RaiseNodesRequireParentsHelper">
            <summary>
            Raises an invalid operation exception if NodeHasParentOverride is false.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.RichText.TreeList`2.RefreshNotifyChanges">
            <summary>
            Called to notify that the value of the NotifyChangesOverride property has changed.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.RichText.TreeList`2.SetItemNode(`1,`0)">
            <summary>
            If the derived class returns true from TrackNodesOnItemsOverride then this method will be called
            to store the node for the item, for later retrieval via <see cref="M:Infragistics.Documents.RichText.TreeList`2.GetItemNode(`1)"/> method.
            </summary>
            <param name="item">Item for which to set the node.</param>
            <param name="node">Node associated with the item.</param>
        </member>
        <member name="M:Infragistics.Documents.RichText.TreeList`2.GetEnumeratorStartingAt(System.Int32)">
            <summary>
            Gets an enumerator that traverses all the items starting at the item with the specified index.
            The enumerator will be in a state where calling MoveNext the first time will traverse to the item
            at the specified index.
            </summary>
            <param name="index">Start item index.</param>
            <returns>IEnumerator instance.</returns>
        </member>
        <member name="M:Infragistics.Documents.RichText.TreeList`2.GetEnumeratorStartingAt(`1)">
            <summary>
            Gets an enumerator that traverses all the items starting at the specified item.
            The enumerator will be in a state where calling MoveNext for the first time will
            traverse to the specified item.
            </summary>
            <param name="item">Start item.</param>
            <returns>IEnumerator instance.</returns>
        </member>
        <member name="M:Infragistics.Documents.RichText.TreeList`2.GetItems(`0)">
            <summary>
            Gets the items starting at the item associated with the specified TNode instance in the tree.
            </summary>
            <param name="startAtNode">Start item.</param>
            <returns>IEnumerable that will traverse items starting at the specified item, including the item itself.</returns>
        </member>
        <member name="M:Infragistics.Documents.RichText.TreeList`2.GetItems(System.Int32)">
            <summary>
            Gets the items starting at the specified index.
            </summary>
            <param name="startAtIndex">Start index.</param>
            <returns>IEnumerable that will traverse items starting at the specified index, including the index itself.</returns>
        </member>
        <member name="M:Infragistics.Documents.RichText.TreeList`2.GetItems(`1)">
            <summary>
            Gets the items starting at the item associated with the specified item in the tree.
            </summary>
            <param name="startAtItem">Start item.</param>
            <returns>IEnumerable that will traverse items starting at the specified item, including the item itself.</returns>
        </member>
        <member name="M:Infragistics.Documents.RichText.TreeList`2.InvalidateAggregateInfo(`0)">
            <summary>
            Invalidates the node's aggregate info. This method synchronously calculates aggregate information
            on this node and all its ancestors. It basically calls InitializeAggregateInfo on the node and
            its ancestors.
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:Infragistics.Documents.RichText.TreeList`2.InvalidateAggregateInfoOnAllNodes">
            <summary>
            Re-calculates aggregate info on all the nodes.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.RichText.TreeList`2.Clear">
            <summary>
            Clears the list.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.RichText.TreeList`2.Contains(`1)">
            <summary>
            Indicates whether the specified item is in the list.
            </summary>
            <param name="item">Item to check for existence in the list.</param>
            <returns>True if the item exists in the list. False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.RichText.TreeList`2.CopyTo(`1[],System.Int32)">
            <summary>
            Copies the items in this list to the specified array.
            </summary>
            <param name="array">Destination array to which to copy items.</param>
            <param name="arrayIndex">Index in the array at which to start copying items.</param>
        </member>
        <member name="M:Infragistics.Documents.RichText.TreeList`2.GetEnumerator">
            <summary>
            Returns the enumerator that can be used for traversing items in the list.
            </summary>
            <returns>Enumerator that can be used for traversing items in the list.</returns>
        </member>
        <member name="M:Infragistics.Documents.RichText.TreeList`2.IndexOf(`1)">
            <summary>
            Gets the index of the specified item.
            </summary>
            <param name="item">Item whose index to find.</param>
            <returns>The index of the item. If the item doesn't exist in the list then returns -1.</returns>
        </member>
        <member name="M:Infragistics.Documents.RichText.TreeList`2.Remove(`1)">
            <summary>
            Removes the specified item from the list. If the item doesn't exist in the list then this method takes no action.
            </summary>
            <param name="item">Item to remove.</param>
            <returns>True if the specified item was found. False if the item doesn't exist in the list.</returns>
        </member>
        <member name="M:Infragistics.Documents.RichText.TreeList`1.#ctor">
            <summary>
            Constructor. Initializes a new instance of <see cref="T:Infragistics.Documents.RichText.TreeList`1"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.RichText.SortedTreeList`2.#ctor(System.Collections.Generic.IComparer{`0},System.Func{`1,`0})">
            <summary>
            Constructor. Initializes a new instance of <see cref="T:Infragistics.Documents.RichText.SortedTreeList`2"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.RichText.SortedTreeList`2.ContainsKey(`0)">
            <summary>
            Indicates whether an item with the specified key is in the list.
            </summary>
            <param name="key">Key to check for existence in the list.</param>
            <returns>True if the item with the specified key exists in the list. False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.RichText.SortedTreeList`2.OnKeyChanged(`1,`0)">
            <summary>
            Re-sorts the specified item if it exists in the collection 
            to its correct sort location based on its new key.
            </summary>
            <param name="item">Item whose key changed.</param>
            <param name="oldKey">Old key of the item. This is used to locate the item in the collection.</param>
            <remarks>
            <para class="body">
            <b>Note</b> that this method will remove the item from its previous location 
            and re-insert it in its proper sort location based on the new key. In the process 
            it will send a Remove and Add notifications.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.RichText.SortedTreeList`2.Find(`0,Infragistics.Documents.RichText.TreeList{Infragistics.Documents.RichText.TreeList{`1}.NodeEx,`1}.Node@)">
            <summary>
            Finds the index of the specified item. If the item is found then returns the index. 
            If the item is not found then returns index where the item would be if it were to 
            be inserted in the list's current state.
            </summary>
            <param name="itemKey">Key of the item to find.</param>
            <param name="match">This will be set to the node containing the found item.</param>
            <returns>
            If the item is found then returns the index. 
            If the item is not found then returns index where the item would be if it were to 
            be inserted in the list's current state.
            </returns>
        </member>
        <member name="T:Infragistics.Controls.Primitives.CommandsHelper`1">
            <summary>
            Provides the list of RoutedCommands supported by the XamMaskedInput. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Primitives.CommandsHelper`1.#ctor(Infragistics.Controls.Primitives.CommandsHelper{`0}.CommandWrapper[],Infragistics.Controls.Primitives.CommandsHelper{`0}.CommandDefinition[])">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Primitives.CommandsHelper`1"/>
            </summary>
            <param name="commands">An array of <see cref="T:Infragistics.Controls.Primitives.CommandsHelper`1.CommandWrapper"/> instances</param>
            <param name="minimumRequiredStates">An array of definitions for the command dictating their required and minimum states</param>
        </member>
        <member name="M:Infragistics.Controls.Primitives.CommandsHelper`1.DoesMinimumStateMatch(`0,System.Int64)">
            <summary>
            Returns a nullable boolean indicating whether the specified command meets the required and disallowed states of the requirements for the specified command.
            </summary>
            <param name="commandId">The id of the command being evaluated</param>
            <param name="controlState">The current state of the control</param>
            <returns>If a minimum required state was not provided for the specified command when the object was constructed then null is returned. If there is a minimum required state for the specified command then true is returned if the requirements are satisfied based on the specified <paramref name="controlState"/>; otherwise false is returned.</returns>
        </member>
        <member name="M:Infragistics.Controls.Primitives.CommandsHelper`1.DoesMinimumStateMatch(`0,System.Func{System.Int64,System.Int64})">
            <summary>
            Returns a nullable boolean indicating whether the specified command meets the required and disallowed states of the requirements for the specified command.
            </summary>
            <param name="commandId">The id of the command being evaluated</param>
            <param name="getCurrentStates">Method used to obtain the current state of the control given a set of states for the command based on the minimum requirements provided for the specified command when the helper was constructed.</param>
            <returns>If a minimum required state was not provided for the specified command when the object was constructed then null is returned. If there is a minimum required state for the specified command then true is returned if the requirements are satisfied based on the specified current control state returned from the <paramref name="getCurrentStates"/>; otherwise false is returned.</returns>
        </member>
        <member name="M:Infragistics.Controls.Primitives.CommandsHelper`1.GetMatchingCommands(System.Windows.Input.Key,System.Windows.Input.ModifierKeys,System.Int64)">
            <summary>
            Returns an enumerable of commands based on the specified key and modifier keys for the specified current control state.
            </summary>
            <param name="key">The key being evaluated</param>
            <param name="modifierKeys">The current state of the modifier keys</param>
            <param name="controlState">The current state of the control</param>
            <returns>An enumerable of command ids for the commands mapped to the specified key for the specified modifier keys and control state</returns>
        </member>
        <member name="M:Infragistics.Controls.Primitives.CommandsHelper`1.GetMatchingCommands(System.Windows.Input.Key,System.Windows.Input.ModifierKeys,System.Func{System.Int64,System.Int64})">
            <summary>
            Returns an enumerable of commands based on the specified key and modifier keys for the specified current control state.
            </summary>
            <param name="key">The key being evaluated</param>
            <param name="modifierKeys">The current state of the modifier keys</param>
            <param name="getCurrentStates">Method used to obtain the current state of the control given a set of states for the commands matching the specified key and modifiers</param>
            <returns>An enumerable of command ids for the commands mapped to the specified key for the specified modifier keys and control state</returns>
        </member>
        <member name="T:Infragistics.Controls.Primitives.ScrollInfo">
            <summary>
            Exposes scrollbar related settings.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Primitives.ScrollInfo.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Primitives.ScrollInfo"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.ScrollInfo.ComputedScrollBarIsEnabled">
            <summary>
            Returns a value indicating the preferred IsEnabled state of the scrollbar.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.ScrollInfo.ComputedScrollBarVisibility">
            <summary>
            Returns a value indicating the preferred visibility of the scrollbar.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.ScrollInfo.Extent">
            <summary>
            Returns the Extent value
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.ScrollInfo.IsInUse">
            <summary>
            Indicates if the scroll info is in use.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.ScrollInfo.LargeChange">
            <summary>
            Returns or sets an optional large change
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.ScrollInfo.LargeChangeResolved">
            <summary>
            Returns the resolved large change amount
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.ScrollInfo.Maximum">
            <summary>
            Returns the Maximum
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.ScrollInfo.Minimum">
            <summary>
            Returns or sets the Minimum value
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.ScrollInfo.Offset">
            <summary>
            Returns the Offset value
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.ScrollInfo.ScrollBarVisibility">
            <summary>
            Returns or sets a value used to determine when the scroll bar should be visible
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.ScrollInfo.ScrollableExtent">
            <summary>
            Returns the difference between the viewport and extent.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.ScrollInfo.SmallChange">
            <summary>
            Returns or sets the SmallChange value
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.ScrollInfo.Viewport">
            <summary>
            Returns the Viewport value
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Primitives.ScrollInfo.Initialize(System.Double,System.Double,System.Double)">
            <summary>
            Initializes the state of the scroll info.
            </summary>
            <param name="viewport">The viewport extent (i.e. the visible area)</param>
            <param name="extent">The overall extent (i.e. the size of the content)</param>
            <param name="offset">The position within the scrollable area</param>
        </member>
        <member name="M:Infragistics.Controls.Primitives.ScrollInfo.OnPropertyChanged(System.String)">
            <summary>
            Invoked when a property notification should be sent.
            </summary>
            <param name="propertyName">The string identifying the property being changed</param>
        </member>
        <member name="E:Infragistics.Controls.Primitives.ScrollInfo.PropertyChanged">
            <summary>
            Invoked when the value of a property of the object has changed.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Primitives.MergedScrollInfo">
            <summary>
            Custom scroll info that is used to aggregate the values (other than offset) of multiple scroll infos
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Primitives.ExtendedRangeScrollInfo.VerifyRange(System.Double)">
            <summary>
            Invoked to ensure that the range reflects the appropriate values for the specified scroll offset.
            </summary>
            <returns>Returns the adjusted offset</returns>
        </member>
        <member name="T:Infragistics.Controls.Primitives.ScrollBarInfoMediator">
            <summary>
            Helper class for managing the properties of a ScrollBar and ScrollInfo
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.ScrollBarInfoMediator.IsInitializingScrollBar">
            <summary>
            Returns a boolean indicating if the scrollbar is being initialized based on the scroll info.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Primitives.ScrollBarVisibilityCoordinator">
            <summary>
            Helper class for synchronizing/coordinating the visibility of multiple ScrollBarInfoMediator instances. Essentially this 
            is used when there are multiple scrollbars in the ui and their Visibility should be tied together.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Primitives.ExtendedScrollArrowHelperBase.OnScrollBarChanged(Infragistics.Controls.Primitives.IPlatformScrollBarAdapter,Infragistics.Controls.Primitives.IPlatformScrollBarAdapter)">
            <summary>
            Invoked when the ScrollBar property has been changed.
            </summary>
            <param name="oldValue">Old scrollbar</param>
            <param name="newValue">New scrollbar</param>
        </member>
        <member name="F:Infragistics.Controls.Primitives.ScrollBarToScrollInfoManager.LargeChangeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Primitives.ScrollBarToScrollInfoManager.LargeChange"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Primitives.ScrollBarToScrollInfoManager.MaximumProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Primitives.ScrollBarToScrollInfoManager.Maximum"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Primitives.ScrollBarToScrollInfoManager.MinimumProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Primitives.ScrollBarToScrollInfoManager.Minimum"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Primitives.ScrollBarToScrollInfoManager.SmallChangeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Primitives.ScrollBarToScrollInfoManager.SmallChange"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Primitives.ScrollBarToScrollInfoManager.ValueProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Primitives.ScrollBarToScrollInfoManager.Value"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Primitives.ScrollBarToScrollInfoManager.ViewportSizeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Primitives.ScrollBarToScrollInfoManager.ViewportSize"/> dependency property
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Primitives.ElementScrollInfo">
            <summary>
            Custom ScrollInfo class that is associated with a specific element and will invalidate the measure when the scroll position changes.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.ElementScrollInfo.IsInUse">
            <summary>
            Indicates if the scroll info is in use.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Primitives.ScrollInfoAutomationProvider">
            <summary>
            Automation IScrollProvider that deals with a horizontal and vertical <see cref="T:Infragistics.Controls.Primitives.ScrollInfo"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Primitives.ScrollInfoTouchHelper">
            <summary>
            Helper class for performing scroll operations resulting from touch interactions.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Primitives.ScrollInfoTouchHelper.#ctor(System.Tuple{Infragistics.Controls.Primitives.ScrollInfo,Infragistics.Controls.ScrollType,System.Func{System.Double}},System.Tuple{Infragistics.Controls.Primitives.ScrollInfo,Infragistics.Controls.ScrollType,System.Func{System.Double}},System.Func{System.Windows.FrameworkElement,System.Windows.Point,System.Windows.UIElement,Infragistics.Controls.TouchScrollMode},System.Boolean)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Primitives.ScrollInfoTouchHelper"/>
            </summary>
            <param name="horizontalScrollInfo">The horizontal scroll info. This includes the ScrollInfo that does the scrolling, the type of scrolling done, a function to return the width of the first item.</param>
            <param name="verticalScrollInfo">The vertical scroll info. This includes the ScrollInfo that does the scrolling, the type of scrolling done, a function to return the height of the first item.</param>
            <param name="getScrollModeFromPointCallback">Optional method used to determine if the specified point is valid for scrolling</param>
            <param name="shouldSuspendExtendedRangeChange">Optional parameter used to determine if the change of the scroll range should be suspended during a touch drag</param>
        </member>
        <member name="F:Infragistics.Controls.Primitives.ScrollInfoTouchAction.Drag">
            <summary>
            The touch was initiated and dragged
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Primitives.ScrollInfoTouchAction.Click">
            <summary>
            The touch was initiated and released
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.AutomationPeers.PropertyGridItemViewAutomationPeer">
            <summary>
            Exposes <see cref="T:Infragistics.Controls.Editors.Primitives.PropertyGridCategoryItemView"/> and <see cref="T:Infragistics.Controls.Editors.Primitives.PropertyGridPropertyItemView"/> types to UI Automation.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.AutomationPeers.PropertyGridItemViewAutomationPeer.#ctor(System.Windows.FrameworkElement)">
            <summary>
            Constructor
            </summary>
            <param name="owner">The <see cref="T:Infragistics.Controls.Editors.Primitives.PropertyGridCategoryItemView"/> or <see cref="T:Infragistics.Controls.Editors.Primitives.PropertyGridPropertyItemView"/> for which the peer is being created</param>
        </member>
        <member name="T:Infragistics.Controls.Editors.PropertyGridEditorDefinitionCollection">
            <summary>
            A collection of <see cref="T:Infragistics.Controls.Editors.PropertyGridEditorDefinition"/>s that are used to override the default editors
            for <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/>s with a specific type or name, or for <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/>s that belong to a specific Category.
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridEditorDefinition"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.PropertyGridEditorDefinitionCollection.GetByCategory(System.String)">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Editors.PropertyGridEditorDefinition"/> (if any) that is defined for the specified category.
            </summary>
            <param name="categoryName"></param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridEditorDefinitionCollection.PropertyGrid">
            <summary>
            Returns the associated <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.PropertyGridEditorDefinitionCollection.GetByPropertyName(System.String)">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Editors.PropertyGridEditorDefinition"/> (if any) that is defined for the specified property name.
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.PropertyGridEditorDefinitionCollection.GetByTargetType(System.Type)">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Editors.PropertyGridEditorDefinition"/> (if any) that is defined for the specified type.
            </summary>
            <param name="targetType"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Editors.PropertyGridItemCollection">
            <summary>
            A read-only collection of <see cref="T:Infragistics.Controls.Editors.PropertyGridItem"/>s.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.XamPropertyGrid.Items"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridItem"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridItemCollection.PropertyGrid">
            <summary>
            Returns the associated <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.PropertyGridCommandBase">
            <summary>
            Base class for all commands that deal with a <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridCommandBase.CanExecute(System.Object)">
            <summary>
            Reports if the command can be executed on the object inputted.
            </summary>
            <param name="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridCommandBase.Execute(System.Object)">
            <summary>
            Executes the command 
            </summary>
            <param name="parameter">The <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/> object that will be executed against.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridCommandBase.ExecuteCommand(Infragistics.Controls.Editors.XamPropertyGrid,System.Object)">
            <summary>
            Executes the specific command on the specified <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/>
            </summary>
            <param name="ctrl">The control for which the command will be executed.</param>
            <param name="parameter">The parameter for the command</param>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.PropertyGridCommandSource">
            <summary>
            The command source object for <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridCommandSource.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Editors.Primitives.PropertyGridCommandSource"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridCommandSource.CommandType">
            <summary>
            Gets or sets the <see cref="T:Infragistics.Controls.Editors.PropertyGridCommandType"/> which is to be executed by the command.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridCommandSource.ResolveCommand">
            <summary>
            Generates the <see cref="T:System.Windows.Input.ICommand"/> object that will execute the command.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.PropertyGridPropertyItemCommandSource">
            <summary>
            The command source object for <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridPropertyItemCommandSource.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Editors.Primitives.PropertyGridPropertyItemCommandSource"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridPropertyItemCommandSource.CommandType">
            <summary>
            Gets or sets the <see cref="T:Infragistics.Controls.Editors.PropertyGridCommandType"/> which is to be executed by the command.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridPropertyItemCommandSource.ResolveCommand">
            <summary>
            Generates the <see cref="T:System.Windows.Input.ICommand"/> object that will execute the command.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.PropertyGridCommand">
            <summary>
            A command object used to execute a command for a <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridCommand.#ctor(Infragistics.Controls.Editors.PropertyGridCommandType)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Editors.Primitives.PropertyGridCommand"/>
            </summary>
            <param name="commandType"></param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridCommand.CanExecute(System.Object)">
            <summary>
            Reports if the command can be executed on the object inputted.
            </summary>
            <param name="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridCommand.ExecuteCommand(Infragistics.Controls.Editors.XamPropertyGrid,System.Object)">
            <summary>
            Executes the command
            </summary>
            <param name="propertyGrid">The <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/> object that will execute the command.</param>
            <param name="parameter">The parameter for the command</param>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.PropertyGridPropertyItemCommand">
            <summary>
            A command object used to execute a command for a <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridPropertyItemCommand.#ctor(Infragistics.Controls.Editors.PropertyGridCommandType)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Editors.Primitives.PropertyGridPropertyItemCommand"/>
            </summary>
            <param name="commandType"></param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridPropertyItemCommand.CanExecute(System.Object)">
            <summary>
            Reports if the command can be executed on the object inputted.
            </summary>
            <param name="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridPropertyItemCommand.ExecuteCommand(Infragistics.Controls.Editors.XamPropertyGrid,System.Object)">
            <summary>
            Executes the command
            </summary>
            <param name="propertyGrid">The <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/> object that will execute the command.</param>
            <param name="parameter">The parameter for the command</param>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.BoundPropertyBorderBrushConverter">
            <summary>
            An <see cref="T:System.Windows.Data.IValueConverter"/> for the BorderBrush property on the ContentControl that contains the property editor.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.ExpandableObjectMarginConverter">
            <summary>
            Converts a nesting level (represented as an integer) to a Thickness that has its 'left' member 
            set to an appropriate pixel value.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.ExpandableObjectMarginConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.ExpandableObjectMarginConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.GridLengthConverter">
            <summary>
            Converts a double value to a GridLength.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.GridLengthConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.GridLengthConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.NullableColorConverter">
            <summary>
            An <see cref="T:System.Windows.Data.IValueConverter"/> for bindings off the SelectedColor property which can be null.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.PropertyItemMarginConverter">
            <summary>
            Converts a nesting level (represented as an integer) to a Thickness that has its 'left' member 
            set to an appropriate pixel value.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyItemMarginConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyItemMarginConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridBooleanEditor.Dispose">
            <summary>
            Called when the instance is about to be discarded.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditor.Dispose">
            <summary>
            Called when the instance is about to be discarded.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridCustomEditor.Dispose">
            <summary>
            Called when the instance is about to be discarded.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.PropertyGridBrushGroupItem">
            <summary>
            Represents a brush resource group item.  For internal use only.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushGroupItem.Items">
            <summary>
            Returns a list of <see cref="T:Infragistics.Controls.Editors.Primitives.PropertyGridBrushResourceItem"/>s.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushGroupItem.Name">
            <summary>
            Returns the resource group name.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.PropertyGridBrushResourceItem">
            <summary>
            Represents a brush resource to be displayed by the <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/>'s built-in brush editor. 
            </summary>
            <remarks>
            To display custom brush resources in the <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/>'s built-in brush editor, add a handler for the 
            <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/>'s <see cref="E:Infragistics.Controls.Editors.XamPropertyGrid.BrushResourcesLoading"/> event and add instances of this
            class to the list exposed by the <see cref="P:Infragistics.Controls.Editors.BrushResourcesEventArgs.BrushResources"/> property.
            </remarks>
            <seealso cref="E:Infragistics.Controls.Editors.XamPropertyGrid.BrushResourcesLoading"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushResourceItem.Brush">
            <summary>
            Returns/sets the Brush associated with the resource item.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushResourceItem.GroupType">
            <summary>
            Returns/sets the <see cref="T:Infragistics.Controls.Editors.PropertyGridBrushGroupType"/> of the resource item.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushResourceItem.Name">
            <summary>
            Returns/sets the name that should be displayed for the resource in the <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/>'s built-in brush editor.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushResourceItem.Tag">
            <summary>
            Returns/sets the user defined data.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl">
            <summary>
            A control that displays a UI for editing brush type properties.  (For internal use only)
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.OnApplyTemplate">
            <summary>
            Invoked when the template has been applied to the element.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Called when a key is pressed.
            </summary>
            <param name="e">Information about the key that was pressed.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when a property on this object changes.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
            <summary>
            Called when the element's render size has changed.
            </summary>
            <param name="sizeInfo">Information about the element's new render size.</param>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.BrushTypeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.BrushType"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.BrushType">
            <summary>
            Returns/sets the type of brush being edited (i.e., None, LinearGradient, RadialGradient).
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.BrushTypeProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.ColorFormatProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.ColorFormat"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.ColorFormat">
            <summary>
            Returns/sets the current color format (i.e., RGB, HSL or CMYK).
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.ColorFormatProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.AlphaProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.Alpha"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.Alpha">
            <summary>
            Gets / sets the Alpha channel value for the <see cref="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.CurrentColor"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.RedProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.Red"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.Red">
            <summary>
            Gets / sets the Red channel value for the <see cref="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.CurrentColor"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.BlueProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.Blue"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.Blue">
            <summary>
            Gets / sets the Blue channel value for the <see cref="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.CurrentColor"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.GreenProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.Green"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.Green">
            <summary>
            Gets / sets the Green channel value for the <see cref="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.CurrentColor"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.HProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.H"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.H">
            <summary>
            Gets / sets the H channel value for the <see cref="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.CurrentColor"/>. This is from the HSL color space.
            </summary>        
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.SProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.S"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.S">
            <summary>
            Gets / sets the S channel value for the <see cref="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.CurrentColor"/>. This is from the HSL color space.
            </summary>        
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.LProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.L"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.L">
            <summary>
            Gets / sets the L channel value for the <see cref="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.CurrentColor"/>. This is from the HSL color space.
            </summary>        
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.CProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.C"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.C">
            <summary>
            Gets / sets the C channel value for the <see cref="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.CurrentColor"/>. This is from the CMYK color space.
            </summary>        
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.MProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.M"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.M">
            <summary>
            Gets / sets the M channel value for the <see cref="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.CurrentColor"/>. This is from the CMYK color space.
            </summary>        
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.YProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.Y"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.Y">
            <summary>
            Gets / sets the Y channel value for the <see cref="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.CurrentColor"/>. This is from the CMYK color space.
            </summary>        
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.KProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.K"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.K">
            <summary>
            Gets / sets the K channel value for the <see cref="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.CurrentColor"/>. This is from the CMYK color space.
            </summary>        
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.ColorSamplingAreaVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.ColorSamplingAreaVisibility"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.ColorSamplingAreaVisibility">
            <summary>
            Returns/sets the visibility of the color sampling area.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.ColorSamplingAreaVisibilityProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.CurrentColorProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.CurrentColor"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.CurrentColor">
            <summary>
            Returns/sets the current color.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.CurrentColorProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.GradientBrushButtonVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.GradientBrushButtonVisibility"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.GradientBrushButtonVisibility">
            <summary>
            Returns/sets the visibility of the gradient brush button.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.GradientBrushButtonVisibilityProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.InitialColorProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.InitialColor"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.InitialColor">
            <summary>
            Returns/sets the current color.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.InitialColorProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.IsExpandedProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.IsExpanded"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.IsExpanded">
            <summary>
            Returns/sets whether the control is expanded.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.IsExpandedProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.IsGradientBrushProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.IsGradientBrush"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.IsGradientBrush">
            <summary>
            Returns/sets whether the brush being edited is a Gradient brush.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.IsGradientBrushProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.IsHorizontalLinearGradientBrushProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.IsHorizontalLinearGradientBrush"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.IsHorizontalLinearGradientBrush">
            <summary>
            Returns/sets whether the brush being edited is a HorizontalLinearGradient brush.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.IsHorizontalLinearGradientBrushProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.IsLinearGradientBrushProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.IsLinearGradientBrush"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.IsLinearGradientBrush">
            <summary>
            Returns/sets whether the brush being edited is a LinearGradient brush.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.IsLinearGradientBrushProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.IsNullBrushProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.IsNullBrush"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.IsNullBrush">
            <summary>
            Returns/sets whether the brush being edited is a null brush.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.IsNullBrushProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.IsRadialGradientBrushProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.IsRadialGradientBrush"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.IsRadialGradientBrush">
            <summary>
            Returns/sets whether the brush being edited is a RadialGradient brush.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.IsRadialGradientBrushProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.IsSelectingBrushResourceProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.IsSelectingBrushResource"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.IsSelectingBrushResource">
            <summary>
            Returns/sets whether the brush resource selection UI should be displayed.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.IsSelectingBrushResourceProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.IsSolidColorBrushProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.IsSolidColorBrush"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.IsSolidColorBrush">
            <summary>
            Returns/sets whether the brush being edited is a SolidColor brush.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.IsSolidColorBrushProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.IsVerticalLinearGradientBrushProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.IsVerticalLinearGradientBrush"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.IsVerticalLinearGradientBrush">
            <summary>
            Returns/sets whether the brush being edited is a VerticalLinearGradient brush.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.IsVerticalLinearGradientBrushProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.SelectedBrushProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.SelectedBrush"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.SelectedBrush">
            <summary>
            Returns/sets the current brush.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.SelectedBrushProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.SelectBrushResourceButtonVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.SelectBrushResourceButtonVisibility"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.SelectBrushResourceButtonVisibility">
            <summary>
            Returns/sets the visibility of the select brush resource button.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.SelectBrushResourceButtonVisibilityProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.TransparentPreviewBrush">
            <summary>
            Returns a tiled brush used to display a preview for transparent colors. (read only)
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.TransparentPreviewBrushVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.TransparentPreviewBrushVisibility"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.TransparentPreviewBrushVisibility">
            <summary>
            Returns/sets the visibility of the transparent preview brush.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.TransparentPreviewBrushVisibilityProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.UseAllAvailableWidthForDropdownProperty">
            <summary>
            Returns/sets whether the dropdown should use all the width available in the associated <see cref="T:Infragistics.Controls.Editors.Primitives.PropertyGridPropertyItemView"/>.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.UseAllAvailableWidthForDropdownProperty"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.GetUseAllAvailableWidthForDropdown(System.Windows.DependencyObject)">
            <summary>
            Returns whether the dropdown should use all the width available in the associated <see cref="T:Infragistics.Controls.Editors.Primitives.PropertyGridPropertyItemView"/>.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.UseAllAvailableWidthForDropdownProperty"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.SetUseAllAvailableWidthForDropdown(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets whether the dropdown should use all the width available in the associated <see cref="T:Infragistics.Controls.Editors.Primitives.PropertyGridPropertyItemView"/>.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.UseAllAvailableWidthForDropdownProperty"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.OnBrushResourceItemSelected(Infragistics.Controls.Editors.Primitives.BrushResourceItemSelectedEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.BrushResourceItemSelected"/> event.
            </summary>
            <param name="args">Event args for raising the event.</param>
            <seealso cref="T:Infragistics.Controls.Editors.Primitives.BrushResourceItemSelectedEventArgs"/>
        </member>
        <member name="E:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.PropertyChanged">
            <summary>
            Fired when a property changes on the <see cref="T:Infragistics.Controls.Editors.XamColorPicker"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl.OnPropertyChanged(System.String)">
            <summary>
            Invoked when a property changes on the <see cref="T:Infragistics.Controls.Editors.XamColorPicker"/> object.
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.ByteDoubleConverter">
            <summary>
            Converts values between double and byte.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.ByteDoubleConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert.
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.ByteDoubleConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert back.
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.ByteIntConverter">
            <summary>
            Converts values between int and byte.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.ByteIntConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert.
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.ByteIntConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert back.
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.DoubleToPercentStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert.
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.DoubleToPercentStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert back.
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridColorEditor.Dispose">
            <summary>
            Called when the instance is about to be discarded.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridComboEditorBase.Dispose">
            <summary>
            Called when the instance is about to be discarded.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridDateTimeEditor.Dispose">
            <summary>
            Called when the instance is about to be discarded.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridExpandableObjectEditor.Dispose">
            <summary>
            Called when the instance is about to be discarded.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridListEditor.Dispose">
            <summary>
            Called when the instance is about to be discarded.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridTextEditor.Dispose">
            <summary>
            Called when the instance is about to be discarded.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.PropertyGridResourceString">
            <summary>
            Class that represents a string resource loaded from the <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/> assembly
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.PropertyGridBrushResourcesTreeViewControl">
            <summary>
            A control that displays a UI for selecting brush resources.  For internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridBrushResourcesTreeViewControl.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridBrushResourcesTreeViewControl.OnApplyTemplate">
            <summary>
            Invoked when the template has been applied to the element.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridBrushResourcesTreeViewControl.OnBrushResourceItemSelected(Infragistics.Controls.Editors.Primitives.BrushResourceItemSelectedEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Controls.Editors.Primitives.PropertyGridBrushResourcesTreeViewControl.BrushResourceItemSelected"/> event.
            </summary>
            <param name="args">Event args for raising the event.</param>
            <seealso cref="T:Infragistics.Controls.Editors.Primitives.BrushResourceItemSelectedEventArgs"/>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.PropertyGridCategoryItemView">
            <summary>
            An element used by the <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/>to display a <see cref="T:Infragistics.Controls.Editors.PropertyGridCategoryItem"/>.
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridCategoryItem"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridCategoryItemView.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridCategoryItemView.OnApplyTemplate">
            <summary>
            Invoked when the template has been applied to the element.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridCategoryItemView.OnCreateAutomationPeer">
            <summary>
            Returns an automation peer that exposes the <see cref="T:Infragistics.Controls.Editors.Primitives.PropertyGridCategoryItemView"/> to UI Automation.
            </summary>
            <returns>A <see cref="T:Infragistics.AutomationPeers.PropertyGridItemViewAutomationPeerProxy"/></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridCategoryItemView.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Raised when the left mouse button is pressed.
            </summary>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridCategoryItemView.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Invoked whenever the effective value of any dependency property on this System.Windows.FrameworkElement has been updated.
            </summary>
            <param name="e">Information about the property that changed.</param>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridCategoryItemView.PropertyGrid">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/> associated with this category.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.PropertyGridCategoryItemView.CategoryItemProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.Primitives.PropertyGridCategoryItemView.CategoryItem"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridCategoryItemView.CategoryItem">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Editors.PropertyGridCategoryItem"/> associated with this element.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.PropertyGridCategoryItemView.CategoryItemProperty"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridCategoryItemView.OnDiscarded">
            <summary>
            Called when the recyclable element has been discarded by the recycling manager.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridCategoryItemView.OnQuiesced">
            <summary>
            Called when the recyclable element has been quiesced by the recycling manager.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridCategoryItemView.OnAwakened(Infragistics.Controls.Editors.PropertyGridItem)">
            <summary>
            Called when the recyclable element has been awakened by the recycling manager.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.PropertyGridDescriptionAreaControl">
            <summary>
            A control that displays a UI for rendering the name and description of the currently selected property in the <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridDescriptionAreaControl.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridDescriptionAreaControl.OnApplyTemplate">
            <summary>
            Invoked when the template has been applied to the element.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridDescriptionAreaControl.SelectedPropertyDescription">
            <summary>
            Returns the description associated with the currently selected property.  (read only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridDescriptionAreaControl.SelectedPropertyName">
            <summary>
            Returns the name associated with the currently selected property.  (read only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridDescriptionAreaControl.SelectedPropertyTypeName">
            <summary>
            Returns the FullName of the currently selected property's type.  (read only)
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Editors.Primitives.PropertyGridDescriptionAreaControl.PropertyChanged">
            <summary>
            An event raised when the value of a property changes.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.PropertyGridExpandableObjectEditorControl">
            <summary>
            A control that displays a UI for the value column of list type properties.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridExpandableObjectEditorControl.OnApplyTemplate">
            <summary>
            Invoked when the template has been applied to the element.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.PropertyGridExpandableObjectEditorControl.PropertyItemProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.PropertyGridExpandableObjectEditorControl.PropertyItem"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridExpandableObjectEditorControl.PropertyItem">
            <summary>
            Returns the associated <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/>.  (read only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.PropertyGridExpandableObjectEditorControl.PropertyItemPropertyKey"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.PropertyGridExpandableObjectEditorControl.CreateExpandableObjectButtonStyleKey">
            <summary>
            The key used to identify the <see cref="T:System.Windows.Style"/> for the 'create expandable object' button in the <see cref="T:Infragistics.Controls.Editors.Primitives.PropertyGridExpandableObjectEditorControl"/>.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.PropertyGridFilterAreaControl">
            <summary>
            A control that displays a UI for filtering and sorting the items in the <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridFilterAreaControl.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridFilterAreaControl.OnApplyTemplate">
            <summary>
            Invoked when the template has been applied to the element.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.PropertyGridFilterAreaControl.PropertyGridProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.PropertyGridFilterAreaControl.PropertyGrid"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridFilterAreaControl.PropertyGrid">
            <summary>
            Returns the associated <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/>.  (read only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.PropertyGridFilterAreaControl.PropertyGridPropertyKey"/>
            <seealso cref="P:Infragistics.Controls.Editors.Primitives.PropertyGridFilterAreaControl.PropertyGrid"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.PropertyGridFilterAreaControl.CategorizeButtonStyleKey">
            <summary>
            The key used to identify the <see cref="T:System.Windows.Style"/> for the categorize button in the <see cref="T:Infragistics.Controls.Editors.Primitives.PropertyGridFilterAreaControl"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.PropertyGridFilterAreaControl.ClearFilterButtonStyleKey">
            <summary>
            The key used to identify the <see cref="T:System.Windows.Style"/> for the 'clear filter' button in the <see cref="T:Infragistics.Controls.Editors.Primitives.PropertyGridFilterAreaControl"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.PropertyGridFilterAreaControl.SortButtonStyleKey">
            <summary>
            The key used to identify the <see cref="T:System.Windows.Style"/> for the sort button in the <see cref="T:Infragistics.Controls.Editors.Primitives.PropertyGridFilterAreaControl"/>.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.PropertyGridItemLayoutPanel">
            <summary>
            A Panel derived element that measures and arranges <see cref="T:Infragistics.Controls.Editors.Primitives.PropertyGridCategoryItemView"/> and 
            <see cref="T:Infragistics.Controls.Editors.Primitives.PropertyGridPropertyItemView"/> elements using an optimized virtualizing/recycling strategy.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridItemLayoutPanel.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridItemLayoutPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Positions child elements and determines a size for this element.
            </summary>
            <param name="finalSize">The size available to this element for arranging its children.</param>
            <returns>The <see cref="T:System.Windows.Size"/> used by this element to arrange its children.</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridItemLayoutPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Invoked to measure the element and its children.
            </summary>
            <param name="availableSize">The size that reflects the available size that this element can give to its children.</param>
            <returns>The <see cref="T:System.Windows.Size"/> that represents the desired size of the element.</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridItemLayoutPanel.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
            <summary>
            Called when the render size changes.
            </summary>
            <param name="sizeInfo">Information about the resize.</param>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.PropertyGridListEditorControl">
            <summary>
            A control that displays a UI for the value column of list type properties.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridListEditorControl.OnApplyTemplate">
            <summary>
            Invoked when the template has been applied to the element.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.PropertyGridListEditorControl.PropertyItemProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.PropertyGridListEditorControl.PropertyItem"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridListEditorControl.PropertyItem">
            <summary>
            Returns the associated <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/>.  (read only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.PropertyGridListEditorControl.PropertyItemPropertyKey"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.PropertyGridListEditorControl.AddListEntryButtonStyleKey">
            <summary>
            The key used to identify the <see cref="T:System.Windows.Style"/> for the 'add list entry' button in the <see cref="T:Infragistics.Controls.Editors.Primitives.PropertyGridListEditorControl"/>.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.PropertyGridPropertyItemView">
            <summary>
            An element used by the <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/>to display a <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/>.
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridPropertyItemView.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridPropertyItemView.OnApplyTemplate">
            <summary>
            Invoked when the template has been applied to the element.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridPropertyItemView.OnCreateAutomationPeer">
            <summary>
            Returns an automation peer that exposes the <see cref="T:Infragistics.Controls.Editors.Primitives.PropertyGridPropertyItemView"/> to UI Automation.
            </summary>
            <returns>A <see cref="T:Infragistics.AutomationPeers.PropertyGridItemViewAutomationPeerProxy"/></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridPropertyItemView.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Invoked when the element receives the focus.
            </summary>
            <param name="e">Additional information about the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridPropertyItemView.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Invoked when the keyboard focus changes on a descendant element.
            </summary>
            <param name="e">Additional information about the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridPropertyItemView.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when the mouse enters the element.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridPropertyItemView.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when the mouse exits the element.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridPropertyItemView.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Raised when the left mouse button is pressed.
            </summary>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridPropertyItemView.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Invoked whenever the effective value of any dependency property on this System.Windows.FrameworkElement has been updated.
            </summary>
            <param name="e">Information about the property that changed.</param>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.PropertyGridPropertyItemView.EditorElementProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.PropertyGridPropertyItemView.EditorElement"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridPropertyItemView.EditorElement">
            <summary>
            Returns/sets the editor element associated with this item.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.PropertyGridPropertyItemView.EditorElementProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridPropertyItemView.IsCategorizedItem">
            <summary>
            Returns true if this item is in a list that is categorized.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridPropertyItemView.PropertyGrid">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/> associated with this element.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.PropertyGridPropertyItemView.PropertyItemProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.Primitives.PropertyGridPropertyItemView.PropertyItem"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridPropertyItemView.PropertyItem">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/> associated with this element.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridPropertyItemView.OnDiscarded">
            <summary>
            Called when the recyclable element has been discarded by the recycling manager.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridPropertyItemView.OnQuiesced">
            <summary>
            Called when the recyclable element has been quiesced by the recycling manager.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridPropertyItemView.OnAwakened(Infragistics.Controls.Editors.PropertyGridItem)">
            <summary>
            Called when the recyclable element has been awakened by the recycling manager.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.PropertyGridPropertyItemView.RemoveListEntryButtonStyleKey">
            <summary>
            The key used to identify the <see cref="T:System.Windows.Style"/> for the 'remove list entry' button in the <see cref="T:Infragistics.Controls.Editors.Primitives.PropertyGridPropertyItemView"/>.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.PropertyGridRgbValueEditor">
            <summary>
            Editor for RGB color values. (for internal use only)
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridRgbValueEditor.#ctor">
            <summary>
            Creates an instance of SimpleNumericTextbox.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridRgbValueEditor.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Called when the element receives the focus.
            </summary>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridRgbValueEditor.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
            <summary>
            Called when the element receives the keyboard focus.
            </summary>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridRgbValueEditor.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Called when System.Windows.UIElement.KeyDown event occurs.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridRgbValueEditor.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Called when the element loses the focus.
            </summary>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.PropertyGridRgbValueEditor.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
            <summary>
            Called when the element loses the keyboard focus.
            </summary>
            <param name="e">Information about the event.</param>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.PropertyGridRgbValueEditor.ValueProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.PropertyGridRgbValueEditor.Value"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.PropertyGridRgbValueEditor.Value">
            <summary>
            Returns or sets the integer Value of the control
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.PropertyGridRgbValueEditor.ValueProperty"/>
        </member>
        <member name="T:Infragistics.Controls.Editors.CategorySortOrderAttribute">
            <summary>
            Specifies the sort order of the <see cref="T:Infragistics.Controls.Editors.PropertyGridCategoryItem"/>s assigned to the properties of the class or structure decorated with the attribute.
            </summary>
            <remarks>
            Multiple instances of this 'CategorySortOrderAttribute' may be applied to the same class/structure - one for each unique category assigned to the class/structure properties. 
            
            Note that is is possible to create your own custom attribute for specifying the sort order of categories - to ensure that the <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/>
            can recognize your custom attributes they must adhere to the following 2 rules:
            	1. The attribute class name must be 'CategorySortOrderAttribute' (or 'CategorySortOrder')
            	2. The attributes constructor must accept 2 parameters:
            		a. a category name parameter of type string
            		b. a sort order parameter of type int
            </remarks>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridCategoryItem"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertySortOrderAttribute"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.CategorySortOrderAttribute.#ctor(System.String,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="categoryName">The name of the category that the sort order should be applied to.</param>
            <param name="sortOrder">The sort order that should be applied to the category.</param>
        </member>
        <member name="P:Infragistics.Controls.Editors.CategorySortOrderAttribute.SortOrder">
            <summary>
            The sort order that should be applied to the category.  (read only)
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.CategorySortOrderAttribute.CategoryName"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.CategorySortOrderAttribute.CategoryName">
            <summary>
            The name of the category that the sort order should be applied to.  (read only)
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.CategorySortOrderAttribute.SortOrder"/>
        </member>
        <member name="T:Infragistics.Controls.Editors.PropertySortOrderAttribute">
            <summary>
            Specifies the sort order of a <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/>.
            </summary>
            <remarks>
            Only one instance of this 'PropertySortOrderAttribute' may be applied to the <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/>. 
            
            Note that is is possible to create your own custom attribute for specifying the sort order of properties - to ensure that the <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/>
            can recognize your custom attributes they must adhere to the following 2 rules:
            	1. The attribute class name must be 'PropertySortOrderAttribute' (or 'PropertySortOrder')
            	2. The attributes constructor must accept a single parameter - a sort order parameter of type int.
            </remarks>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridCategoryItem"/>
            <seealso cref="T:Infragistics.Controls.Editors.CategorySortOrderAttribute"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.PropertySortOrderAttribute.#ctor(System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="sortOrder">The sort order that should be applied to the category.</param>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertySortOrderAttribute.SortOrder">
            <summary>
            The sort order that should be applied to the category.  (read only)
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.PropertyGridTemplateSelectorContext">
            <summary>
            An instance of this class is passed to the SelectTemplate method of the DataTemplateSelector specified in a <see cref="T:Infragistics.Controls.Editors.PropertyGridEditorDefinition"/>.  It exposes a property
            of type <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/> that the SelectTemplate method can use to determine which DataTemplate instance to return.  In addition, it exposes 2 more properties
            that reflect the Edit DataTemplate and ReadOnly DataTemplate (if any) specified in the EditorDefinition associated with the property.  The SelectTemplate method
            is free to return one of these DataTemplate instances as the selected template, or it can can choose any other DataTemplate instance.  If instead it returns null, the control will
            use the built-in editor for the property's type to display/edit it's value.
            </summary>
            <see cref="T:Infragistics.Controls.Editors.PropertyGridEditorDefinition"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridTemplateSelectorContext.PropertyItem">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/> associated with the property whose DataTemplate is being selected.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridTemplateSelectorContext.EditTemplate">
            <summary>
            Returns the <see cref="P:Infragistics.Controls.Editors.PropertyGridEditorDefinition.EditTemplate"/> set on the <see cref="T:Infragistics.Controls.Editors.PropertyGridEditorDefinition"/> associated
            with the property whose DataTemplate is being selected.  This value can be null. The implementation of the SelectTemplate method
            should return this value if the <see cref="P:Infragistics.Controls.Editors.PropertyGridEditorDefinition.EditTemplate"/> should be used to display/edit the property value.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.PropertyGridTemplateSelectorContext.ReadOnlyTemplate"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridEditorDefinition"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridTemplateSelectorContext.ReadOnlyTemplate">
            <summary>
            Returns the <see cref="P:Infragistics.Controls.Editors.PropertyGridEditorDefinition.ReadOnlyTemplate"/> set on the <see cref="T:Infragistics.Controls.Editors.PropertyGridEditorDefinition"/> associated
            with the property whose DataTemplate is being selected.  This value can be null. The implementation of the SelectTemplate method
            should return this value if the <see cref="P:Infragistics.Controls.Editors.PropertyGridEditorDefinition.ReadOnlyTemplate"/> should be used to display the property value.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.PropertyGridTemplateSelectorContext.EditTemplate"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridEditorDefinition"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.PropertyMultiValueConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts source values to a value for the binding target.
            </summary>
            <param name="values"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.PropertyMultiValueConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a binding target value to the source binding values.
            </summary>
            <param name="value"></param>
            <param name="targetTypes"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.PropertyGridTypeEditorBase.Dispose">
            <summary>
            Called when the instance is about to be discarded.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.PropertyGridCategoryItem">
            <summary>
            A class that represents a property category item in the <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.PropertyGridCategoryItem.Dispose">
            <summary>
            Called when the instance is about to be discarded.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.PropertyGridCategoryItem.OnIsExpandedChanged(System.Boolean)">
            <summary>
            Invoked when the expanded state of the item has changed.
            </summary>
            <param name="newValue">The new value of the expanded state.</param>
        </member>
        <member name="T:Infragistics.Controls.Editors.PropertyGridEditorDefinition">
            <summary>
            Defines the DataTemplates to use for editing properties of a specific type or name, or which
            belong to a specific category.  This definition also exposes a DataTemplateSelector property
            which enables support for the programmatic selection of the DataTemplate to use for displaying/editing 
            a property's value.
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridEditorDefinitionCollection"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridEditorDefinition.ReadOnlyTemplate">
            <summary>
            Returns/sets the DataTemplate to use when the property is read only.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.PropertyGridEditorDefinition.EditTemplate"/>
            <seealso cref="P:Infragistics.Controls.Editors.PropertyGridEditorDefinition.TemplateSelector"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridEditorDefinition.ReadOnlyTemplateIsEnabled">
            <summary>
            Returns/sets the value of the IsEnabled property on root element of the <see cref="P:Infragistics.Controls.Editors.PropertyGridEditorDefinition.ReadOnlyTemplate"/>.  The default is false.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridEditorDefinition.EditTemplate">
            <summary>
            Returns/sets the DataTemplate to use when the editor is in edit mode.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.PropertyGridEditorDefinition.ReadOnlyTemplate"/>
            <seealso cref="P:Infragistics.Controls.Editors.PropertyGridEditorDefinition.TemplateSelector"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridEditorDefinition.TemplateSelector">
            <summary>
            Returns/sets a DataTemplateSelector implementation that will return the DataTemplate to use for displaying/editing the property value.
            </summary>
            <remarks>
            <para>
            <b>Note:</b> If a DataTemplateSelector instance is assigned to this property, the control will call its SelectTemplate method to obtain the DataTemplate 
            to use for displaying/editing the property value.  If the SelectTemplate method returns null, then the control will use the built-in editor associated with the 
            property's type.  Although the <see cref="P:Infragistics.Controls.Editors.PropertyGridEditorDefinition.EditTemplate"/> and <see cref="P:Infragistics.Controls.Editors.PropertyGridEditorDefinition.ReadOnlyTemplate"/> properties are ignored by the <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/> when
            this property is set, those DataTemplates (if specified) are passed to the DataTemplateSelector's SelectTemplate method in a
            <see cref="T:Infragistics.Controls.Editors.PropertyGridTemplateSelectorContext"/> instance as described below, and the SelectTemplate implementation is free to return one of them as the
            DataTemplate that should be used to display/edit the property value.
            </para>
            <para>
            <b>Note:</b> The SelectTemplate method of the DataTemplateSelector will be called with an instance of a
            <see cref="T:Infragistics.Controls.Editors.PropertyGridTemplateSelectorContext"/> object passed via the method's 'item' parameter.  This <see cref="T:Infragistics.Controls.Editors.PropertyGridTemplateSelectorContext"/>
            instance exposes several properties that the SelectTemplate method can use to determine which DataTemplate (if any) should be returned:
            </para>
            <para>
            <list type="table">
            <item>
            <term><see cref="P:Infragistics.Controls.Editors.PropertyGridTemplateSelectorContext.PropertyItem"/></term>
            <description>The <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/> associated with the property whose DataTemplate is being selected.</description>
            </item>
            <item>
            <term><see cref="P:Infragistics.Controls.Editors.PropertyGridTemplateSelectorContext.EditTemplate"/></term>
            <description>The DataTemplate instance assigned to the <see cref="P:Infragistics.Controls.Editors.PropertyGridEditorDefinition.EditTemplate"/> property which the SelectTemplate implementation can choose to return as the selected template.</description>
            </item>
            <item>
            <term><see cref="P:Infragistics.Controls.Editors.PropertyGridTemplateSelectorContext.ReadOnlyTemplate"/></term>
            <description>The DataTemplate instance assigned to the <see cref="P:Infragistics.Controls.Editors.PropertyGridEditorDefinition.ReadOnlyTemplate"/> property which the SelectTemplate implementation can choose to return as the selected template.</description>
            </item>
            </list>
            </para>
            </remarks>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridTemplateSelectorContext"/>
            <seealso cref="P:Infragistics.Controls.Editors.PropertyGridEditorDefinition.ReadOnlyTemplate"/>
            <seealso cref="P:Infragistics.Controls.Editors.PropertyGridEditorDefinition.EditTemplate"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridEditorDefinition.Category">
            <summary>
            Returns/sets the Category of properties that should use this editor definition.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridEditorDefinition.TargetType">
            <summary>
            Returns/sets the Type of properties that should use this editor definition.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridEditorDefinition.TargetProperties">
            <summary>
            Returns/sets the list of property names that should use this editor definition.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.PropertyGridComparisonCondition">
            <summary>
            A custom <see cref="T:Infragistics.Windows.Controls.ComparisonCondition"/> implementation that provides the ability to select the operand that
            should be used when filtering <see cref="T:Infragistics.Controls.Editors.PropertyGridItem"/>s.  When a standard <see cref="T:Infragistics.Windows.Controls.ComparisonCondition"/>
            is used for filtering, the operand is assumed to be <see cref="F:Infragistics.Controls.Editors.PropertyGridFilterOperandSource.PropertyName"/>
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridFilterOperandSource"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamPropertyGrid.ItemFilters"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridComplementCondition"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridConditionGroup"/>
            <seealso cref="T:Infragistics.Windows.Controls.ComparisonCondition"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.PropertyGridComparisonCondition.#ctor">
            <summary>
             Constructor
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.PropertyGridComparisonCondition.#ctor(Infragistics.Windows.Controls.ComparisonOperator,System.Object)">
            <summary>
             Constructor
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.PropertyGridComparisonCondition.#ctor(Infragistics.Windows.Controls.ComparisonOperator,System.Object,System.String)">
            <summary>
             Constructor
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridComparisonCondition.OperandSource">
            <summary>
            Returns/sets which <see cref="T:Infragistics.Controls.Editors.PropertyGridItem"/> value should be used as the operand when evaluating the condition.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.PropertyGridComplementCondition">
            <summary>
            A custom <see cref="T:Infragistics.Windows.Controls.ComplementCondition"/> implementation that provides the ability to select the operand that
            should be used when filtering <see cref="T:Infragistics.Controls.Editors.PropertyGridItem"/>s.  When a standard <see cref="T:Infragistics.Windows.Controls.ComplementCondition"/>
            is used for filtering, the operand is assumed to be <see cref="F:Infragistics.Controls.Editors.PropertyGridFilterOperandSource.PropertyName"/>
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridFilterOperandSource"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamPropertyGrid.ItemFilters"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridComparisonCondition"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridConditionGroup"/>
            <seealso cref="T:Infragistics.Windows.Controls.ComplementCondition"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.PropertyGridComplementCondition.#ctor">
            <summary>
             Constructor
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.PropertyGridComplementCondition.#ctor(Infragistics.Windows.Controls.ICondition)">
            <summary>
             Constructor
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridComplementCondition.OperandSource">
            <summary>
            Returns/sets which <see cref="T:Infragistics.Controls.Editors.PropertyGridItem"/> value should be used as the operand when evaluating the condition.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.PropertyGridConditionGroup">
            <summary>
            A custom <see cref="T:Infragistics.Windows.Controls.ConditionGroup"/> implementation that provides the ability to select the operand that
            should be used when filtering <see cref="T:Infragistics.Controls.Editors.PropertyGridItem"/>s.  When a standard <see cref="T:Infragistics.Windows.Controls.ConditionGroup"/>
            is used for filtering, the operand is assumed to be <see cref="F:Infragistics.Controls.Editors.PropertyGridFilterOperandSource.PropertyName"/>
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridFilterOperandSource"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamPropertyGrid.ItemFilters"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridComparisonCondition"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridComplementCondition"/>
            <seealso cref="T:Infragistics.Windows.Controls.ConditionGroup"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.PropertyGridConditionGroup.#ctor">
            <summary>
             Constructor
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridConditionGroup.OperandSource">
            <summary>
            Returns/sets which <see cref="T:Infragistics.Controls.Editors.PropertyGridItem"/> value should be used as the operand when evaluating the condition.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.PropertyGridItem">
            <summary>
            The abstract base class for all items displayed in the <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/>
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridCategoryItem"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.PropertyGridItem.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.PropertyGridItem.ToString">
            <summary>
            Returns a string representation of the object.
            </summary>
            <returns>A string representation of the object.</returns>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridItem.Children">
            <summary>
            Returns an enumerable of child <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/>s contained within this item. (read-only)
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridItem.DescriptionProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.PropertyGridItem.Description"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridItem.Description">
            <summary>
            Returns/sets the description displayed for this item in the description area.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.PropertyGridItem.DescriptionProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamPropertyGrid.DescriptionAreaVisibility"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridItem.DisplayNameProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.PropertyGridItem.DisplayName"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridItem.DisplayName">
            <summary>
            Returns/sets the name used when displaying this item in the control.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.PropertyGridItem.DisplayNameProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridItem.HasChildren">
            <summary>
            Returns true if this item contains child <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/>s, otherwise false.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.PropertyGridItem.Children"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridItem.IsExpandedProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.PropertyGridItem.IsExpanded"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridItem.IsExpanded">
            <summary>
            Returns/sets whether the item is expanded.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.PropertyGridItem.IsExpandedProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.PropertyGridItem.IsExpandable"/>
            <seealso cref="P:Infragistics.Controls.Editors.PropertyGridItem.IsExpandableResolved"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridItem.IsExpandableProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.PropertyGridItem.IsExpandable"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridItem.IsExpandable">
            <summary>
            Returns true if this item can be expanded/collapsed, otherwise returns false. (read only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.PropertyGridItem.IsExpandablePropertyKey"/>
            <seealso cref="P:Infragistics.Controls.Editors.PropertyGridItem.IsExpanded"/>
            <seealso cref="P:Infragistics.Controls.Editors.PropertyGridItem.IsExpandableResolved"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridItem.IsExpandableResolvedProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.PropertyGridItem.IsExpandableResolved"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridItem.IsExpandableResolved">
            <summary>
            If this <see cref="T:Infragistics.Controls.Editors.PropertyGridItem"/> is a <see cref="T:Infragistics.Controls.Editors.PropertyGridCategoryItem"/> this property returns the same value as the <see cref="P:Infragistics.Controls.Editors.PropertyGridItem.IsExpandable"/> property. (read only)
            If this <see cref="T:Infragistics.Controls.Editors.PropertyGridItem"/> is a <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/> this property returns true if <see cref="P:Infragistics.Controls.Editors.PropertyGridItem.IsExpandable"/> is true and the current property value is non-null, otherwise it returns false.  (read only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.PropertyGridItem.IsExpandableResolvedPropertyKey"/>
            <seealso cref="P:Infragistics.Controls.Editors.PropertyGridItem.IsExpandable"/>
            <seealso cref="P:Infragistics.Controls.Editors.PropertyGridItem.IsExpanded"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridItem.IsFilteredOut">
            <summary>
            Returns true if the item is currently filtered out of the display, otherwise returns false. (read-only)
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.XamPropertyGrid.ItemFilters"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamPropertyGrid.FilterText"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridItem.IsSelectedProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.PropertyGridItem.IsSelected"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridItem.IsSelected">
            <summary>
            Returns/sets whether this item is selected.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.PropertyGridItem.IsSelectedProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridItem.NestingLevelProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.PropertyGridItem.NestingLevel"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridItem.NestingLevel">
            <summary>
            Returns the nesting level of the item.  <see cref="T:Infragistics.Controls.Editors.PropertyGridCategoryItem"/>s are always at level 0 while
            the nesting level for <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/>s is 1 or greater if <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.IsCategorized"/>
            is true, 0 or greater otherwise.  (read-only)
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.PropertyGridItem.Children"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridItem.PropertyGrid">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/> associated with this item. (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridItem.SortOrder">
            <summary>
            Returns the sort order of this property.  (read only)
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.PropertyGridItem.Deselect">
            <summary>
            Deselects the item if it is currently selected.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.PropertyGridItem.IsSelected"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamPropertyGrid.SelectedItem"/>
            <seealso cref="M:Infragistics.Controls.Editors.PropertyGridItem.Select"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.PropertyGridItem.Select">
            <summary>
            If the item is not currently selected, makes this item the <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.SelectedItem"/>.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.PropertyGridItem.IsSelected"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamPropertyGrid.SelectedItem"/>
            <seealso cref="M:Infragistics.Controls.Editors.PropertyGridItem.Deselect"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.PropertyGridItem.OnIsExpandedChanged(System.Boolean)">
            <summary>
            Invoked when the expanded state of the item has changed.
            </summary>
            <param name="newValue">The new value of the expanded state.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.PropertyGridItem.Dispose">
            <summary>
            Called when the instance is about to be discarded.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.PropertyGeneratorBase">
            <summary>
            An abstract base class for generator classes that generate <see cref="T:Infragistics.Controls.Editors.PropertyGridItem"/>s for the <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/>.
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.ReflectionPropertyGenerator"/>
            <seealso cref="T:Infragistics.Controls.Editors.TypeDescriptorPropertyGenerator"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGenerationOptions"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.PropertyGeneratorBase.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGeneratorBase.GeneratedPropertyFilterProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.PropertyGeneratorBase.GeneratedPropertyFilter"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGeneratorBase.GeneratedPropertyFilter">
            <summary>
            Returns/sets the filter condition(s) that the generator should honor when determining which <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/>s 
            to generate.  Properties must match all condition(s) in order to be included in the list of <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/>s
            return by derived generator classes via the <see cref="M:Infragistics.Controls.Editors.PropertyGeneratorBase.GenerateProperties(System.Object,Infragistics.Controls.Editors.PropertyGenerationOptions,Infragistics.Controls.Editors.PropertyGridPropertyItem)"/> method.  
            </summary>
            <remarks>
            <para>
            <b>Note: </b>Refer to the remarks in the documentation for the <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.ItemFilters"/> property for an overview 
            of the <see cref="T:Infragistics.Windows.Controls.ICondition"/> derived classes that are available for specifying a filter condition.
            </para>
            <para>
            <b>Note: </b>It is the responsibility of derived generator classes to call the <see cref="M:Infragistics.Controls.Editors.PropertyGeneratorBase.GetShouldItemBeFilteredOut(Infragistics.Controls.Editors.PropertyGridItem)"/> 
            method to determine if a particular property should be included.
            </para>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.PropertyGeneratorBase.GeneratedPropertyFilterProperty"/>
            <seealso cref="M:Infragistics.Controls.Editors.PropertyGeneratorBase.GenerateProperties(System.Object,Infragistics.Controls.Editors.PropertyGenerationOptions,Infragistics.Controls.Editors.PropertyGridPropertyItem)"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.PropertyGeneratorBase.GenerateProperties(System.Object,Infragistics.Controls.Editors.PropertyGenerationOptions,Infragistics.Controls.Editors.PropertyGridPropertyItem)">
            <summary>
            Generates <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/>s for the specified object while honoring the specified <see cref="T:Infragistics.Controls.Editors.PropertyGenerationOptions"/> as well as
            the filters defined in the <see cref="P:Infragistics.Controls.Editors.PropertyGeneratorBase.GeneratedPropertyFilter"/> property (if any).  This method must be overridden by derived generator classes.
            </summary>
            <param name="forObject">The object whose properties should be inspected.</param>
            <param name="generationOptions">The options to honor when generating properties.</param>
            <param name="forPropertyItem">The <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/> that represents the property whose value is passed in the 'forObject' parameter, or null if the 'forObject' parameter represents a root object instance.  This parameter should be supplied when requesting property generation for a sub-object.</param>
            <returns>A list of <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/>s.</returns>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGenerationOptions"/>
            <seealso cref="P:Infragistics.Controls.Editors.PropertyGeneratorBase.GeneratedPropertyFilter"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.PropertyGeneratorBase.GetShouldItemBeFilteredOut(Infragistics.Controls.Editors.PropertyGridItem)">
            <summary>
            Returns true if the derived generator class should filter the specified <see cref="T:Infragistics.Controls.Editors.PropertyGridItem"/> out of the list returned 
            by its implementation of the <see cref="M:Infragistics.Controls.Editors.PropertyGeneratorBase.GenerateProperties(System.Object,Infragistics.Controls.Editors.PropertyGenerationOptions,Infragistics.Controls.Editors.PropertyGridPropertyItem)"/> method.
            </summary>
            <remarks>
            <b>Note: </b>If <see cref="P:Infragistics.Controls.Editors.PropertyGeneratorBase.GeneratedPropertyFilter"/> property is not set (i.e., is null), this method will return false.
            </remarks>
            <param name="item">The item that should be evaluated against the <see cref="P:Infragistics.Controls.Editors.PropertyGeneratorBase.GeneratedPropertyFilter"/>.</param>
            <returns>True if the item should be filter out (i.e., not included in the list of properties returned from 
            <see cref="M:Infragistics.Controls.Editors.PropertyGeneratorBase.GenerateProperties(System.Object,Infragistics.Controls.Editors.PropertyGenerationOptions,Infragistics.Controls.Editors.PropertyGridPropertyItem)"/></returns>
        </member>
        <member name="T:Infragistics.Controls.Editors.TypeDescriptorPropertyGenerator">
            <summary>
            A class that inherits from <see cref="T:Infragistics.Controls.Editors.PropertyGeneratorBase"/> to generate items for the <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/> using TypeDescriptor to
            discover the custom and/or attached properties exposed by an object.
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.ReflectionPropertyGenerator"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGeneratorBase"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGenerationOptions"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.TypeDescriptorPropertyGenerator.GenerateProperties(System.Object,Infragistics.Controls.Editors.PropertyGenerationOptions,Infragistics.Controls.Editors.PropertyGridPropertyItem)">
            <summary>
            Generates <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/>s for the specified object while honoring the specified <see cref="T:Infragistics.Controls.Editors.PropertyGenerationOptions"/> as well as
            the filters defined in the <see cref="P:Infragistics.Controls.Editors.PropertyGeneratorBase.GeneratedPropertyFilter"/> property (if any).  This method must be overridden by derived generator classes.
            </summary>
            <param name="forObject">The object whose properties should be inspected.</param>
            <param name="generationOptions">The options to honor when generating properties.</param>
            <param name="forPropertyItem">The <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/> that represents the property whose value is passed in the 'forObject' parameter, or null if the 'forObject' parameter represents a root object instance.  This parameter should be supplied when requesting property generation for a sub-object.</param>
            <returns>A list of <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/>s.</returns>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGenerationOptions"/>
            <seealso cref="P:Infragistics.Controls.Editors.PropertyGeneratorBase.GeneratedPropertyFilter"/>
        </member>
        <member name="T:Infragistics.Controls.Editors.ReflectionPropertyGenerator">
            <summary>
            A class that inherits from <see cref="T:Infragistics.Controls.Editors.PropertyGeneratorBase"/> to generate items for the <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/> using reflection to
            discover the properties exposed by an object.
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.TypeDescriptorPropertyGenerator"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGeneratorBase"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGenerationOptions"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.ReflectionPropertyGenerator.GenerateProperties(System.Object,Infragistics.Controls.Editors.PropertyGenerationOptions,Infragistics.Controls.Editors.PropertyGridPropertyItem)">
            <summary>
            Generates <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/>s for the specified object while honoring the specified <see cref="T:Infragistics.Controls.Editors.PropertyGenerationOptions"/> as well as
            the filters defined in the <see cref="P:Infragistics.Controls.Editors.PropertyGeneratorBase.GeneratedPropertyFilter"/> property (if any).  This method must be overridden by derived generator classes.
            </summary>
            <param name="forObject">The object whose properties should be inspected.</param>
            <param name="generationOptions">The options to honor when generating properties.</param>
            <param name="forPropertyItem">The <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/> that represents the property whose value is passed in the 'forObject' parameter, or null if the 'forObject' parameter represents a root object instance.  This parameter should be supplied when requesting property generation for a sub-object.</param>
            <returns>A list of <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/>s.</returns>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGenerationOptions"/>
            <seealso cref="P:Infragistics.Controls.Editors.PropertyGeneratorBase.GeneratedPropertyFilter"/>
        </member>
        <member name="T:Infragistics.Controls.Editors.PropertyGenerationOptions">
            <summary>
            A class that defines options for the generation of <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/>s by property generators - i.e.,  
            classes that derive from <see cref="T:Infragistics.Controls.Editors.PropertyGeneratorBase"/>.  An instance of this class is automatically created with
            default settings when needed for property generation.  Alternatively, an instance of this class can be manually created
            and assigned to the <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.PropertyGenerationOptions"/> property to specify custom generation options.
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGeneratorBase"/>
            <seealso cref="T:Infragistics.Controls.Editors.ReflectionPropertyGenerator"/>
            <seealso cref="T:Infragistics.Controls.Editors.TypeDescriptorPropertyGenerator"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamPropertyGrid.PropertyGenerator"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamPropertyGrid.PropertyGenerationOptions"/>
            <seealso cref="M:Infragistics.Controls.Editors.XamPropertyGrid.RegenerateProperties"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.PropertyGenerationOptions.#ctor">
            <summary>
            Creates an instance of PropertyGenerationOptions.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGenerationOptions.IncludeAttachedProperties">
            <summary>
            Returns/sets whether attached properties should be included in the generation.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGenerationOptions.IncludeReadOnlyProperties">
            <summary>
            Returns/sets whether read only properties should be included in the generation.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.PropertyGridPropertyItem">
            <summary>
            A class that represents a property item in the <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.PropertyGridPropertyItem.#ctor(System.Object,System.String,System.String,System.Type,System.Boolean,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="sourceObject">The source object that contains the property representyed by the property item.</param>
            <param name="propertyName">The name of the property.</param>
            <param name="categoryName">The name of the category to which the property belongs.</param>
            <param name="propertyType">The type of the property.</param>
            <param name="isReadOnly">The read-only status of the property.</param>
            <param name="isTypeConverterCustomProperty">True if the property was obtained via TypeConverter.GetProperties, otherwise false.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.PropertyGridPropertyItem.Dispose">
            <summary>
            Called when the instance is about to be discarded.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.PropertyGridPropertyItem.OnIsExpandedChanged(System.Boolean)">
            <summary>
            Invoked when the expanded state of the item has changed.
            </summary>
            <param name="newValue">The new value of the expanded state.</param>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridPropertyItem.AllowExpansionWhenUsingCustomEditor">
            <summary>
            Returns/sets whether an expandable <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/> with a custom editor defined (via a <see cref="T:Infragistics.Controls.Editors.PropertyGridEditorDefinition"/>
            should be allowed to expand.  The default is false.
            </summary>
            <remarks>
            NOTE: This setting only applies to property items whose <see cref="P:Infragistics.Controls.Editors.PropertyGridItem.IsExpandable"/> property returns true (e.g., properties that represent a list/collection
            or object instances with public properties).  It is ignored for other property types.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridPropertyItem.CanAddEntryToListProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.PropertyGridPropertyItem.CanAddEntryToList"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridPropertyItem.CanAddEntryToList">
            <summary>
            Returns true for list-type properties when entries can be created and added to the associated list.  (read only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.PropertyGridPropertyItem.CanAddEntryToListPropertyKey"/>
            <seealso cref="P:Infragistics.Controls.Editors.PropertyGridPropertyItem.CanRemoveEntriesFromList"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridPropertyItem.CanCreateExpandableObjectInstanceProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.PropertyGridPropertyItem.CanCreateExpandableObjectInstance"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridPropertyItem.CanCreateExpandableObjectInstance">
            <summary>
            Returns true for an expandable property when the property value is null and the property type has a parameterless constructor.  (read only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.PropertyGridPropertyItem.CanCreateExpandableObjectInstancePropertyKey"/>
            <seealso cref="P:Infragistics.Controls.Editors.PropertyGridPropertyItem.CanRemoveEntriesFromList"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridPropertyItem.CanRemoveEntriesFromListProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.PropertyGridPropertyItem.CanRemoveEntriesFromList"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridPropertyItem.CanRemoveEntriesFromList">
            <summary>
            Returns true for list-type properties when entries can be removed from the associated list.  (read only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.PropertyGridPropertyItem.CanRemoveEntriesFromListPropertyKey"/>
            <seealso cref="P:Infragistics.Controls.Editors.PropertyGridPropertyItem.CanAddEntryToList"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridPropertyItem.CanResetValueProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.PropertyGridPropertyItem.CanResetValue"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridPropertyItem.CanResetValue">
            <summary>
            Returns true if the property value can be reset (i.e., the value is not currently at the default value).  (read only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.PropertyGridPropertyItem.CanResetValuePropertyKey"/>
            <seealso cref="P:Infragistics.Controls.Editors.PropertyGridPropertyItem.IsValueResetSupported"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridPropertyItem.CategoryName">
            <summary>
            Returns the category name associated with this <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridPropertyItem.EditorValueProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.PropertyGridPropertyItem.EditorValue"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridPropertyItem.EditorValue">
            <summary>
            Returns/sets the 'value' managed by the custom editor associated with this <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/>.
            </summary>
            <remarks>
            Custom editors created via a <see cref="T:Infragistics.Controls.Editors.PropertyGridEditorDefinition"/> should bind to this property to affect the value of the <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.PropertyGridPropertyItem.EditorValueProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.PropertyGridPropertyItem.Value"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridEditorDefinition"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamPropertyGrid.EditorDefinitions"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridPropertyItem.ExpandableObjectValueDescriptionProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.PropertyGridPropertyItem.ExpandableObjectValueDescription"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridPropertyItem.ExpandableObjectValueDescription">
            <summary>
            Returns the description displayed for an expandable property's value when the value is an instance of an expandable object.  (read only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.PropertyGridPropertyItem.ExpandableObjectValueDescriptionPropertyKey"/>
            <seealso cref="P:Infragistics.Controls.Editors.PropertyGridPropertyItem.ExpandableObjectValueDescription"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridPropertyItem.IsBoundDependencyPropertyProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.PropertyGridPropertyItem.IsBoundDependencyProperty"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridPropertyItem.IsBoundDependencyProperty">
            <summary>
            Returns true if the property is a DependencyProperty and its ValueSource is a BindingExpression and <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.PreventEditingOfBoundProperties"/> has been set to true.  (read only)
            </summary>
            <remarks>
            If this property returns true, the <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/> will:
            	1. Treat the property associated with this <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/> as a read-only property for editing purposes
            	2. Suppress the display of the property's value in the editor
            	3. Highlight the property's editor in the UI with a distinctively colored Border
            <para class="body">
            <b>Note:</b> This property will only return true for a bound DependencyProperty if <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.PreventEditingOfBoundProperties"/> has been set to true.
            If <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.PreventEditingOfBoundProperties"/> is left at its default value of false, this property will ALWAYS return false.
            </para>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.PropertyGridPropertyItem.IsBoundDependencyPropertyPropertyKey"/>
            <seealso cref="P:Infragistics.Controls.Editors.PropertyGridPropertyItem.CanResetValue"/>
            <seealso cref="P:Infragistics.Controls.Editors.PropertyGridPropertyItem.IsReadOnly"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamPropertyGrid.PreventEditingOfBoundProperties"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridPropertyItem.IsExpandableWithCustomEditorProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.PropertyGridPropertyItem.IsExpandableWithCustomEditor"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridPropertyItem.IsExpandableWithCustomEditor">
            <summary>
            Returns true for an expandable property whose underlying type has an associated <see cref="T:Infragistics.Controls.Editors.PropertyGridEditorDefinition"/> defined in <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.EditorDefinitions"/>.  (read only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.PropertyGridPropertyItem.IsExpandableWithCustomEditorPropertyKey"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridEditorDefinition"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamPropertyGrid.EditorDefinitions"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridPropertyItem.IsMergable">
            <summary>
            Returns/sets whether this property can be merged with similarly named properties when multiple objects are selected in the <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridPropertyItem.IsReadOnly">
            <summary>
            Returns the read-only status of this property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridPropertyItem.IsRemoveableFromListProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.PropertyGridPropertyItem.IsRemoveableFromList"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridPropertyItem.IsRemoveableFromList">
            <summary>
            Returns true for the 'pseudo' properties that represent entries in a parent list, when that parent list is modifiable.  (read only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.PropertyGridPropertyItem.IsRemoveableFromListPropertyKey"/>
            <seealso cref="P:Infragistics.Controls.Editors.PropertyGridPropertyItem.CanAddEntryToList"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridPropertyItem.IsValueResetSupportedProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.PropertyGridPropertyItem.IsValueResetSupported"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridPropertyItem.IsValueResetSupported">
            <summary>
            Returns true if it is possible to reset this the property's value.  (read only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.PropertyGridPropertyItem.IsValueResetSupportedPropertyKey"/>
            <seealso cref="P:Infragistics.Controls.Editors.PropertyGridPropertyItem.CanResetValue"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridPropertyItem.ListValueDescriptionProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.PropertyGridPropertyItem.ListValueDescription"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridPropertyItem.ListValueDescription">
            <summary>
            Returns the description of a lists's value when the property is a list type property.  (read only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.PropertyGridPropertyItem.ListValueDescriptionPropertyKey"/>
            <seealso cref="P:Infragistics.Controls.Editors.PropertyGridPropertyItem.ListValueDescription"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridPropertyItem.PropertyNameProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.PropertyGridPropertyItem.PropertyName"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridPropertyItem.PropertyName">
            <summary>
            Returns/sets the property name associated with this <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/>.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.PropertyGridPropertyItem.PropertyNameProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridPropertyItem.PropertyType">
            <summary>
            Returns the Type of this <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/>. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridPropertyItem.SortOrder">
            <summary>
            Returns the sort order of this property.  (read only)
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridPropertyItem.ValueProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.PropertyGridPropertyItem.Value"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridPropertyItem.Value">
            <summary>
            Returns/sets the value of the property associated with this <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/>.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.PropertyGridPropertyItem.ValueProperty"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.PropertyGridPropertyItem.ReloadStandardValues">
            <summary>
            Forces a reload of the list of 'StandardValues' supplied by the property's TypeConverter, for properties that support 
            'StandardValues' (i.e., properties whose TypeConverter returns true for GetStandardValuesSupported').
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.PropertyGridPropertyItem.RequeryEditorDefinition">
            <summary>
            Forces the <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/> to inspect the <see cref="T:Infragistics.Controls.Editors.PropertyGridEditorDefinition"/> assigned to it
            and re-evaluate the <see cref="P:Infragistics.Controls.Editors.PropertyGridEditorDefinition.TemplateSelector"/>, <see cref="P:Infragistics.Controls.Editors.PropertyGridEditorDefinition.EditTemplate"/> and
            <see cref="P:Infragistics.Controls.Editors.PropertyGridEditorDefinition.ReadOnlyTemplate"/> properties and (if necessary) update the DataTemplate used to display/edit the
            property value.
            </summary>
            <remarks>
            <para>
            <b>Note:</b> This method can be helpful if you want to choose a different DataTemplate to display/edit a property's value based on the value of another
            property.  For example, if property 'A' requires a different DataTemplate for displaying/editing its value depending on the value of property
            'B', you can call this method on the <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/> for property 'A' when the value of property 'B' changes.  (Note: You can
            listen to the <see cref="E:Infragistics.Controls.Editors.XamPropertyGrid.PropertyItemValueChanged"/> event to be notified when the value of a property changes, and you can find the
            <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/> associated with a specific property by calling <see cref="M:Infragistics.Controls.Editors.XamPropertyGrid.FindPropertyItem(System.Object,System.String)"/>)
            </para>
            </remarks>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridEditorDefinition"/>
            <seealso cref="M:Infragistics.Controls.Editors.XamPropertyGrid.FindPropertyItem(System.Object,System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.PropertyGridPropertyItem.GetCanResetValue">
            <summary>
            Returns true if value reset is supported for this property and the property is not currently set to its default value.
            </summary>
            <returns>True if value reset is supported for this property and the property is not currently set to its default value, otherwise false.</returns>
            <remarks>
            Overrides of this method in derived classes do not need to call the base implementation if they provide a return value.
            </remarks>
            <seealso cref="M:Infragistics.Controls.Editors.PropertyGridPropertyItem.GetIsValueResetSupported"/>
            <seealso cref="M:Infragistics.Controls.Editors.PropertyGridPropertyItem.ResetValue"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.PropertyGridPropertyItem.GetIsValueResetSupported">
            <summary>
            Returns true if resetting the value is supported for this property.
            </summary>
            <returns>True if resetting the value is supported for this property, otherwise false.</returns>
            <remarks>
            Overrides of this method in derived classes do not need to call the base implementation if they provide a return value.
            </remarks>
            <seealso cref="M:Infragistics.Controls.Editors.PropertyGridPropertyItem.GetCanResetValue"/>
            <seealso cref="M:Infragistics.Controls.Editors.PropertyGridPropertyItem.ResetValue"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.PropertyGridPropertyItem.OnChildPropertyValueChanged">
            <summary>
            Called when the value of a property represented by a child <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/> has changed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.PropertyGridPropertyItem.ResetValue">
            <summary>
            Resets the value of the property to it's default value.
            </summary>
            <seealso cref="M:Infragistics.Controls.Editors.PropertyGridPropertyItem.GetCanResetValue"/>
            <seealso cref="M:Infragistics.Controls.Editors.PropertyGridPropertyItem.ResetValue"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridPropertyItem.Error">
            <summary>
            Returns an error message indicating what is wrong with this object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridPropertyItem.Item(System.String)">
            <summary>
            Returns an error message for the property with the given name, or null if there is no error associated with the property.
            </summary>
            <param name="columnName">The name of the property for which an error message should be returned.</param>
            <returns>An error message for the property with the given name, or null if there is no error associated with the property.</returns>
        </member>
        <member name="T:Infragistics.Controls.Editors.BrushResourcesEventArgs">
            <summary>
            Event arguments for the <see cref="E:Infragistics.Controls.Editors.XamPropertyGrid.BrushResourcesLoading"/> event.
            </summary>
            <seealso cref="E:Infragistics.Controls.Editors.XamPropertyGrid.BrushResourcesLoading"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.BrushResourcesEventArgs.BrushResources">
            <summary>
            Returns a list of <see cref="T:Infragistics.Controls.Editors.Primitives.PropertyGridBrushResourceItem"/>s that represent the brush resources to be displayed in the brush editor for the specified <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.BrushResourcesEventArgs.PropertyItem">
            <summary>
            Returns the property (of type Brush) for which a list of <see cref="T:Infragistics.Controls.Editors.Primitives.PropertyGridBrushResourceItem"/>s should be returned (via the <see cref="P:Infragistics.Controls.Editors.BrushResourcesEventArgs.BrushResources"/> property).
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.BrushResourcesEventArgs.AutomaticallyIncludeSystemBrushResources">
            <summary>
            Returns/sets whether the built-in brush editor should automatically include System brush resources in the list of s
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.BrushResourceEventArgs">
            <summary>
            Event arguments for the <see cref="E:Infragistics.Controls.Editors.XamPropertyGrid.BrushResourceSelected"/> event.
            </summary>
            <seealso cref="E:Infragistics.Controls.Editors.XamPropertyGrid.BrushResourceSelected"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.BrushResourceEventArgs.BrushResource">
            <summary>
            Returns the selected <see cref="T:Infragistics.Controls.Editors.Primitives.PropertyGridBrushResourceItem"/>s.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.BrushResourceEventArgs.PropertyItem">
            <summary>
            Returns the property (of type Brush) for which the <see cref="T:Infragistics.Controls.Editors.Primitives.PropertyGridBrushResourceItem"/> was selected.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.PropertiesGeneratedEventArgs">
            <summary>
            Class that defines the arguments passed in the <see cref="E:Infragistics.Controls.Editors.XamPropertyGrid.PropertiesGenerated"/> event.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.XamPropertyGrid.Items"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamPropertyGrid.PropertyGenerator"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.PropertiesGeneratedEventArgs.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.PropertyGridCommandExecutedEventArgs">
            <summary>
            Event arguments for the <see cref="E:Infragistics.Controls.Editors.XamPropertyGrid.CommandExecuted"/> event.
            </summary>
            <seealso cref="E:Infragistics.Controls.Editors.XamPropertyGrid.CommandExecuted"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridCommandExecutedEventArgs.Command">
            <summary>
            Returns the command which was executed on the <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridCommandExecutedEventArgs.CommandParameter">
            <summary>
            Returns the parameter used when executing the command.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridCommandExecutedEventArgs.SourceElement">
            <summary>
            Returns the element on which the command was executed.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.PropertyGridCommandExecutingEventArgs">
            <summary>
            Event arguments for the <see cref="E:Infragistics.Controls.Editors.XamPropertyGrid.CommandExecuting"/> event.
            </summary>
            <seealso cref="E:Infragistics.Controls.Editors.XamPropertyGrid.CommandExecuting"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridCommandExecutingEventArgs.Command">
            <summary>
            Returns the command which will be executed on the <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridCommandExecutingEventArgs.CommandParameter">
            <summary>
            Returns the parameter which will be used when executing the command.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyGridCommandExecutingEventArgs.SourceElement">
            <summary>
            Returns the element on which the command will be executed.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.PropertyItemEventArgs">
            <summary>
            Class that defines the arguments passed in the <see cref="E:Infragistics.Controls.Editors.XamPropertyGrid.PropertyItemValueChanged"/> event.
            </summary>
            <seealso cref="E:Infragistics.Controls.Editors.XamPropertyGrid.PropertyItemValueChanged"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.PropertyItemEventArgs.#ctor(Infragistics.Controls.Editors.PropertyGridPropertyItem)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.PropertyItemEventArgs.PropertyItem">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/> associated with the event.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.SelectedItemChangedEventArgs">
            <summary>
            Class that defines the arguments passed in the <see cref="E:Infragistics.Controls.Editors.XamPropertyGrid.SelectedItemChanged"/> event.
            </summary>
            <seealso cref="E:Infragistics.Controls.Editors.XamPropertyGrid.SelectedItemChanged"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.SelectedItemChangedEventArgs.#ctor(Infragistics.Controls.Editors.PropertyGridItem,Infragistics.Controls.Editors.PropertyGridItem)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.SelectedItemChangedEventArgs.NewSelectedItem">
            <summary>
            Returns the currently selected <see cref="T:Infragistics.Controls.Editors.PropertyGridItem"/> or null of there is no currently selected item.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.SelectedItemChangedEventArgs.OldSelectedItem">
            <summary>
            Returns the previously selected <see cref="T:Infragistics.Controls.Editors.PropertyGridItem"/> or null of there was no previously selected item.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.SelectedObjectsChangedEventArgs">
            <summary>
            Class that defines the arguments passed in the <see cref="E:Infragistics.Controls.Editors.XamPropertyGrid.SelectedObjectsChanged"/> event.
            </summary>
            <seealso cref="E:Infragistics.Controls.Editors.XamPropertyGrid.SelectedObjectsChanged"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.SelectedObjectsChangedEventArgs.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.BrushType">
            <summary>
            Specifies the type of brush being edited by the brush editor
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.BrushType.None">
            <summary>
            The brush is null.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.BrushType.Solid">
            <summary>
            The brush is a SolidColorBrush.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.BrushType.LinearGradient">
            <summary>
            The brush is a LinearGradientBrush.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.BrushType.RadialGradient">
            <summary>
            The brush is a RadialGradientBrush
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.ColorFormat">
            <summary>
            Specifies the color format used by the brush editor.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ColorFormat.RGB">
            <summary>
            The brush editor's color format is RGB.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ColorFormat.HSL">
            <summary>
            The brush editor's color format is HSL.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ColorFormat.CMYK">
            <summary>
            The brush editor's color format is CMYK.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.PropertyGridBrushGroupType">
            <summary>
            Indicates the type of grouping for brush resources in the <see cref="T:Infragistics.Controls.Editors.Primitives.PropertyGridBrushEditorControl"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridBrushGroupType.Local">
            <summary>
            Indicates a grouping for brush resources defined locally.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridBrushGroupType.System">
            <summary>
            Indicates a grouping for brush resources defined at the system level.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.PropertyGridFilterOperandSource">
            <summary>
            Specifies which <see cref="T:Infragistics.Controls.Editors.PropertyGridItem"/> value should be used as the operand when evaluating 
            a <see cref="T:Infragistics.Controls.Editors.PropertyGridComparisonCondition"/>, <see cref="T:Infragistics.Controls.Editors.PropertyGridComplementCondition"/> or
            <see cref="T:Infragistics.Controls.Editors.PropertyGridConditionGroup"/>.
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridComparisonCondition"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridComplementCondition"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridConditionGroup"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridFilterOperandSource.CategoryName">
            <summary>
            Specifies that the source for the filter operand is the <see cref="P:Infragistics.Controls.Editors.PropertyGridPropertyItem.CategoryName"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridFilterOperandSource.Description">
            <summary>
            Specifies that the source for the filter operand is the <see cref="P:Infragistics.Controls.Editors.PropertyGridItem.Description"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridFilterOperandSource.PropertyName">
            <summary>
            Specifies that the source for the filter operand is the <see cref="P:Infragistics.Controls.Editors.PropertyGridPropertyItem.PropertyName"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridFilterOperandSource.DisplayName">
            <summary>
            Specifies that the source for the filter operand is the <see cref="P:Infragistics.Controls.Editors.PropertyGridItem.DisplayName"/>.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.PropertyGridCommandType">
            <summary>
            An enumeration of available commands for the <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/> control.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridCommandType.AddListEntry">
            <summary>
            Adds an entry to the list represented by the <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/> passed as the commmand parameter.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridCommandType.RemoveListEntry">
            <summary>
            Removes the list entry represented by the <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/> passed as the commmand parameter.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridCommandType.ResetPropertyValue">
            <summary>
            Resets the value of the property represented by the <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/> passed as the commmand parameter.  This command is enabled
            if the property has a DefaultValueAttribute which specifies a value that is different than the property's current value, or if the source object
            that contains the property exposes a ShouldSerialize[propname] method that returns true along with a Reset[propname] method.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridCommandType.SelectNextItem">
            <summary>
            Selects the next displayable item (if any).  If no item is currently selected, then no action is taken.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridCommandType.SelectPreviousItem">
            <summary>
            Selects the previous displayable item (if any).  If no item is currently selected, then no action is taken.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridCommandType.ExpandSelectedItem">
            <summary>
            Expands the currently selected item.  If no item is currently selected, then no action is taken.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridCommandType.CollapseSelectedItem">
            <summary>
            Collapses the currently selected item.  If no item is currently selected, then no action is taken.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridCommandType.ToggleSelectedItemExpandedState">
            <summary>
            Toggles the expanded state of the currently selected item.  If no item is currently selected, then no action is taken.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridCommandType.EnterEditMode">
            <summary>
            Enter edit mode on the currently selected item.  If no item is currently selected or the currently selected item is already in edit mode, then no action is taken.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridCommandType.ExitEditMode">
            <summary>
            Exit edit mode on the currently selected item.  If no item is currently selected or the currently selected item is not in edit mode, then no action is taken.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridCommandType.SortByCategory">
            <summary>
            Sorts the list of properties alphabetically.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridCommandType.SortAlphabetically">
            <summary>
            Sorts the list of properties by category.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridCommandType.ToggleSortType">
            <summary>
            Toggles the sort type between alphabetic and categorized.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridCommandType.ClearFilterText">
            <summary>
            Clears filter text (if any) entered by the user.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridCommandType.ToggleFilterAreaFocus">
            <summary>
            Toggles the focused state of the filter area.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridCommandType.MoveToHome">
            <summary>
            Moves the selection and display to the first item.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridCommandType.MoveToEnd">
            <summary>
            Moves the selection and display to the last item.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridCommandType.ScrollLineUp">
            <summary>
            Moves the selection up one item.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridCommandType.ScrollLineDown">
            <summary>
            Moves the selection down one item.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridCommandType.ScrollPageUp">
            <summary>
            Moves the selection up one page.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridCommandType.ScrollPageDown">
            <summary>
            Moves the selection down one page.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridCommandType.CreateExpandableObject">
            <summary>
            Creates an object instance of the appropriate type and assigns it to the expandable property represented by the <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/> passed as the commmand parameter.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridCommandType.ShowOptionsMenu">
            <summary>
            Displays the options menu for the property represented by the <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/> passed as the commmand parameter.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.PropertyGridStates">
            <summary>
            Represents the different states of the <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/> control.  Used to evaluate whether a specific command can be executed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridStates.HasSelectedItem">
            <summary>
            There is an item selected in the property grid.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridStates.SelectedItemIsExpandable">
            <summary>
            The selected item is expandable.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridStates.SelectedItemIsNotExpandable">
            <summary>
            The selected item is not expandable.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridStates.SelectedItemIsExpanded">
            <summary>
            The selected item is expanded.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridStates.SelectedItemIsCollapsed">
            <summary>
            The selected item is expandable.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridStates.SelectedItemIsProperty">
            <summary>
            The selected item is a property item.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridStates.SelectedItemIsCategory">
            <summary>
            The selected item is a category item.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridStates.SelectedPropertyIsDirectlyEditable">
            <summary>
            The selected property is a directly editable property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridStates.SelectedPropertyIsInEditMode">
            <summary>
            The selected property is in edit mode.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridStates.SelectedPropertyIsNotInEditMode">
            <summary>
            The selected property is not in edit mode.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridStates.HasDisplayableItems">
            <summary>
            There are items to display.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridStates.FilterAreaIsVisible">
            <summary>
            The filter area is visible.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.PropertyGridStates.All">
            <summary>
            All the available states
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.XamPropertyGrid">
            <summary>
            Custom control that displays properties and their values, along with a UI for editing those values.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamPropertyGrid.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamPropertyGrid.OnApplyTemplate">
            <summary>
            Invoked when the template has been applied to the element.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamPropertyGrid.OnCreateAutomationPeer">
            <summary>
            Returns an automation peer that exposes the <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/> to UI Automation.
            </summary>
            <returns>A <see cref="T:Infragistics.AutomationPeers.XamPropertyGridAutomationPeer"/></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamPropertyGrid.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Called when a key is pressed.
            </summary>
            <param name="e">Information about the key that was pressed.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamPropertyGrid.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Raised when the left mouse button is pressed.
            </summary>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamPropertyGrid.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            Raised when the mouse wheel is rotated while over the control.
            </summary>
            <param name="e">Provides information about the event</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamPropertyGrid.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Invoked when a key is pressed.
            </summary>
            <param name="args">Additional information about the event.</param>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamPropertyGrid.CategorySortComparer">
            <summary>
            Returns/sets an IComparer used to sort <see cref="T:Infragistics.Controls.Editors.PropertyGridCategoryItem"/>s.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamPropertyGrid.ColumnResizeThumbOffsetProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.ColumnResizeThumbOffset"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamPropertyGrid.ColumnResizeThumbOffset">
            <summary>
            Returns the offset of the Thumb element that is used to resize the name and value columns. (read only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.XamPropertyGrid.ColumnResizeThumbOffsetPropertyKey"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamPropertyGrid.ColumnResizeThumbVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.ColumnResizeThumbVisibility"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamPropertyGrid.ColumnResizeThumbVisibility">
            <summary>
            Returns the Visibility of the Thumb element that is used to resize the name and value columns. (read only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.XamPropertyGrid.ColumnResizeThumbVisibilityPropertyKey"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamPropertyGrid.DescriptionAreaVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.DescriptionAreaVisibility"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamPropertyGrid.DescriptionAreaVisibility">
            <summary>
            Returns/sets the visibility of the description area that is displayed below the property area which displays information about the currently selected property.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.XamPropertyGrid.DescriptionAreaVisibilityProperty"/>
            <seealso cref="F:Infragistics.Controls.Editors.XamPropertyGrid.FilterAreaVisibilityProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamPropertyGrid.EditorDefinitionsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.EditorDefinitions"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamPropertyGrid.EditorDefinitions">
            <summary>
            Returns a collection of <see cref="T:Infragistics.Controls.Editors.PropertyGridEditorDefinition"/>s that are used to override the built-in editors
            for <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/>s with a specific type or name, or for <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/>s 
            that belong to a specific Category.
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridEditorDefinition"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridEditorDefinitionCollection"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamPropertyGrid.FilterAreaVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.FilterAreaVisibility"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamPropertyGrid.FilterAreaVisibility">
            <summary>
            Returns/sets the visibility of the filter area that is displayed above the property area which displays a textbox for entering filter criteria as well as options for categorizing and sorting the properties.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.XamPropertyGrid.FilterAreaVisibilityProperty"/>
            <seealso cref="F:Infragistics.Controls.Editors.XamPropertyGrid.DescriptionAreaVisibilityProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamPropertyGrid.FilterTextProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.FilterText"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamPropertyGrid.FilterText">
            <summary>
            Returns/sets a string that defines a 'contains' filter for filtering the items that are displayed in the control
            based on property name.  The 'contains' filter that is created from this string is combined (using an 'Add' operator)
            with the filters (if any) specified in the <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.ItemFilters"/> property. By default this property is bound to 
            the textbox in the filter area displayed at the top of the control.
            </summary>
            <remarks>
            <b>Note: </b>To perform complex filtering with multiple conditions or filtering that is evaluated against <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/> values
            other than property name (e.g., <see cref="F:Infragistics.Controls.Editors.PropertyGridFilterOperandSource.Description"/>, <see cref="F:Infragistics.Controls.Editors.PropertyGridFilterOperandSource.CategoryName"/>,
            <see cref="F:Infragistics.Controls.Editors.PropertyGridFilterOperandSource.PropertyName"/> or <see cref="F:Infragistics.Controls.Editors.PropertyGridFilterOperandSource.DisplayName"/>) use
            the <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.ItemFilters"/> property.
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.XamPropertyGrid.FilterTextProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamPropertyGrid.ItemFilters"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridFilterOperandSource"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamPropertyGrid.FilterAreaVisibility"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamPropertyGrid.IsCategorizedProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.IsCategorized"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamPropertyGrid.IsCategorized">
            <summary>
            Returns/sets whether the items in the <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/> are grouped by the category they belong to.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.XamPropertyGrid.IsCategorizedProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamPropertyGrid.ItemFiltersProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.ItemFilters"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamPropertyGrid.ItemFilters">
            <summary>
            Returns/sets the filter condition(s) that the <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/> uses when determining which <see cref="T:Infragistics.Controls.Editors.PropertyGridItem"/>s to display.
            The filters defined with this property are combined (using an 'Add' operator) with the 'Contains' filter created from the <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.FilterText"/>
            property (if any).  The FilterText property is bound (by default) to the textbox in the <see cref="T:Infragistics.Controls.Editors.Primitives.PropertyGridFilterAreaControl"/> displayed at the top 
            of the XamPropertyGrid.
            </summary>
            <remarks>
            <b>Note: </b>Although it is possible to use any class that derives from <see cref="T:Infragistics.Windows.Controls.ICondition"/> (e.g., the conditions supplied in the
            Infragistics base class library such as <see cref="T:Infragistics.Windows.Controls.ComparisonCondition"/>, <see cref="T:Infragistics.Windows.Controls.ComplementCondition"/> and <see cref="T:Infragistics.Windows.Controls.ConditionGroup"/>)
            to set this property, the corresponding custom <see cref="T:Infragistics.Windows.Controls.ICondition"/>s supplied with the XamPropertyGrid provide more flexibility.
            Specifically, the <see cref="T:Infragistics.Controls.Editors.PropertyGridComparisonCondition"/>, <see cref="T:Infragistics.Controls.Editors.PropertyGridComplementCondition"/> and 
            <see cref="T:Infragistics.Controls.Editors.PropertyGridConditionGroup"/> conditions each expose an <b>OperandSource</b> property of type <see cref="T:Infragistics.Controls.Editors.PropertyGridFilterOperandSource"/>
            which lets you specify the <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/> value that should be used when evaluating whether a particular item satisfies the 
            filter criteria.
            
            If you do choose to use the standard <see cref="T:Infragistics.Windows.Controls.ComparisonCondition"/>, <see cref="T:Infragistics.Windows.Controls.ComplementCondition"/> and <see cref="T:Infragistics.Windows.Controls.ConditionGroup"/> conditions
            or even a custom condition that implements <see cref="T:Infragistics.Windows.Controls.ICondition"/>, then <see cref="F:Infragistics.Controls.Editors.PropertyGridFilterOperandSource.PropertyName"/> is used by
            the filter evaluation logic to determine whether a particular item matches the specified condition(s).
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.XamPropertyGrid.ItemFiltersProperty"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridFilterOperandSource"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridComplementCondition"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridConditionGroup"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridComparisonCondition"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamPropertyGrid.FilterText"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamPropertyGrid.FilterAreaVisibility"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamPropertyGrid.ItemsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.Items"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamPropertyGrid.Items">
            <summary>
            Returns a read-only observable collection of <see cref="T:Infragistics.Controls.Editors.PropertyGridItem"/>s populated by the current <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.PropertyGenerator"/>.
            </summary>
            <remarks>
            If <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.IsCategorized"/> is true then this collection will contain <see cref="T:Infragistics.Controls.Editors.PropertyGridCategoryItem"/>s representing
            the categories displayed at the root level of the <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/>.  
            If <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.IsCategorized"/> is false then this collection will contain <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/>s representing
            the properties displayed at the root level of the <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/>.  
            </remarks>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridItemCollection"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridItem"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGeneratorBase"/>
            <seealso cref="T:Infragistics.Controls.Editors.ReflectionPropertyGenerator"/>
            <seealso cref="T:Infragistics.Controls.Editors.TypeDescriptorPropertyGenerator"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamPropertyGrid.IsCategorized"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamPropertyGrid.NameColumnWidthProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.NameColumnWidth"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamPropertyGrid.NameColumnWidth">
            <summary>
            Returns/sets the width of the column in each item entry that displays the property name.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.XamPropertyGrid.NameColumnWidthProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamPropertyGrid.OptionsMenuProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.OptionsMenu"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamPropertyGrid.OptionsMenu">
            <summary>
            Returns/sets a ContextMenu that is displayed when the user clicks on the menu button displayed in each property item when the <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.OptionsMenuVisibility"/> proeprty is set to Visibility.Visibile.
            </summary>
            <remarks>
            NOTE: If this property is not set and the <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.OptionsMenuVisibility"/> property is set to Visible, a default built-in options menu
            will be displayed with a 'Reset' option to reset the property's value.  This option may be disabled if the property's value cannot be reset.
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.XamPropertyGrid.OptionsMenuProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamPropertyGrid.OptionsMenuVisibility"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamPropertyGrid.OptionsMenuVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.OptionsMenuVisibility"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamPropertyGrid.OptionsMenuVisibility">
            <summary>
            Returns/sets the visibility of the button that displays the <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.OptionsMenu"/> when clicked.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.XamPropertyGrid.OptionsMenuVisibilityProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamPropertyGrid.OptionsMenu"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamPropertyGrid.PreventEditingOfBoundProperties">
            <summary>
            Returns/sets whether the <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/> should prevent the editing of dependency properties whose locally set value is a BindingExpression.
            </summary>
            <remarks>
            This property defaults to false.  If set to true the following behavioral and appearance changes will be applied to <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/>s 
            that represent a DependencyProperty with a locally set BindingExpression:
            	1. The property will not be editable
            	2. The effective property value will not be displayed
            	3. The edit area for the property will be highlighted with a border and its reset/options button will be filled with the same distinctive color as the border.
            </remarks>
            <seealso cref="P:Infragistics.Controls.Editors.PropertyGridPropertyItem.IsBoundDependencyProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamPropertyGrid.PropertyGeneratorProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.PropertyGenerator"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamPropertyGrid.PropertyGenerator">
            <summary>
            Returns/sets an instance of an object that derives from <see cref="T:Infragistics.Controls.Editors.PropertyGeneratorBase"/> and used for generating property items.  
            </summary>
            <remarks>
            If this property is not set an instance of <see cref="T:Infragistics.Controls.Editors.TypeDescriptorPropertyGenerator"/> will automatically be supplied by the <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.XamPropertyGrid.PropertyGeneratorProperty"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGeneratorBase"/>
            <seealso cref="T:Infragistics.Controls.Editors.ReflectionPropertyGenerator"/>
            <seealso cref="T:Infragistics.Controls.Editors.TypeDescriptorPropertyGenerator"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamPropertyGrid.PropertyGenerationOptions"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamPropertyGrid.PropertyGenerationOptions">
            <summary>
            Returns/sets the <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.PropertyGenerationOptions"/> to use when generating property items.
            </summary>
            <remarks>
            <b>NOTE:</b> Setting this property will make the options available the next time a property generation is triggered
            by setting the <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.SelectedObject"/> property, the <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.SelectedObjects"/> property or by calling the 
            <see cref="M:Infragistics.Controls.Editors.XamPropertyGrid.RegenerateProperties"/> method.
            </remarks>
            <seealso cref="P:Infragistics.Controls.Editors.XamPropertyGrid.PropertyGenerator"/>
            <seealso cref="T:Infragistics.Controls.Editors.ReflectionPropertyGenerator"/>
            <seealso cref="T:Infragistics.Controls.Editors.TypeDescriptorPropertyGenerator"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamPropertyGrid.SelectedObject"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamPropertyGrid.SelectedObjects"/>
            <seealso cref="M:Infragistics.Controls.Editors.XamPropertyGrid.RegenerateProperties"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamPropertyGrid.PropertySortComparer">
            <summary>
            Returns/sets an IComparer used to sort <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/>s.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamPropertyGrid.ScrollBarVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.ScrollBarVisibility"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamPropertyGrid.ScrollBarVisibility">
            <summary>
            Returns/sets the ScrollBarVisibility of the vertical scrollbar.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamPropertyGrid.SelectedItemProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.SelectedItem"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamPropertyGrid.SelectedItem">
            <summary>
            Returns/sets the currently selected <see cref="T:Infragistics.Controls.Editors.PropertyGridItem"/> or null if no item is currently selected.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.XamPropertyGrid.SelectedItemProperty"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridItem"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridCategoryItem"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamPropertyGrid.SelectedObjectProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.SelectedObject"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamPropertyGrid.SelectedObject">
            <summary>
            Returns/sets the object whose properties are being edited.
            </summary>
            <remarks>
            The object returned or set on this property corresponds to the first object in the <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.SelectedObjects"/> list.
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.XamPropertyGrid.SelectedObjectProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamPropertyGrid.SelectedObjects"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamPropertyGrid.SelectedObjectsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.SelectedObjects"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamPropertyGrid.SelectedObjects">
            <summary>
            Returns/sets the array objects whose properties are being edited.
            </summary>
            <remarks>
            When this property is set the <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.SelectedObject"/> property returns the first object in the list.
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.XamPropertyGrid.SelectedObjectsProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamPropertyGrid.SelectedObject"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamPropertyGrid.FindPropertyItem(System.Object,System.String)">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/> that represents the property with the specified name on the specified source object.
            </summary>
            <remarks>
            <b>Note: </b> <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/>s that are currently filtered out or that represent a property on an 
            expandable object that is currently collapsed will NOT be found and returned.
            </remarks>
            <param name="sourceObject">The source object instance that contains the property to be found.</param>
            <param name="propertyName">The name of the property to be found.</param>
            <returns>The <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/> that represents the property with the specified name on the specified source object.</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamPropertyGrid.RegenerateProperties">
            <summary>
            Forces a re-generation of properties based on the currently selected object(s) (i.e., <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.SelectedObject"/> 
            and <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.SelectedObjects"/>) using the current <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.PropertyGenerator"/> and <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.PropertyGenerationOptions"/>.  
            </summary>
            <remarks>
            <b>NOTE: </b> It is normally not necessary to call this method - setting the <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.SelectedObject"/> or <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.SelectedObjects"/>
            properties will automatically trigger the generation of property items.  However, this method can be helpful when specifying  
            new <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.PropertyGenerationOptions"/> since setting PropertyGenerationOptions does not automatically trigger a re-generation. 
            </remarks>
            <seealso cref="P:Infragistics.Controls.Editors.XamPropertyGrid.SelectedObject"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamPropertyGrid.SelectedObjects"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamPropertyGrid.PropertyGenerator"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamPropertyGrid.PropertyGenerationOptions"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamPropertyGrid.OnBrushResourcesLoading(Infragistics.Controls.Editors.BrushResourcesEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Controls.Editors.XamPropertyGrid.BrushResourcesLoading"/> event.
            </summary>
            <param name="args">Event args for raising the event.</param>
            <seealso cref="E:Infragistics.Controls.Editors.XamPropertyGrid.BrushResourcesLoading"/>
            <seealso cref="T:Infragistics.Controls.Editors.BrushResourcesEventArgs"/>
        </member>
        <member name="E:Infragistics.Controls.Editors.XamPropertyGrid.BrushResourcesLoading">
            <summary>
            Raised when the built-in editor for a brush property is about to initialize the list of brush resources available for selection in the brush editor.
            </summary>
            <remarks>
            <b>NOTE: </b>To enable the selection of a brush from a list of brush resources in the built-in brush editor, handle this event 
            </remarks>
            <seealso cref="T:Infragistics.Controls.Editors.BrushResourcesEventArgs"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamPropertyGrid.OnBrushResourceSelected(Infragistics.Controls.Editors.BrushResourceEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Controls.Editors.XamPropertyGrid.BrushResourceSelected"/> event.
            </summary>
            <param name="args">Event args for raising the event.</param>
            <seealso cref="E:Infragistics.Controls.Editors.XamPropertyGrid.BrushResourceSelected"/>
            <seealso cref="T:Infragistics.Controls.Editors.BrushResourceEventArgs"/>
        </member>
        <member name="E:Infragistics.Controls.Editors.XamPropertyGrid.BrushResourceSelected">
            <summary>
            Raised when the user has selected a brush resource from within the <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/>'s built-in brush editor.
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.BrushResourceEventArgs"/>
        </member>
        <member name="E:Infragistics.Controls.Editors.XamPropertyGrid.CommandExecuted">
            <summary>
            Invoked when a command is executed on the <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamPropertyGrid.OnCommandExecuted(Infragistics.Controls.Editors.PropertyGridCommandExecutedEventArgs)">
            <summary>
            Used to raise the <see cref="E:Infragistics.Controls.Editors.XamPropertyGrid.CommandExecuted"/> event.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Editors.XamPropertyGrid.CommandExecuting">
            <summary>
            Invoked when a command will be executed on the <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamPropertyGrid.OnCommandExecuting(Infragistics.Controls.Editors.PropertyGridCommandExecutingEventArgs)">
            <summary>
            Used to raise the <see cref="E:Infragistics.Controls.Editors.XamPropertyGrid.CommandExecuting"/> event.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamPropertyGrid.OnPropertiesGenerated(Infragistics.Controls.Editors.PropertiesGeneratedEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Controls.Editors.XamPropertyGrid.PropertiesGenerated"/> event.
            </summary>
            <param name="args">Event args for raising the event.</param>
            <seealso cref="E:Infragistics.Controls.Editors.XamPropertyGrid.PropertiesGenerated"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertiesGeneratedEventArgs"/>
        </member>
        <member name="E:Infragistics.Controls.Editors.XamPropertyGrid.PropertiesGenerated">
            <summary>
            Raised when the <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.PropertyGenerator"/> has finished generating items and the <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.Items"/> collection is fully populated.
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.PropertiesGeneratedEventArgs"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamPropertyGrid.Items"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridItemCollection"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamPropertyGrid.PropertyGenerator"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamPropertyGrid.OnPropertyItemValueChanged(Infragistics.Controls.Editors.PropertyItemEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Controls.Editors.XamPropertyGrid.PropertyItemValueChanged"/> event.
            </summary>
            <param name="args">Event args for raising the event.</param>
            <seealso cref="E:Infragistics.Controls.Editors.XamPropertyGrid.PropertyItemValueChanged"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyItemEventArgs"/>
        </member>
        <member name="E:Infragistics.Controls.Editors.XamPropertyGrid.PropertyItemValueChanged">
            <summary>
            Raised when the value of an <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/> has changed.
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyItemEventArgs"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamPropertyGrid.OnPropertyItemValueChanging(Infragistics.Controls.Editors.PropertyItemEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Controls.Editors.XamPropertyGrid.PropertyItemValueChanging"/> event.
            </summary>
            <param name="args">Event args for raising the event.</param>
            <seealso cref="E:Infragistics.Controls.Editors.XamPropertyGrid.PropertyItemValueChanging"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyItemEventArgs"/>
        </member>
        <member name="E:Infragistics.Controls.Editors.XamPropertyGrid.PropertyItemValueChanging">
            <summary>
            Raised when the value of an <see cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/> is about to change.
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyItemEventArgs"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridPropertyItem"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamPropertyGrid.OnSelectedItemChanged(Infragistics.Controls.Editors.SelectedItemChangedEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Controls.Editors.XamPropertyGrid.SelectedItemChanged"/> event.
            </summary>
            <param name="args">Event args for raising the event.</param>
            <seealso cref="E:Infragistics.Controls.Editors.XamPropertyGrid.SelectedItemChanged"/>
            <seealso cref="T:Infragistics.Controls.Editors.SelectedItemChangedEventArgs"/>
        </member>
        <member name="E:Infragistics.Controls.Editors.XamPropertyGrid.SelectedItemChanged">
            <summary>
            Raised when the <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.SelectedItem"/> has changed.
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.SelectedItemChangedEventArgs"/>
            <seealso cref="T:Infragistics.Controls.Editors.PropertyGridItem"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamPropertyGrid.OnSelectedObjectsChanged(Infragistics.Controls.Editors.SelectedObjectsChangedEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Controls.Editors.XamPropertyGrid.SelectedObjectsChanged"/> event.
            </summary>
            <param name="args">Event args for raising the event.</param>
            <seealso cref="E:Infragistics.Controls.Editors.XamPropertyGrid.SelectedObjectsChanged"/>
            <seealso cref="T:Infragistics.Controls.Editors.SelectedObjectsChangedEventArgs"/>
        </member>
        <member name="E:Infragistics.Controls.Editors.XamPropertyGrid.SelectedObjectsChanged">
            <summary>
            Raised when the <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.SelectedObject"/> or <see cref="P:Infragistics.Controls.Editors.XamPropertyGrid.SelectedObjects"/> properties change.
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.SelectedObjectsChangedEventArgs"/>
            <seealso cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/>
        </member>
        <member name="T:Infragistics.AutomationPeers.PropertyGridItemViewAutomationPeerProxy">
            <summary>
            Exposes <see cref="T:Infragistics.Controls.Editors.Primitives.PropertyGridCategoryItemView"/> <see cref="T:Infragistics.Controls.Editors.Primitives.PropertyGridPropertyItemView"/> types to UI Automation.
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.PropertyGridItemViewAutomationPeerProxy.GetAutomationControlTypeCore">
            <summary>
            Returns an enumeration indicating the type of control represented by the automation peer.
            </summary>
            <returns>The <b>Custom</b> enumeration value</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.PropertyGridItemViewAutomationPeerProxy.GetChildrenCore">
            <summary>
            Returns the collection of child elements of the <see cref="T:System.Windows.UIElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />.
            </summary>
            <returns>
            A list of child <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> elements.
            </returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.PropertyGridItemViewAutomationPeerProxy.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:Infragistics.Controls.Editors.PropertyGridItem"/>
            </summary>
            <returns>A string that contains 'PropertyGridItem'</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.PropertyGridItemViewAutomationPeerProxy.GetNameCore">
            <summary>
            Returns the text label of the element that is associated with this peer.
            </summary>
            <returns>The automation name of the element or the name of the associated calendar.</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.PropertyGridItemViewAutomationPeerProxy.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern for the element that is associated with this peer.
            </summary>
            <param name="patternInterface">The pattern being requested</param>
            <returns>The pattern provider or null</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.PropertyGridItemViewAutomationPeerProxy.GetUnderlyingPeer">
            <summary>
            Returns the underlying AutomationPeer for this proxy.
            </summary>
            <returns>The underlying AutomationPeer for this proxy.</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.PropertyGridItemViewAutomationPeerProxy.IsContentElementCore">
            <summary>
            Returns a value that indicates whether the element that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> is an element that contains data that is presented to the user. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement" />.
            </summary>
            <returns>
            true if the element contains data for the user to read; otherwise, false.
            </returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.PropertyGridItemViewAutomationPeerProxy.IsControlElementCore">
            <summary>
            Returns a value that indicates whether the object that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> is understood by the end user as interactive. Optionally, the user might understand the object as contributing to the logical structure of the control in the GUI. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement" />.
            </summary>
            <returns>
            true if the object is interactive; otherwise, false.
            </returns>
        </member>
        <member name="T:Infragistics.AutomationPeers.XamPropertyGridAutomationPeer">
            <summary>
            Exposes <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/> types to UI Automation.
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamPropertyGridAutomationPeer.#ctor(Infragistics.Controls.Editors.XamPropertyGrid)">
            <summary>
            Initializes a new <see cref="T:Infragistics.AutomationPeers.XamPropertyGridAutomationPeer"/>
            </summary>
            <param name="owner">The <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/> that the peer represents</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamPropertyGridAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns an enumeration indicating the type of control represented by the automation peer.
            </summary>
            <returns>The <b>Custom</b> enumeration value</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamPropertyGridAutomationPeer.GetChildrenCore">
            <summary>
            Returns the collection of child elements of the <see cref="T:System.Windows.UIElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />.
            </summary>
            <returns>
            A list of child <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> elements.
            </returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamPropertyGridAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:Infragistics.Controls.Editors.XamPropertyGrid"/>
            </summary>
            <returns>A string that contains 'XamPropertyGrid'</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamPropertyGridAutomationPeer.GetNameCore">
            <summary>
            Returns the text label of the element that is associated with this peer.
            </summary>
            <returns>The automation name of the element or the name of the associated calendar.</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamPropertyGridAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>.
            </summary>
            <param name="patternInterface">One of the enumeration values.</param>
            <returns>See Remarks.</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamPropertyGridAutomationPeer.IsContentElementCore">
            <summary>
            Returns a value that indicates whether the element that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> is an element that contains data that is presented to the user. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement" />.
            </summary>
            <returns>
            true if the element contains data for the user to read; otherwise, false.
            </returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamPropertyGridAutomationPeer.IsControlElementCore">
            <summary>
            Returns a value that indicates whether the object that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> is understood by the end user as interactive. Optionally, the user might understand the object as contributing to the logical structure of the control in the GUI. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement" />.
            </summary>
            <returns>
            true if the object is interactive; otherwise, false.
            </returns>
        </member>
    </members>
</doc>
