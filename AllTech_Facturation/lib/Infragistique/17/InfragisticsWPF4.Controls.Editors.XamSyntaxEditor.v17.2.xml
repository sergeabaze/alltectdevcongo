<?xml version="1.0"?>
<doc>
    <assembly>
        <name>InfragisticsWPF4.Controls.Editors.XamSyntaxEditor.v17.2</name>
    </assembly>
    <members>
        <member name="E:Infragistics.Windows.Ime.ImeEditorHelperState.PropertyChanged">
            <summary>
            Event raised when a property on the object changes.
            </summary>
        </member>
        <member name="T:Infragistics.AutomationPeers.XamSyntaxEditorAutomationPeer">
            <summary>
            Exposes <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/> types to UI Automation
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamSyntaxEditorAutomationPeer.#ctor(Infragistics.Controls.Editors.XamSyntaxEditor)">
            <summary>
            Initializes a new <see cref="T:Infragistics.AutomationPeers.XamSyntaxEditorAutomationPeer"/>
            </summary>
            <param name="owner">The <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/> that the peer represents</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamSyntaxEditorAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns an enumeration indicating the type of control represented by the automation peer.
            </summary>
            <returns>The <b>Custom</b> enumeration value</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamSyntaxEditorAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/>
            </summary>
            <returns>A string that contains 'XamSyntaxEditor'</returns>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.SyntaxEditorCommand">
            <summary>
            Class for all commands associated with the <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.SyntaxEditorCommand.#ctor(Infragistics.Controls.Editors.SyntaxEditorCommandType)">
            <summary>
            Constructor
            </summary>
            <param name="commandType"></param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.SyntaxEditorCommand.CanExecute(System.Object)">
            <summary>
            Reports if the command can be executed on the object inputted.
            </summary>
            <param name="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.SyntaxEditorCommand.Execute(System.Object)">
            <summary>
            Executes the command 
            </summary>
            <param name="parameter">The <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/> object that will be executed against.</param>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.SyntaxEditorCommandSource">
            <summary>
            The command source object for <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/> object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.SyntaxEditorCommandSource.CommandType">
            <summary>
            Gets or sets the SyntaxEditorCommand which is to be executed by the command.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.SyntaxEditorCommandSource.ResolveCommand">
            <summary>
            Generates the <see cref="T:System.Windows.Input.ICommand"/> object that will execute the command.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.SyntaxEditorDataObject">
            <summary>
            A class for providing format independent mechanism for transferring data. 
            </summary>
            <remarks>
            The <b>SyntaxEditorDataObject</b> provides IDataObject-like functionality for both Silverlight and WPF.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.SyntaxEditorDataObject.GetData(Infragistics.Controls.Editors.SyntaxEditorDataFormats)">
            <summary>
            Returns the data in the specified format (expressed as a <see cref="T:Infragistics.Controls.Editors.SyntaxEditorDataFormats"/> enumeration) if it exists, otherwise returns null.
            </summary>
            <param name="format">A <see cref="T:Infragistics.Controls.Editors.SyntaxEditorDataFormats"/> enumeration that describes the type of data to retrieve.</param>
            <returns>Data in the specified format if it exists, otherwise returns null.</returns>
            <seealso cref="T:Infragistics.Controls.Editors.SyntaxEditorDataFormats"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.SyntaxEditorDataObject.GetData(System.String)">
            <summary>
            Returns the data in the specified format (expressed as a string) if it exists, otherwise returns null.
            </summary>
            <param name="formatAsString">A string that describes the type of data to retrieve.</param>
            <returns>Data in the specified format if it exists, otherwise returns null.</returns>
            <seealso cref="T:Infragistics.Controls.Editors.SyntaxEditorDataFormats"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.SyntaxEditorDataObject.GetDataPresent(Infragistics.Controls.Editors.SyntaxEditorDataFormats)">
            <summary>
            Returns whether data is present in the specified format (expressed as a <see cref="T:Infragistics.Controls.Editors.SyntaxEditorDataFormats"/> enumeration).
            </summary>
            <param name="format">A <see cref="T:Infragistics.Controls.Editors.SyntaxEditorDataFormats"/> enumeration that describes the type of data to check for.</param>
            <returns>True if data exists in the specified format, otherwise false.</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.SyntaxEditorDataObject.GetDataPresent(System.String)">
            <summary>
            Returns whether data is present in the specified format (expressed as a string).
            </summary>
            <param name="formatAsString">A string that describes the type of data to check for.</param>
            <returns>True if data exists in the specified format, otherwise false.</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.SyntaxEditorDataObject.SetData(Infragistics.Controls.Editors.SyntaxEditorDataFormats,System.Object)">
            <summary>
            Adds the specified data to the <see cref="T:Infragistics.Controls.Editors.Primitives.SyntaxEditorDataObject"/> using the specified format (expressed as a <see cref="T:Infragistics.Controls.Editors.SyntaxEditorDataFormats"/> enumeration).
            </summary>
            <param name="format">A <see cref="T:Infragistics.Controls.Editors.SyntaxEditorDataFormats"/> enumeration that describes the type of data to add.</param>
            <param name="data">The data to add.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.SyntaxEditorDataObject.SetData(System.String,System.Object)">
            <summary>
            Adds the specified data to the <see cref="T:Infragistics.Controls.Editors.Primitives.SyntaxEditorDataObject"/> using the specified format (expressed as a string).
            </summary>
            <param name="formatAsString">A string that describes the type of data to add.</param>
            <param name="data">The data to add.</param>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.AdornmentLayer">
            <summary>
            A panel that manages and arranges adornments at a specific level in the adornment layer stack within the <see cref="T:Infragistics.Controls.Editors.Primitives.EditorDocumentViewTextArea"/>.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.Primitives.AdornmentLayer.AdornmentLayerInfo"/>
            <seealso cref="T:Infragistics.Controls.Editors.Primitives.EditorDocumentViewTextArea"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.AdornmentLayer.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges child elements.
            </summary>
            <param name="finalSize">The final size used for arranging elements.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.AdornmentLayer.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures child elements
            </summary>
            <param name="availableSize">The size available for child elements.</param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.AdornmentLayer.DocumentView">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Editors.DocumentViewBase"/> that this <see cref="T:Infragistics.Controls.Editors.Primitives.AdornmentLayer"/> belongs to. (read only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.AdornmentLayer.Key">
            <summary>
            The string Key assigned to the <see cref="T:Infragistics.Controls.Editors.Primitives.AdornmentLayer"/>.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.Primitives.AdornmentLayer.AdornmentLayerInfo"/>
            <seealso cref="T:Infragistics.ISupportPositioning"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.AdornmentLayer.AddAdornment(System.Windows.UIElement,System.Windows.Point,System.Object)">
            <summary>
            Adds an adornment to the <see cref="T:Infragistics.Controls.Editors.Primitives.AdornmentLayer"/>
            </summary>
            <param name="adornmentElement">The element that represents the adornment.</param>
            <param name="adornmentLocation">The location (in text area coordinates) within the <see cref="T:Infragistics.Controls.Editors.Primitives.AdornmentLayer"/> at which to position the adornment.</param>
            <param name="userData">An arbitrary piece of data to store with the adornment.</param>
            <returns>An <see cref="T:Infragistics.Controls.Editors.AdornmentInfo"/> instance representing the aodrnment.</returns>
            <seealso cref="T:Infragistics.Controls.Editors.AdornmentInfo"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.AdornmentLayer.RemoveAdornment(Infragistics.Controls.Editors.AdornmentInfo)">
            <summary>
            Removes an adornment from the <see cref="T:Infragistics.Controls.Editors.Primitives.AdornmentLayer"/>
            </summary>
            <param name="adornmentInfo">The <see cref="T:Infragistics.Controls.Editors.AdornmentInfo"/> associated with the adornment to remove.</param>
            <returns>True if the adornment represented by the specified <see cref="T:Infragistics.Controls.Editors.AdornmentInfo"/> was found and removed, otherwise false.</returns>
            <seealso cref="T:Infragistics.Controls.Editors.AdornmentInfo"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.TextAdornmentLayer.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges child elements.
            </summary>
            <param name="finalSize">The final size used for arranging elements.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.TextAdornmentLayer.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures child elements
            </summary>
            <param name="availableSize">The size available for child elements.</param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.SyntaxEditorCaretPresenter">
            <summary>
            An element that represents the editing caret.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.Primitives.SyntaxEditorCaretPresenter.Caret"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.Caret"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.SyntaxEditorCaretPresenter.OnApplyTemplate">
            <summary>
            Called when a new template is applied. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.SyntaxEditorCaretPresenter.Caret">
            <summary>
            Returns the caret associated with this caret presenter. (read-only)
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.Primitives.SyntaxEditorCaretPresenter.Caret"/>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.EditorDocumentViewMarginPanel">
            <summary>
            A panel used to arrange <see cref="T:Infragistics.Controls.Editors.MarginBase"/> instances.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.EditorDocumentViewMarginPanel.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.EditorDocumentViewMarginPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges child elements.
            </summary>
            <param name="finalSize">The final size used for arranging elements.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.EditorDocumentViewMarginPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures child elements
            </summary>
            <param name="availableSize">The size available for child elements.</param>
            <returns></returns>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.EditorDocumentViewMarginPanel.LocationProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.EditorDocumentViewMarginPanel.Location"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.EditorDocumentViewMarginPanel.Location">
            <summary>
            Returns/sets the Location of the <see cref="T:Infragistics.Controls.Editors.Primitives.EditorDocumentViewMarginPanel"/>.  The default is Left.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.EditorDocumentViewMarginPanel.LocationProperty"/>
            <seealso cref="T:Infragistics.Controls.Editors.EditorDocumentViewMarginLocation"/>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.EditorDocumentViewMiniSplitter">
            <summary>
            A splitter used inside the <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/> to control the size of the <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>s contained within it.
            </summary>
            <remarks>
            <para class="body">
            The <see cref="P:Infragistics.Controls.Editors.Primitives.EditorDocumentViewMiniSplitter.Orientation"/> property determines whether the splitter iscontrolling horizontal or vertical splits.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Editors.Primitives.EditorDocumentViewMiniSplitter.Orientation"/>
            <seealso cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.IsSplitVertically"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.IsSplitHorizontally"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.ActiveDocumentView"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.EditorDocumentViewMiniSplitter.#ctor">
            <summary>
            Creates an instance of an EditorDocumentViewMiniSplitter.  For internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.EditorDocumentViewMiniSplitter.OnApplyTemplate">
            <summary>
            Called when a new template is applied. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.EditorDocumentViewMiniSplitter.OrientationProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.EditorDocumentViewMiniSplitter.Orientation"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.EditorDocumentViewMiniSplitter.Orientation">
            <summary>
            Returns/sets an Orientation value that represents the kind of split that will be created with the <see cref="T:Infragistics.Controls.Editors.Primitives.EditorDocumentViewMiniSplitter"/>.  The default is Vertical.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.EditorDocumentViewMiniSplitter.OrientationProperty"/>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.EditorDocumentViewSplitter">
            <summary>
            A splitter used inside the <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/> to control the size of the <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>s contained within it.
            </summary>
            <remarks>
            <para class="body">
            The <see cref="P:Infragistics.Controls.Editors.Primitives.EditorDocumentViewSplitter.Orientation"/> property determines whether the splitter iscontrolling horizontal or vertical splits.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Editors.Primitives.EditorDocumentViewSplitter.Orientation"/>
            <seealso cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.IsSplitVertically"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.IsSplitHorizontally"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.ActiveDocumentView"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.EditorDocumentViewSplitter.OnApplyTemplate">
            <summary>
            Called when a new template is applied. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.EditorDocumentViewSplitter.OrientationProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.EditorDocumentViewSplitter.Orientation"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.EditorDocumentViewSplitter.Orientation">
            <summary>
            Returns/sets an Orientation value that represents the kind of split that will be created with the <see cref="T:Infragistics.Controls.Editors.Primitives.EditorDocumentViewSplitter"/>.  The default is Vertical.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.EditorDocumentViewSplitter.OrientationProperty"/>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.EditorDocumentViewScrollBarArea">
            <summary>
            An element that represents the scrollbar area in a <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>.
            </summary>
            <remarks>
            <para class="body">The element contains a scrollbar and a mini-splitter.</para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.EditorDocumentViewScrollBarArea.#ctor">
            <summary>
            Creates an instance of an EditorDocumentViewScrollBarArea.  For internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.EditorDocumentViewScrollBarArea.OnApplyTemplate">
            <summary>
            Called when a new template is applied. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.EditorDocumentViewScrollBarArea.OrientationProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.Primitives.EditorDocumentViewScrollBarArea.Orientation"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.EditorDocumentViewScrollBarArea.Orientation">
            <summary>
            Returns/sets the orientation of the <see cref="T:Infragistics.Controls.Editors.Primitives.EditorDocumentViewScrollBarArea"/>.  The default is Vertical.
            </summary>
            <remarks>
            <para class="body">The <see cref="T:Infragistics.Controls.Editors.Primitives.EditorDocumentViewScrollBarArea"/> contains a scrollbar and a mini-splitter.</para>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.Primitives.EditorDocumentViewScrollBarArea.OrientationProperty"/>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.EditorDocumentViewTextArea">
            <summary>
            An element that arranges <see cref="T:Infragistics.Controls.Editors.Primitives.AdornmentLayer"/>s based on the positioning information exposed by the associated <see cref="T:Infragistics.Controls.Editors.AdornmentLayerInfo"/> via its implementation of <see cref="T:Infragistics.ISupportPositioning"/>.
            </summary>
            <para class="note">
            <b>Note:</b> <see cref="T:Infragistics.Controls.Editors.Primitives.AdornmentLayer"/>s that are positioned 'before' other layers (as determined by the <see cref="T:Infragistics.Controls.Editors.Primitives.AdornmentLayer"/>'s implementation of the <see cref="T:Infragistics.ISupportPositioning"/> interface) are arranged closer to the bottom of the adornment layer stack within the <see cref="T:Infragistics.Controls.Editors.Primitives.EditorDocumentViewTextArea"/>. 
            </para>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.EditorDocumentViewTextArea.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges child elements.
            </summary>
            <param name="finalSize">The final size used for arranging elements.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.EditorDocumentViewTextArea.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures child elements
            </summary>
            <param name="availableSize">The size available for child elements.</param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.EditorViewLayoutPanel">
            <summary>
            A control that arranges <see cref="T:Infragistics.Controls.Editors.Primitives.EditorDocumentViewPresenter"/>s inside a <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.EditorViewLayoutPanel.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.EditorViewLayoutPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges child elements.
            </summary>
            <param name="finalSize">The final size used for arranging elements.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.EditorViewLayoutPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures child elements
            </summary>
            <param name="availableSize">The size available for child elements.</param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.EditorDocumentViewPresenter">
            <summary>
            An element that represents an <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/> in the UI.
            </summary>
            <para class="body">
            A <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/> can display 1 or 2 editing areas which are independently scrollable views
            into the document being edited. Each editing area is backed by an <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/> which is 
            represented in the UI by a <see cref="T:Infragistics.Controls.Editors.Primitives.EditorDocumentViewPresenter"/>.  
            </para>
            <seealso cref="T:Infragistics.Controls.Editors.EditorDocumentViewLocation"/>
            <seealso cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.ActiveDocumentView"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitStatus"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitOptions"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.ZoomLevel"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.EditorDocumentViewPresenter.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges child elements.
            </summary>
            <param name="finalSize">The final size used for arranging elements.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.EditorDocumentViewPresenter.OnApplyTemplate">
            <summary>
            Called when a new template is applied. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.EditorDocumentViewPresenter.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Called when the element receives the focus.
            </summary>
            <param name="e">Information about the event</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.EditorDocumentViewPresenter.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Called when a key is pressed
            </summary>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.EditorDocumentViewPresenter.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Called when the element loses focus.
            </summary>
            <param name="e">Information about the event</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.EditorDocumentViewPresenter.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when the mouse engters the element.
            </summary>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.EditorDocumentViewPresenter.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when the mouse leaves the element.
            </summary>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.EditorDocumentViewPresenter.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when the left mouse button is pressed.
            </summary>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.EditorDocumentViewPresenter.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when the left mouse button is released.
            </summary>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.EditorDocumentViewPresenter.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when the mouse is moved
            </summary>
            <param name="e">Information about the event</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.EditorDocumentViewPresenter.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            Invoked when the mouse wheel has been scrolled
            </summary>
            <param name="e">Provides information about the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.EditorDocumentViewPresenter.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
            <summary>
            Called before the System.Windows.UIElement.TextInput event occurs.
            </summary>
            <param name="e">A System.Windows.Input.TextCompositionEventArgs that contains the event data.</param>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.MarginPresenterBase">
            <summary>
            Abstract base class for all built-in Margin presenters.  (For internal use only)
            </summary>
            <remarks>
            <para class="body">
            This is the base class used by the presenters for the built-in <see cref="T:Infragistics.Controls.Editors.LineNumberMargin"/>.
            </para>
            <para class="body">
            The built-in Margins are automatically created by the <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/> and together with any <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.CustomMargins"/> you have specified
            are arranged and displayed in one of the four Margin areas based on their <see cref="P:Infragistics.Controls.Editors.MarginBase.Location"/> property.
            </para>
            <para class="note">
            <b>Note:</b> To control the visibility of the built-in Line Number Margin, use the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.IsLineNumberMarginVisible"/> property.
            </para>
            </remarks>
            <seealso cref="T:Infragistics.Controls.Editors.LineNumberMargin"/>
            <seealso cref="T:Infragistics.Controls.Editors.Primitives.LineNumberMarginPresenter"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.CustomMargins"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.IsLineNumberMarginVisible"/>
            <seealso cref="T:Infragistics.Controls.Editors.MarginKeys"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.MarginPresenterBase.DocumentView">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Editors.DocumentViewBase"/> that this margin is associated with.
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.DocumentViewBase"/>
            <seealso cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.MarginPresenterBase.OnUnloaded">
            <summary>
            Called when the <see cref="T:Infragistics.Controls.Editors.Primitives.MarginPresenterBase"/> is unloaded.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.LineNumberMarginPresenter">
            <summary>
            An element that displays line numbers at the left edge of each line in the <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>.
            </summary>
            <remarks>
            <para class="body">
            The built-in Margins are automatically created by the <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/> and together with any <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.CustomMargins"/> you have specified
            are arranged and displayed in one of the four Margin areas based on their <see cref="P:Infragistics.Controls.Editors.MarginBase.Location"/> property.
            </para>
            <para class="note">
            <b>Note:</b> To control the visibility of the built in Line Number Margin, use the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.IsLineNumberMarginVisible"/> property.
            </para>
            </remarks>
            <seealso cref="T:Infragistics.Controls.Editors.LineNumberMargin"/>
            <seealso cref="T:Infragistics.Controls.Editors.RulerMargin"/>
            <seealso cref="T:Infragistics.Controls.Editors.Primitives.RulerMarginPresenter"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.CustomMargins"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.IsLineNumberMarginVisible"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.IsRulerMarginVisible"/>
            <seealso cref="T:Infragistics.ISupportPositioning"/>
            <seealso cref="T:Infragistics.Controls.Editors.MarginKeys"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.LineNumberMarginPresenter.OnApplyTemplate">
            <summary>
            Called when a new template is applied. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.LineNumberMarginPresenter.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when the left mouse button is pressed.
            </summary>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.LineNumberMarginPresenter.OnUnloaded">
            <summary>
            Called when the <see cref="T:Infragistics.Controls.Editors.Primitives.MarginPresenterBase"/> is unloaded.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.RulerMarginPresenter">
            <summary>
            An element that displays a character position ruler at the top of the <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>.
            </summary>
            <remarks>
            <para class="body">
            The built-in Margins are automatically created by the <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/> and together with any <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.CustomMargins"/> you have specified
            are arranged and displayed in one of the four Margin areas based on their <see cref="P:Infragistics.Controls.Editors.MarginBase.Location"/> property.
            </para>
            <para class="note">
            <b>Note:</b> To control the visibility of the built in Ruler Margin, use the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.IsRulerMarginVisible"/> property.
            </para>
            </remarks>
            <seealso cref="T:Infragistics.Controls.Editors.LineNumberMargin"/>
            <seealso cref="T:Infragistics.Controls.Editors.RulerMargin"/>
            <seealso cref="T:Infragistics.Controls.Editors.Primitives.RulerMarginPresenter"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.CustomMargins"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.IsLineNumberMarginVisible"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.IsRulerMarginVisible"/>
            <seealso cref="T:Infragistics.ISupportPositioning"/>
            <seealso cref="T:Infragistics.Controls.Editors.MarginKeys"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.RulerMarginPresenter.OnApplyTemplate">
            <summary>
            Called when a new template is applied. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.RulerMarginPresenter.OnUnloaded">
            <summary>
            Called when the <see cref="T:Infragistics.Controls.Editors.Primitives.MarginPresenterBase"/> is unloaded.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.AdornmentInfo">
            <summary>
            A class that holds data related to an adornment.  Adornments are added to an <see cref="T:Infragistics.Controls.Editors.Primitives.AdornmentLayer"/> by <see cref="T:Infragistics.Controls.Editors.SyntaxEditorAdornmentGeneratorBase"/> implementations.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.AdornmentInfo.Element">
            <summary>
            Returns the element associated with the adornment. (read only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.AdornmentInfo.PixelLocation">
            <summary>
            Returns the Point (in text area coordinates) that represents the pixel location of the associated adornment <see cref="P:Infragistics.Controls.Editors.AdornmentInfo.Element"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.AdornmentInfo.UserData">
            <summary>
            Returns/sets an object containing arbitrary data to associate with the adornment.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Editors.AdornmentInfo.PropertyChanged">
            <summary>
            Raised when a property value changes.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.AdornmentLayerInfo">
            <summary>
            Provides the data necessary to create an <see cref="T:Infragistics.Controls.Editors.Primitives.AdornmentLayer"/>.
            </summary>
            <para class="note">
            <b>Note:</b> <see cref="T:Infragistics.Controls.Editors.Primitives.AdornmentLayer"/>s that are positioned 'before' other layers (as determined by the <see cref="T:Infragistics.Controls.Editors.Primitives.AdornmentLayer"/>'s implementation of the <see cref="T:Infragistics.ISupportPositioning"/> interface) are arranged closer to the bottom of the adornment layer stack within the <see cref="T:Infragistics.Controls.Editors.Primitives.EditorDocumentViewTextArea"/>. 
            </para>
            <seealso cref="T:Infragistics.Controls.Editors.Primitives.AdornmentLayer"/>
            <seealso cref="T:Infragistics.Controls.Editors.AdornmentLayerKeys"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.AdornmentLayerInfo.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Constructor
            </summary>
            <param name="key">The string identifier assigned to <see cref="T:Infragistics.Controls.Editors.Primitives.AdornmentLayer"/>s created from this <see cref="T:Infragistics.Controls.Editors.AdornmentLayerInfo"/>.</param>
            <param name="beforeKeys">An array of string keys that represent the <see cref="T:Infragistics.Controls.Editors.Primitives.AdornmentLayer"/>s before which the current <see cref="T:Infragistics.Controls.Editors.Primitives.AdornmentLayer"/> should be sorted.</param>
            <param name="afterKeys">An array of string keys that represent the <see cref="T:Infragistics.Controls.Editors.Primitives.AdornmentLayer"/>s after which the current <see cref="T:Infragistics.Controls.Editors.Primitives.AdornmentLayer"/> should be sorted.</param>
            <seealso cref="T:Infragistics.Controls.Editors.AdornmentLayerKeys"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.AdornmentLayerInfo.TextBackground">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Editors.AdornmentLayerInfo"/> used to create the 'TextBackground' <see cref="T:Infragistics.Controls.Editors.Primitives.AdornmentLayer"/>. (static, read only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.AdornmentLayerInfo.Selection">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Editors.AdornmentLayerInfo"/> used to create the 'Selection' <see cref="T:Infragistics.Controls.Editors.Primitives.AdornmentLayer"/>. (static, read only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.AdornmentLayerInfo.SyntaxError">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Editors.AdornmentLayerInfo"/> used to create the 'SyntaxError' <see cref="T:Infragistics.Controls.Editors.Primitives.AdornmentLayer"/>. (static, read only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.AdornmentLayerInfo.TextForeground">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Editors.AdornmentLayerInfo"/> used to create the 'TextForeground' <see cref="T:Infragistics.Controls.Editors.Primitives.AdornmentLayer"/>. (static, read only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.AdornmentLayerInfo.Caret">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Editors.AdornmentLayerInfo"/> used to create the 'Caret' <see cref="T:Infragistics.Controls.Editors.Primitives.AdornmentLayer"/>. (static, read only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.AdornmentLayerInfo.After">
            <summary>
            An array of string keys that represent the items after which the current item should be sorted.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.AdornmentLayerInfo.Before">
            <summary>
            An array of string keys that represent the items before which the current item should be sorted.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.AdornmentLayerInfo.Key">
            <summary>
            The string key of the current item.  This key will be referenced in the <see cref="P:Infragistics.Controls.Editors.AdornmentLayerInfo.Before"/> and <see cref="P:Infragistics.Controls.Editors.AdornmentLayerInfo.After"/> lists of other items.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.SyntaxEditorAdornmentGeneratorBase">
            <summary>
            An abstract base class for all adornment providers.
            </summary>
            <remarks>
            <para class="body">
            Adornment generators supply adorners for a particular <see cref="P:Infragistics.Controls.Editors.SyntaxEditorAdornmentGeneratorBase.AdornmentLayer"/> in a <see cref="T:Infragistics.Controls.Editors.DocumentViewBase"/>.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Editors.SyntaxEditorAdornmentGeneratorBase.AdornmentLayer"/>
            <seealso cref="T:Infragistics.Controls.Editors.AdornmentLayerInfo"/>
            <seealso cref="T:Infragistics.Controls.Editors.AdornmentGeneratorProvider"/>
            <seealso cref="T:Infragistics.Controls.Editors.DocumentViewBase"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.SyntaxEditorAdornmentGeneratorBase.#ctor(Infragistics.Controls.Editors.DocumentViewBase,Infragistics.Controls.Editors.AdornmentLayerInfo)">
            <summary>
            Constructor
            </summary>
            <param name="documentView">The <see cref="T:Infragistics.Controls.Editors.DocumentViewBase"/> associated with this <see cref="T:Infragistics.Controls.Editors.SyntaxEditorAdornmentGeneratorBase"/></param>
            <param name="layerInfo">The <see cref="T:Infragistics.Controls.Editors.AdornmentLayerInfo"/> that identifies the <see cref="P:Infragistics.Controls.Editors.SyntaxEditorAdornmentGeneratorBase.AdornmentLayer"/> that will be hosting the adornments created by this <see cref="T:Infragistics.Controls.Editors.SyntaxEditorAdornmentGeneratorBase"/></param>
        </member>
        <member name="P:Infragistics.Controls.Editors.SyntaxEditorAdornmentGeneratorBase.AdornmentLayer">
            <summary>
            Returns the <see cref="P:Infragistics.Controls.Editors.SyntaxEditorAdornmentGeneratorBase.AdornmentLayer"/> that this <see cref="T:Infragistics.Controls.Editors.SyntaxEditorAdornmentGeneratorBase"/> is supplying adornments for (read only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.SyntaxEditorAdornmentGeneratorBase.DocumentView">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Editors.DocumentViewBase"/> that is associated with this <see cref="T:Infragistics.Controls.Editors.SyntaxEditorAdornmentGeneratorBase"/> (read only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.SyntaxEditorAdornmentGeneratorBase.SyntaxEditor">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/> that this <see cref="T:Infragistics.Controls.Editors.SyntaxEditorAdornmentGeneratorBase"/> is hosted by (read only)
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.SyntaxEditorAdornmentGeneratorBase.OnRefreshAdornments">
            <summary>
            Called when settings in the <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/> (that could affect the display of adornments) have changed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.SyntaxEditorAdornmentGeneratorBase.OnTextAreaInitialized">
            <summary>
            Called when the <see cref="T:Infragistics.Controls.Editors.Primitives.EditorDocumentViewTextArea"/> has been initialized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.SyntaxEditorAdornmentGeneratorBase.OnUnloaded">
            <summary>
            Called when the generator is unloaded.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.AdornmentGeneratorProvider">
            <summary>
            A factory class that creates instances of an <see cref="T:Infragistics.Controls.Editors.SyntaxEditorAdornmentGeneratorBase"/> derived type. 
            </summary>
            <remarks>
            <para class="body">
            The <see cref="T:Infragistics.Controls.Editors.SyntaxEditorAdornmentGeneratorBase"/> derived type to be created is passed in the constructor.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.AdornmentGeneratorProvider.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.AdornmentGeneratorProvider.CreateAdornmentGenerator(Infragistics.Controls.Editors.DocumentViewBase)">
            <summary>
            Returns an <see cref="T:Infragistics.Controls.Editors.SyntaxEditorAdornmentGeneratorBase"/> for the specified <see cref="T:Infragistics.Controls.Editors.DocumentViewBase"/> 
            </summary>
            <param name="documentView">The <see cref="T:Infragistics.Controls.Editors.DocumentViewBase"/> for which to create the <see cref="T:Infragistics.Controls.Editors.SyntaxEditorAdornmentGeneratorBase"/></param>
            <returns>An <see cref="T:Infragistics.Controls.Editors.SyntaxEditorAdornmentGeneratorBase"/> instance.</returns>
        </member>
        <member name="T:Infragistics.Controls.Editors.AdornmentLayerKeys">
            <summary>
            A class that exposes the positioning keys used by the built-in <see cref="T:Infragistics.Controls.Editors.Primitives.AdornmentLayer"/>s.  
            </summary>
            <para class="note">
            <b>Note:</b> <see cref="T:Infragistics.Controls.Editors.Primitives.AdornmentLayer"/>s that are positioned 'before' other layers (as determined by the <see cref="T:Infragistics.Controls.Editors.Primitives.AdornmentLayer"/>'s implementation of the <see cref="T:Infragistics.ISupportPositioning"/> interface) are arranged closer to the bottom of the adornment layer stack within the <see cref="T:Infragistics.Controls.Editors.Primitives.EditorDocumentViewTextArea"/>. 
            </para>
            <seealso cref="T:Infragistics.ISupportPositioning"/>
            <seealso cref="T:Infragistics.Controls.Editors.AdornmentLayerInfo"/>
            <seealso cref="T:Infragistics.Controls.Editors.Primitives.AdornmentLayer"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.AdornmentLayerKeys.TextBackgroundLayer">
            <summary>
            A constant used by the text background layer to specify its <see cref="P:Infragistics.ISupportPositioning.Key"/>.
            </summary>
            <para class="body">
            When creating a custom <see cref="T:Infragistics.Controls.Editors.AdornmentLayerInfo"/> choose a a set of 'before' and 'after' keys (see <see cref="T:Infragistics.ISupportPositioning"/>) that places it in the desired location relative to the built-in <see cref="T:Infragistics.Controls.Editors.AdornmentLayerInfo"/>s. 
            </para>
            <para class="note">
            <b>Note:</b> <see cref="T:Infragistics.Controls.Editors.Primitives.AdornmentLayer"/>s that are positioned 'before' other layers (as determined by the <see cref="T:Infragistics.Controls.Editors.Primitives.AdornmentLayer"/>'s implementation of the <see cref="T:Infragistics.ISupportPositioning"/> interface) are arranged closer to the bottom of the adornment layer stack within the <see cref="T:Infragistics.Controls.Editors.Primitives.EditorDocumentViewTextArea"/>. 
            </para>
            <seealso cref="T:Infragistics.ISupportPositioning"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.AdornmentLayerKeys.SelectionLayer">
            <summary>
            A constant used by the selection layer to specify its <see cref="P:Infragistics.ISupportPositioning.Key"/>.
            </summary>
            <para class="body">
            When creating a custom <see cref="T:Infragistics.Controls.Editors.AdornmentLayerInfo"/> choose a a set of 'before' and 'after' keys (see <see cref="T:Infragistics.ISupportPositioning"/>) that places it in the desired location relative to the built-in <see cref="T:Infragistics.Controls.Editors.AdornmentLayerInfo"/>s. 
            </para>
            <para class="note">
            <b>Note:</b> <see cref="T:Infragistics.Controls.Editors.Primitives.AdornmentLayer"/>s that are positioned 'before' other layers (as determined by the <see cref="T:Infragistics.Controls.Editors.Primitives.AdornmentLayer"/>'s implementation of the <see cref="T:Infragistics.ISupportPositioning"/> interface) are arranged closer to the bottom of the adornment layer stack within the <see cref="T:Infragistics.Controls.Editors.Primitives.EditorDocumentViewTextArea"/>. 
            </para>
            <seealso cref="T:Infragistics.ISupportPositioning"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.AdornmentLayerKeys.SyntaxErrorLayer">
            <summary>
            A constant used by the syntax error layer to specify its <see cref="P:Infragistics.ISupportPositioning.Key"/>.
            </summary>
            <para class="body">
            When creating a custom <see cref="T:Infragistics.Controls.Editors.AdornmentLayerInfo"/> choose a a set of 'before' and 'after' keys (see <see cref="T:Infragistics.ISupportPositioning"/>) that places it in the desired location relative to the built-in <see cref="T:Infragistics.Controls.Editors.AdornmentLayerInfo"/>s. 
            </para>
            <para class="note">
            <b>Note:</b> <see cref="T:Infragistics.Controls.Editors.Primitives.AdornmentLayer"/>s that are positioned 'before' other layers (as determined by the <see cref="T:Infragistics.Controls.Editors.Primitives.AdornmentLayer"/>'s implementation of the <see cref="T:Infragistics.ISupportPositioning"/> interface) are arranged closer to the bottom of the adornment layer stack within the <see cref="T:Infragistics.Controls.Editors.Primitives.EditorDocumentViewTextArea"/>. 
            </para>
            <seealso cref="T:Infragistics.ISupportPositioning"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.AdornmentLayerKeys.TextForegroundLayer">
            <summary>
            A constant used by the text foreground layer to specify its <see cref="P:Infragistics.ISupportPositioning.Key"/>.
            </summary>
            <para class="body">
            When creating a custom <see cref="T:Infragistics.Controls.Editors.AdornmentLayerInfo"/> choose a a set of 'before' and 'after' keys (see <see cref="T:Infragistics.ISupportPositioning"/>) that places it in the desired location relative to the built-in <see cref="T:Infragistics.Controls.Editors.AdornmentLayerInfo"/>s. 
            </para>
            <para class="note">
            <b>Note:</b> <see cref="T:Infragistics.Controls.Editors.Primitives.AdornmentLayer"/>s that are positioned 'before' other layers (as determined by the <see cref="T:Infragistics.Controls.Editors.Primitives.AdornmentLayer"/>'s implementation of the <see cref="T:Infragistics.ISupportPositioning"/> interface) are arranged closer to the bottom of the adornment layer stack within the <see cref="T:Infragistics.Controls.Editors.Primitives.EditorDocumentViewTextArea"/>. 
            </para>
            <seealso cref="T:Infragistics.ISupportPositioning"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.AdornmentLayerKeys.CaretLayer">
            <summary>
            A constant used by the caret layer to specify its <see cref="P:Infragistics.ISupportPositioning.Key"/>.
            </summary>
            <para class="body">
            When creating a custom <see cref="T:Infragistics.Controls.Editors.AdornmentLayerInfo"/> choose a a set of 'before' and 'after' keys (see <see cref="T:Infragistics.ISupportPositioning"/>) that places it in the desired location relative to the built-in <see cref="T:Infragistics.Controls.Editors.AdornmentLayerInfo"/>s. 
            </para>
            <para class="note">
            <b>Note:</b> <see cref="T:Infragistics.Controls.Editors.Primitives.AdornmentLayer"/>s that are positioned 'before' other layers (as determined by the <see cref="T:Infragistics.Controls.Editors.Primitives.AdornmentLayer"/>'s implementation of the <see cref="T:Infragistics.ISupportPositioning"/> interface) are arranged closer to the bottom of the adornment layer stack within the <see cref="T:Infragistics.Controls.Editors.Primitives.EditorDocumentViewTextArea"/>. 
            </para>
            <seealso cref="T:Infragistics.ISupportPositioning"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.CaretAdornmentGenerator.OnRefreshAdornments">
            <summary>
            Called when settings in the <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/> (that could affect the display of adornments) have changed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.CaretAdornmentGenerator.OnTextAreaInitialized">
            <summary>
            Called when the <see cref="T:Infragistics.Controls.Editors.Primitives.EditorDocumentViewTextArea"/> has been initialized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.CaretAdornmentGenerator.OnUnloaded">
            <summary>
            Called when the generator is unloaded.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.CurrentLineHighlightAdornmentGenerator.OnRefreshAdornments">
            <summary>
            Called when settings in the <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/> (that could affect the display of adornments) have changed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.CurrentLineHighlightAdornmentGenerator.OnTextAreaInitialized">
            <summary>
            Called when the <see cref="T:Infragistics.Controls.Editors.Primitives.EditorDocumentViewTextArea"/> has been initialized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.CurrentLineHighlightAdornmentGenerator.OnUnloaded">
            <summary>
            Called when the generator is unloaded.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ImeClauseAdornmentGenerator.OnTextAreaInitialized">
            <summary>
            Called when the <see cref="T:Infragistics.Controls.Editors.Primitives.EditorDocumentViewTextArea"/> has been initialized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.SelectionAdornmentGenerator.OnRefreshAdornments">
            <summary>
            Called when settings in the <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/> (that could affect the display of adornments) have changed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.SelectionAdornmentGenerator.OnTextAreaInitialized">
            <summary>
            Called when the <see cref="T:Infragistics.Controls.Editors.Primitives.EditorDocumentViewTextArea"/> has been initialized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.SelectionAdornmentGenerator.OnUnloaded">
            <summary>
            Called when the generator is unloaded.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.SyntaxErrorAdornmentGenerator.OnRefreshAdornments">
            <summary>
            Called when settings in the <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/> (that could affect the display of adornments) have changed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.SyntaxErrorAdornmentGenerator.OnTextAreaInitialized">
            <summary>
            Called when the <see cref="T:Infragistics.Controls.Editors.Primitives.EditorDocumentViewTextArea"/> has been initialized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.SyntaxErrorAdornmentGenerator.OnUnloaded">
            <summary>
            Called when the generator is unloaded.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.WhitespaceAdornmentGenerator.OnTextAreaInitialized">
            <summary>
            Called when the <see cref="T:Infragistics.Controls.Editors.Primitives.EditorDocumentViewTextArea"/> has been initialized.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.AppearanceMap`1">
            <summary>
            An abstract base class that maintains a collection of mappings between keys and <see cref="T:Infragistics.Controls.Editors.TextDocumentAppearance"/>s.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.AppearanceMap`1.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.AppearanceMap`1.Map">
            <summary>
            Returns the map associated with this instance.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.AppearanceMap`1.AddMapEntry(`0,Infragistics.Controls.Editors.TextDocumentAppearance,System.Boolean)">
            <summary>
            Adds an entry to the map.
            </summary>
            <param name="key">The key associated with the entry</param>
            <param name="appearance">The <see cref="T:Infragistics.Controls.Editors.TextDocumentAppearance"/> associated with the entry.</param>
            <param name="replaceIfAlreadyExists">True to replace an existing entry with the same key, otherwise false.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.AppearanceMap`1.GetAppearance(`0)">
            <summary>
            Gets the Appearance for the specified key.
            </summary>
            <param name="key">The key associated with the entry to get.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.AppearanceMap`1.RemoveMapEntry(`0)">
            <summary>
            Removes the entry for the specified key from the map.
            </summary>
            <param name="key">The key associated with the entry to remove.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.AppearanceMap`1.OnMappingsChanged(System.EventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Controls.Editors.AppearanceMap`1.MappingsChanged"/> event.
            </summary>
            <param name="args">The arguments associated with the event.</param>
            <seealso cref="E:Infragistics.Controls.Editors.AppearanceMap`1.MappingsChanged"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.AppearanceMap`1.RemoveAll">
            <summary>
            Removes all entries from the map.
            </summary>
            <seealso cref="E:Infragistics.Controls.Editors.AppearanceMap`1.MappingsChanged"/>
        </member>
        <member name="E:Infragistics.Controls.Editors.AppearanceMap`1.MappingsChanged">
            <summary>
            Raised when mappings are added or removed.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.ClassificationAppearanceMap">
            <summary>
            A class that maintains a collection of mappings between <see cref="T:Infragistics.Documents.ClassificationType"/>s and <see cref="T:Infragistics.Controls.Editors.TextDocumentAppearance"/>s.
            </summary>
            <seealso cref="T:Infragistics.Documents.ClassificationType"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.ClassificationAppearanceMap.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ClassificationAppearanceMap.OnMappingsChanged(System.EventArgs)">
            <summary>
            Used to invoke the MappingsChanged event.
            </summary>
            <param name="args">The arguments associated with the event.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Infragistics.Controls.Editors.ClassificationAppearanceMap.MapInitializationEntries" -->
        <member name="T:Infragistics.Controls.Editors.ClassificationAppearanceMapInitializationEntry">
            <summary>
            A class that represents an entry in a <see cref="T:Infragistics.Controls.Editors.MapInitializationEntries"/> collection.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.ClassificationAppearanceMapInitializationEntry.Appearance">
            <summary>
            The <see cref="T:Infragistics.Controls.Editors.TextDocumentAppearance"/> associated with this <see cref="T:Infragistics.Controls.Editors.ClassificationAppearanceMapInitializationEntry"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.ClassificationAppearanceMapInitializationEntry.Classification">
            <summary>
            The <see cref="P:Infragistics.Controls.Editors.ClassificationAppearanceMapInitializationEntry.Classification"/> associated with this <see cref="T:Infragistics.Controls.Editors.ClassificationAppearanceMapInitializationEntry"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.MapInitializationEntries">
            <summary>
            A modifiable observable collection of <see cref="T:Infragistics.Controls.Editors.ClassificationAppearanceMapInitializationEntry"/>s used to inititalize a <see cref="T:Infragistics.Controls.Editors.ClassificationAppearanceMap"/> in XAML
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.ClassificationAppearanceMap"/>
            <seealso cref="T:Infragistics.Controls.Editors.ClassificationAppearanceMapInitializationEntry"/>
        </member>
        <member name="T:Infragistics.Controls.Editors.TextDocumentAppearance">
            <summary>
            Class that holds values which determine the appearance of various aspects the control and its content. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.TextDocumentAppearance.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.TextDocumentAppearance.Background">
            <summary>
            Returns/sets the brush to be used for the background.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.TextDocumentAppearance.FontBold">
            <summary>
            Returns/sets whether the font is bold.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.TextDocumentAppearance.FontItalic">
            <summary>
            Returns/sets whether the font is italic.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.TextDocumentAppearance.FontFamily">
            <summary>
            Returns/sets the font family.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.TextDocumentAppearance.FontSize">
            <summary>
            Returns/sets the font size.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.TextDocumentAppearance.FontStyle">
            <summary>
            Returns the FontStyle associated with the appearance (read only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.TextDocumentAppearance.FontWeight">
            <summary>
            Returns the FontWeight associated with the appearance (read only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.TextDocumentAppearance.Foreground">
            <summary>
            Returns/sets the brush to be used for the foreground.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.TextDocumentAppearance.TextFormattingMode">
            <summary>
            Returns sets the TextOptions.TextFormattingMode associated with the appearance.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.TextDocumentAppearance.Typeface">
            <summary>
            Returns the Typeface associated with the Appearance based on the current <see cref="P:Infragistics.Controls.Editors.TextDocumentAppearance.FontFamily"/>, <see cref="P:Infragistics.Controls.Editors.TextDocumentAppearance.FontStyle"/> and <see cref="P:Infragistics.Controls.Editors.TextDocumentAppearance.FontWeight"/>. (read only)
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.Caret">
            <summary>
            Represents the insertion point in the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.ActiveDocumentView"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Caret.Brush">
            <summary>
            Returns the brush used to render the caret. (read only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Caret.CharacterColumn">
            <summary>
            Returns the zero-based character position of the current active <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>'s caret on the <see cref="T:Infragistics.Documents.TextDocument"/> line in which it is positioned (read-only)
            </summary>
            <remarks>
            <para class="body">To access the actual column position of the caret in the <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/> display, use the <see cref="P:Infragistics.Controls.Editors.Caret.CharacterDisplayColumn"/> property.</para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Editors.Caret.CharacterColumnNormalized"/>
            <seealso cref="P:Infragistics.Controls.Editors.Caret.CharacterDisplayColumn"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.Caret.CharacterColumnNormalized">
            <summary>
            Returns the one-based character position of the current active <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>'s caret on the <see cref="T:Infragistics.Documents.TextDocument"/> line in which it is positioned (read-only)
            </summary>
            <remarks>
            <para class="body">To access the actual column position of the caret in the <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/> display, use the <see cref="P:Infragistics.Controls.Editors.Caret.CharacterDisplayColumn"/> property.</para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Editors.Caret.CharacterColumn"/>
            <seealso cref="P:Infragistics.Controls.Editors.Caret.CharacterDisplayColumn"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.Caret.CharacterDisplayColumn">
            <summary>
            Returns the one-based column position of the caret in the current active <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/> (read-only)
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.Caret.CharacterColumnNormalized"/>
            <seealso cref="P:Infragistics.Controls.Editors.Caret.CharacterColumn"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.Caret.Height">
            <summary>
            Returns the height of the caret in pixels. (read only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Caret.IsVisible">
            <summary>
            Returns true if the caret is visible. (read-only)
            </summary>
            <para class="note">
            <b>Note:</b> This property will always return false if the containing <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/> is not active since 
            the caret is only displayed in active <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>s.
            </para>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.IsActive"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.Caret.PixelLocation">
            <summary>
            Returns the Point (in text area cooridnates) that represents the top left corner of the <see cref="P:Infragistics.Controls.Editors.Caret.TextLocation"/>. (read only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Caret.TextLocation">
            <summary>
            Returns the <see cref="P:Infragistics.Controls.Editors.Caret.TextLocation"/> of the caret in the current active <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/> (read-only)
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.Caret.TextLocationNormalized"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.Caret.TextLocationNormalized">
            <summary>
            Returns the one-based <see cref="P:Infragistics.Controls.Editors.Caret.TextLocation"/> of the caret in the current active <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/> (read-only)
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.Caret.TextLocation"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.Caret.Width">
            <summary>
            Returns the width of the caret in pixels. (read only)
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Editors.Caret.PropertyChanged">
            <summary>
            Event raised when a property on the object changes.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.EditorUndoTransaction">
            <summary>
            A custom undo/redo transaction for <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/> operations.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.EditorUndoTransaction.CreateExecuteTransaction(Infragistics.Undo.UndoExecuteContext)">
            <summary>
            Creates a transaction
            </summary>
            <param name="executeInfo">The necessary context.</param>
            <returns>The transaction.</returns>
        </member>
        <member name="P:Infragistics.Controls.Editors.EditorUndoTransaction.Target">
            <summary>
            Returns the target object that will be affected by the <see cref="T:Infragistics.Undo.UndoUnit"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.EditorUndoTransaction.Execute(Infragistics.Undo.UndoExecuteContext)">
            <summary>
            Used to perform the associated action.
            </summary>
            <param name="executeInfo">Provides information about the undo/redo operation being executed.</param>
            <returns>Returns true if some action was taken. Otherwise false is returned. In either case the object was removed from the undo stack.</returns>
        </member>
        <member name="T:Infragistics.Controls.Editors.DocumentViewLine">
            <summary>
            Represents a line that is displayed in an <see cref="T:Infragistics.Controls.Editors.DocumentViewBase"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.DocumentViewLine.ToString">
            <summary>
            Returns a string representation of the instance.
            </summary>
            <returns>A string representation of the instance</returns>
        </member>
        <member name="P:Infragistics.Controls.Editors.DocumentViewLine.Bounds">
            <summary>
            Returns the bounding rectangle of the line in text area coordinates. (read only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.DocumentViewLine.LayoutChangeType">
            <summary>
            Returns a value that indicates the kind of change (if any) that occurred for this line during the last layout pass. (read only)
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.EditorDocumentViewLayoutChangeType"/>
            <seealso cref="E:Infragistics.Controls.Editors.DocumentViewBase.LayoutChanged"/>
            <seealso cref="T:Infragistics.Controls.Editors.DocumentViewLayoutChangedEventArgs"/>
            <seealso cref="P:Infragistics.Controls.Editors.DocumentViewLine.LayoutTranslationOffset"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.DocumentViewLine.LayoutTranslationOffset">
            <summary>
            Returns a value that indicates the number of pixels that this line was moved during the last layout pass if the line's <see cref="P:Infragistics.Controls.Editors.DocumentViewLine.LayoutChangeType"/> is translated.  Othwerwise, returns zero. (read only)
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.EditorDocumentViewLayoutChangeType"/>
            <seealso cref="E:Infragistics.Controls.Editors.DocumentViewBase.LayoutChanged"/>
            <seealso cref="T:Infragistics.Controls.Editors.DocumentViewLayoutChangedEventArgs"/>
            <seealso cref="P:Infragistics.Controls.Editors.DocumentViewLine.LayoutChangeType"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.DocumentViewLine.LineEndTextLocation">
            <summary>
            Returns a <see cref="T:Infragistics.Documents.Parsing.TextLocation"/> corresponding to the unoccupied character position following the last character on the line. (read only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.DocumentViewLine.LineEndPoint">
            <summary>
            Returns a Point corresponding to the top/left corner of the unoccupied character position following the last character on the line. (read only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.DocumentViewLine.LineFirstCharacterPoint">
            <summary>
            Returns a Point corresponding to the top/left corner of the first character position on the line. (read only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.DocumentViewLine.LineFirstTextLocation">
            <summary>
            Returns a <see cref="T:Infragistics.Documents.Parsing.TextLocation"/> corresponding to the first character position on the line. (read only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.DocumentViewLine.LineLastCharacterPoint">
            <summary>
            Returns a Point corresponding to the top/left corner of the last character position on the line. (read only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.DocumentViewLine.LineLastTextLocation">
            <summary>
            Returns a <see cref="T:Infragistics.Documents.Parsing.TextLocation"/> corresponding to the last character position on the line. (read only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.DocumentViewLine.LineStartPoint">
            <summary>
            Returns a Point corresponding to the top/left corner of the first character on the line. (read only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.DocumentViewLine.LineStartTextLocation">
            <summary>
            Returns a <see cref="T:Infragistics.Documents.Parsing.TextLocation"/> corresponding to the first last character on the line. (read only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.DocumentViewLine.SnapshotLineInfo">
            <summary>
            The <see cref="P:Infragistics.Controls.Editors.DocumentViewLine.SnapshotLineInfo"/> associated with this <see cref="T:Infragistics.Controls.Editors.DocumentViewLine"/>.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.DocumentViewLine.SnapshotLineInfo"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.DocumentViewLine.ContainsLocation(Infragistics.Documents.Parsing.TextLocation)">
            <summary>
            Returns whether the specified <see cref="T:Infragistics.Documents.Parsing.TextLocation"/> is contained within this <see cref="T:Infragistics.Controls.Editors.DocumentViewLine"/>. (read only)
            </summary>
            <param name="textLocation">The <see cref="T:Infragistics.Documents.Parsing.TextLocation"/> to examine.</param>
            <returns>True if the <see cref="T:Infragistics.Controls.Editors.DocumentViewLine"/> contains the <see cref="T:Infragistics.Documents.Parsing.TextLocation"/> otherwise false.</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.DocumentViewLine.GetCharacterIndexFromXOffset(System.Double)">
            <summary>
            Returns the zero based index of the character on the line that is closest to the specified X offset.
            </summary>
            <remarks>
            <para class="note">
            <b>Note:</b> If an X offset is specified that is beyond the last character on the line, the index of the last character on the line is returned.
            </para>
            </remarks>
            <param name="xOffset">The horizontal offset (in pixels) from the beginning of the line at which to look for a character.</param>
            <returns>The zero based index of the character on the line that is closest to the specified X offset.</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.DocumentViewLine.GetParts">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Editors.IDocumentViewLinePart"/>s that make up this line.
            </summary>
            <returns>The <see cref="T:Infragistics.Controls.Editors.IDocumentViewLinePart"/>s that make up this line.</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.DocumentViewLine.GetPixelLengthOfTextSpan(Infragistics.Documents.Parsing.TextSpan)">
            <summary>
            Returns the length (in pixels) of the rendered text (on this line) described by the specified <see cref="T:Infragistics.Documents.Parsing.TextSpan"/>.
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> The specified <see cref="T:Infragistics.Documents.Parsing.TextSpan"/> must point to a offset and length that is contained within the line.  if not, a length of zero is returned.</para>
            </remarks>
            <param name="textSpan">The <see cref="T:Infragistics.Documents.Parsing.TextSpan"/> that describes the text (on this line) whose length is to be returned.</param>
            <returns>The length (in pixels) of the rendered text described by the specified <see cref="T:Infragistics.Documents.Parsing.TextSpan"/>.</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.DocumentViewLine.GetXOffsetFromCharacterIndex(System.Int32)">
            <summary>
            Returns the horizontal offset (in pixels) from the beginning of the line where the character with the specified character index is located.
            </summary>
            <remarks>
            <para class="note">
            <b>Note:</b> If a character index is specified that is beyond the last character on the line, the X offset of the last character on the line is returned.
            </para>
            </remarks>
            <param name="characterIndex">The zero based index of the character within the line whose X offset is to be returned.</param>
            <returns>The horizontal offset (in pixels) from the beginning of the line where the character with the specified character index is located</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.DocumentViewLine.PointFromCharacterIndex(System.Int32)">
            <summary>
            Returns a Point in text area coordinates that represents the location of the upper left corner of the character with the specified zero based character index within the line.
            </summary>
            <remarks>
            <para class="note">
            <b>Note:</b> If a character index is specified that is beyond the last character on the line, a point representing the pixel location of the last character on the line is returned.
            </para>
            </remarks>
            <param name="characterIndex">The zero based index of the character whose pixel location is to be returned.</param>
            <returns>A Point in text area coordinates that represents the location of the top left corner of the character with the specified zero based character index within the line.</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.DocumentViewLine.TextLocationFromPoint(System.Windows.Point)">
            <summary>
            Returns a <see cref="T:Infragistics.Documents.Parsing.TextLocation"/> that represents the character closest to the specified screen location (expressed as a Point in text area coordinates).
            </summary>
            <remarks>
            <para class="note">
            <b>Note:</b> If a Point is specified that is beyond the last character on the line, a <see cref="T:Infragistics.Documents.Parsing.TextLocation"/> representing the last character on the line is returned.
            </para>
            </remarks>
            <param name="point">The screen location (expressed as a Point in text area coordinates) that is to be examined for a <see cref="T:Infragistics.Documents.Parsing.TextLocation"/></param>
            <returns>A <see cref="T:Infragistics.Documents.Parsing.TextLocation"/> representing the character within the line at the specified screen location (expressed as a Point in text area coordinates).</returns>
        </member>
        <member name="T:Infragistics.Controls.Editors.DocumentViewLineCollection">
            <summary>
            Represents a collection of lines displayed in a <see cref="T:Infragistics.Controls.Editors.DocumentViewBase"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.DocumentViewLinePartInfo.Infragistics#Controls#Editors#IDocumentViewLinePart#PartType">
            <summary>
            Returns the kind of part represented by this IDocumentViewLinePart.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.DocumentViewLinePartInfo.Infragistics#Controls#Editors#IDocumentViewLinePart#Bounds">
            <summary>
            Returns the bounds (in text area coordinates) of the part.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.DocumentViewLinePartInfo.Infragistics#Controls#Editors#IDocumentViewLinePart#Text">
            <summary>
            Returns the text associated with the part.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.DocumentViewLinePartInfo.Infragistics#Controls#Editors#IDocumentViewLinePart#Appearance">
            <summary>
            Returns the <see cref="P:Infragistics.Controls.Editors.DocumentViewLinePartInfo.Appearance"/> used to format the part if <see cref="P:Infragistics.Controls.Editors.DocumentViewLinePartInfo.PartType"/> is Text.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.IDocumentViewLinePart">
            <summary>
            Represents a part within a <see cref="T:Infragistics.Controls.Editors.DocumentViewLine"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.IDocumentViewLinePart.PartType">
            <summary>
            Returns the kind of part represented by this IDocumentViewLinePart.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.IDocumentViewLinePart.Bounds">
            <summary>
            Returns the bounds (in text area coordinates) of the part.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.IDocumentViewLinePart.Text">
            <summary>
            Returns the text associated with the part.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.IDocumentViewLinePart.Appearance">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Editors.TextDocumentAppearance"/> used to format the part if <see cref="P:Infragistics.Controls.Editors.IDocumentViewLinePart.PartType"/> is Text.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.MarginBase">
            <summary>
            An abstract base class for creating classes that provide an implementation for an <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/> Margin.
            </summary>
            <remarks>
            <para class="body">
            This is the base class for all Margins - built-in and custom.  To create a custom Margin, derive a class from this class and override
            the <see cref="T:Infragistics.Controls.Editors.EditorDocumentViewMarginLocation"/> property and implement the <see cref="T:Infragistics.ISupportPositioning"/> interface members to control your margin's position within that location.  In addition 
            you should override the <see cref="M:Infragistics.Controls.Editors.MarginBase.CreatePresenter(Infragistics.Controls.Editors.DocumentViewBase)"/> method and return a FrameworkElement derived element that will serve as the Margin's
            representation in the UI.  To let the <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/> know about your custom Margin, simply add an instance of your <see cref="T:Infragistics.Controls.Editors.MarginBase"/>
            derived class to the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.CustomMargins"/> collection.
            </para>
            <para class="body">
            The built-in Margins are automatically created by the <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/> and together with any <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.CustomMargins"/> you have specified
            are arranged and displayed in one of the four Margin areas based on their <see cref="P:Infragistics.Controls.Editors.MarginBase.Location"/> property.
            </para>
            </remarks>
            <seealso cref="T:Infragistics.Controls.Editors.LineNumberMargin"/>
            <seealso cref="T:Infragistics.Controls.Editors.Primitives.LineNumberMarginPresenter"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.CustomMargins"/>
            <seealso cref="T:Infragistics.ISupportPositioning"/>
            <seealso cref="T:Infragistics.Controls.Editors.MarginKeys"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.MarginBase.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.MarginBase.Location">
            <summary>
            Returns the location of the Margin within the <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/> (read only).
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.EditorDocumentViewMarginLocation"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.MarginBase.CreatePresenter(Infragistics.Controls.Editors.DocumentViewBase)">
            <summary>
            Returns an instance of the element that represents the Margin within the <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>.
            </summary>
            <param name="documentView">The <see cref="T:Infragistics.Controls.Editors.DocumentViewBase"/> for which the Margin presenter should be created.</param>
            <returns>An instance of a FrameworkElement derived class the represents the Margin in the UI.</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.MarginBase.OnPresenterDiscarded(System.Windows.FrameworkElement)">
            <summary>
            Called when the margin's associated presenter element is being discarded to give the margin an opportunity to cleanup any allocated resources.
            </summary>
            <param name="discardedPresenter">The margin presenter element that is being discarded.</param>
        </member>
        <member name="P:Infragistics.Controls.Editors.MarginBase.After">
            <summary>
            An array of string keys that represent the items after which the current item should be sorted.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.MarginBase.Before">
            <summary>
            An array of string keys that represent the items before which the current item should be sorted.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.MarginBase.Key">
            <summary>
            The string key of the current item.  This key will be referenced in the <see cref="P:Infragistics.Controls.Editors.MarginBase.Before"/> and <see cref="P:Infragistics.Controls.Editors.MarginBase.After"/> lists of other items.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.MarginKeys">
            <summary>
            A class that exposes the positioning keys used by the built-in Margins.  
            </summary>
            <para class="note">
            <b>Note:</b> Margins that are positioned 'before' other margins (as determined by the Margin's implementation of the <see cref="T:Infragistics.ISupportPositioning"/> interface) are arranged closer to the text area.
            </para>
            <seealso cref="T:Infragistics.ISupportPositioning"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.MarginKeys.LineNumberMargin">
            <summary>
            A constant used by the <see cref="F:Infragistics.Controls.Editors.MarginKeys.LineNumberMargin"/> to specify its <see cref="P:Infragistics.ISupportPositioning.Key"/>.
            </summary>
            <para class="body">
            When creating a custom Margin choose a set of 'before' and 'after' keys (see <see cref="T:Infragistics.ISupportPositioning"/>) that places it in the desired location relative to the built-in Margins. 
            </para>
            <para class="note">
            <b>Note:</b> Margins that are positioned 'before' other margins (as determined by the Margin's implementation of the <see cref="T:Infragistics.ISupportPositioning"/> interface) are arranged closer to the text area.
            </para>
            <seealso cref="T:Infragistics.ISupportPositioning"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.MarginKeys.RulerMargin">
            <summary>
            A constant used by the <see cref="F:Infragistics.Controls.Editors.MarginKeys.RulerMargin"/> to specify its <see cref="P:Infragistics.ISupportPositioning.Key"/>.
            </summary>
            <para class="body">
            When creating a custom Margin choose a set of 'before' and 'after' keys (see <see cref="T:Infragistics.ISupportPositioning"/>) that places it in the desired location relative to the built-in Margins. 
            </para>
            <para class="note">
            <b>Note:</b> Margins that are positioned 'before' other margins (as determined by the Margin's implementation of the <see cref="T:Infragistics.ISupportPositioning"/> interface) are arranged closer to the text area.
            </para>
            <seealso cref="T:Infragistics.ISupportPositioning"/>
        </member>
        <member name="T:Infragistics.Controls.Editors.LineNumberMargin">
            <summary>
            A <see cref="T:Infragistics.Controls.Editors.MarginBase"/> derived class that defines a built-in Margin which displays line numbers at the left edge of each line in the <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>.
            </summary>
            <remarks>
            <para class="body">
            The built-in Margins are automatically created by the <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/> and together with any <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.CustomMargins"/> you have specified
            are arranged and displayed in one of the four Margin areas based on their <see cref="P:Infragistics.Controls.Editors.MarginBase.Location"/> property.
            </para>
            </remarks>
            <seealso cref="T:Infragistics.Controls.Editors.Primitives.LineNumberMarginPresenter"/>
            <seealso cref="T:Infragistics.Controls.Editors.RulerMargin"/>
            <seealso cref="T:Infragistics.Controls.Editors.Primitives.RulerMarginPresenter"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.CustomMargins"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.IsLineNumberMarginVisible"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.IsRulerMarginVisible"/>
            <seealso cref="T:Infragistics.ISupportPositioning"/>
            <seealso cref="T:Infragistics.Controls.Editors.MarginKeys"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.LineNumberMargin.Location">
            <summary>
            Returns the location of the Margin within the <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/> (read only).
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.EditorDocumentViewMarginLocation"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.LineNumberMargin.CreatePresenter(Infragistics.Controls.Editors.DocumentViewBase)">
            <summary>
            Returns an instance of the element that represents the Margin within the <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>.
            </summary>
            <param name="documentView">The <see cref="T:Infragistics.Controls.Editors.DocumentViewBase"/> for which the Margin presenter should be created.</param>
            <returns>An instance of a FrameworkElement derived class the represents the Margin in the UI.</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.LineNumberMargin.OnPresenterDiscarded(System.Windows.FrameworkElement)">
            <summary>
            Called when the margin's associated presenter element is being discarded to give the margin an opportunity to cleanup any allocated resources.
            </summary>
            <param name="discardedPresenter">The margin presenter element that is being discarded.</param>
        </member>
        <member name="P:Infragistics.Controls.Editors.LineNumberMargin.After">
            <summary>
            An array of string keys that represent the items after which the current item should be sorted.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.LineNumberMargin.Before">
            <summary>
            An array of string keys that represent the items before which the current item should be sorted.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.LineNumberMargin.Key">
            <summary>
            The string key of the current item.  This key will be referenced in the <see cref="P:Infragistics.Controls.Editors.LineNumberMargin.Before"/> and <see cref="P:Infragistics.Controls.Editors.LineNumberMargin.After"/> lists of other items.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.RulerMargin">
            <summary>
            A <see cref="T:Infragistics.Controls.Editors.MarginBase"/> derived class that defines a built-in Margin which displays a character position ruler at the top of the <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>.
            </summary>
            <remarks>
            <para class="body">
            The built-in Margins are automatically created by the <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/> and together with any <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.CustomMargins"/> you have specified
            are arranged and displayed in one of the four Margin areas based on their <see cref="P:Infragistics.Controls.Editors.MarginBase.Location"/> property.
            </para>
            </remarks>
            <seealso cref="T:Infragistics.Controls.Editors.Primitives.RulerMarginPresenter"/>
            <seealso cref="T:Infragistics.Controls.Editors.LineNumberMargin"/>
            <seealso cref="T:Infragistics.Controls.Editors.Primitives.LineNumberMarginPresenter"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.IsRulerMarginVisible"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.CustomMargins"/>
            <seealso cref="T:Infragistics.ISupportPositioning"/>
            <seealso cref="T:Infragistics.Controls.Editors.MarginKeys"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.RulerMargin.Location">
            <summary>
            Returns the location of the Margin within the <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/> (read only).
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.EditorDocumentViewMarginLocation"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.RulerMargin.CreatePresenter(Infragistics.Controls.Editors.DocumentViewBase)">
            <summary>
            Returns an instance of the element that represents the Margin within the <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>.
            </summary>
            <param name="documentView">The <see cref="T:Infragistics.Controls.Editors.DocumentViewBase"/> for which the Margin presenter should be created.</param>
            <returns>An instance of a FrameworkElement derived class the represents the Margin in the UI.</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.RulerMargin.OnPresenterDiscarded(System.Windows.FrameworkElement)">
            <summary>
            Called when the margin's associated presenter element is being discarded to give the margin an opportunity to cleanup any allocated resources.
            </summary>
            <param name="discardedPresenter">The margin presenter element that is being discarded.</param>
        </member>
        <member name="P:Infragistics.Controls.Editors.RulerMargin.After">
            <summary>
            An array of string keys that represent the items after which the current item should be sorted.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.RulerMargin.Before">
            <summary>
            An array of string keys that represent the items before which the current item should be sorted.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.RulerMargin.Key">
            <summary>
            The string key of the current item.  This key will be referenced in the <see cref="P:Infragistics.Controls.Editors.RulerMargin.Before"/> and <see cref="P:Infragistics.Controls.Editors.RulerMargin.After"/> lists of other items.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.SelectionUndoUnit">
            <summary>
            Class for an undo/redo operation involving text selection.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.SelectionUndoUnit.Target">
            <summary>
            Returns the target object that will be affected by the <see cref="T:Infragistics.Undo.UndoUnit"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.SelectionUndoUnit.Execute(Infragistics.Undo.UndoExecuteContext)">
            <summary>
            Used to perform the associated action.
            </summary>
            <param name="executeInfo">Provides information about the undo/redo operation being executed.</param>
            <returns>Returns true if some action was taken. Otherwise false is returned. In either case the object was removed from the undo stack.</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.SelectionUndoUnit.GetDescription(Infragistics.Undo.UndoHistoryItemType,System.Boolean)">
            <summary>
            Returns a string representation of the action based on whether this is for an undo or redo operation.
            </summary>
            <param name="itemType">The type of history for which the description is being requested.</param>
            <param name="detailed">A boolean indicating if a detailed description should be returned. For example, when false one may return "Typing" but for verbose one may return "Typing 'qwerty'".</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.SelectionUndoUnit.Merge(Infragistics.Undo.UndoMergeContext)">
            <summary>
            Used to allow multiple consecutive undo units to be merged into a single operation.
            </summary>
            <param name="mergeInfo">Provides information about the unit to evaluate for a merge operation</param>
            <returns>Returns an enumeration used to provide identify how the unit was merged.</returns>
        </member>
        <member name="T:Infragistics.Controls.Editors.DocumentViewBase">
            <summary>
            The abstract base class for all document view classes.
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.DocumentViewBase.CurrentSnapshot">
            <summary>
            Returns the <see cref="T:Infragistics.Documents.TextDocumentSnapshot"/> used to generate the current set of <see cref="P:Infragistics.Controls.Editors.DocumentViewBase.VisibleLines"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.DocumentViewBase.Document">
            <summary>
            Returns the <see cref="T:Infragistics.Documents.TextDocument"/> associated with the view.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.DocumentViewBase.FirstVisibleLineNumber">
            <summary>
            Returns/sets the zero-based line index of the first visible <see cref="T:Infragistics.Controls.Editors.DocumentViewLine"/> displayed in the <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.DocumentViewBase.HorizontalLineOffset"/>
            <seealso cref="M:Infragistics.Controls.Editors.DocumentViewBase.BringLineIntoView(System.Int32,System.Boolean)"/>
            <seealso cref="M:Infragistics.Controls.Editors.DocumentViewBase.GoToLineNumber(System.Int32)"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.DocumentViewBase.HorizontalLineOffset">
            <summary>
            Returns/sets the zero-based horizontal pixel offset of the <see cref="T:Infragistics.Controls.Editors.DocumentViewLine"/>s displayed in the <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>
            </summary>
            <remarks>
            The value exposed by this property will always be a positive value.  If an attempt is made to set it to a negative value, the property will be set to zero instead.
            The maximum value is based on the length of the longest line encountered in the display as well as the width of the text area.
            </remarks>
            <seealso cref="P:Infragistics.Controls.Editors.DocumentViewBase.FirstVisibleLineNumber"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.DocumentViewBase.LastVisibleLineNumber">
            <summary>
            Returns the zero-based line index of the last visible <see cref="T:Infragistics.Controls.Editors.DocumentViewLine"/> displayed in the <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/> (read only)
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.DocumentViewBase.FirstVisibleLineNumber"/>
            <seealso cref="P:Infragistics.Controls.Editors.DocumentViewBase.VisibleLines"/>
            <seealso cref="M:Infragistics.Controls.Editors.DocumentViewBase.BringLineIntoView(System.Int32,System.Boolean)"/>
            <seealso cref="M:Infragistics.Controls.Editors.DocumentViewBase.GoToLineNumber(System.Int32)"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.DocumentViewBase.SyntaxEditor">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/> associated with the view.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.DocumentViewBase.TextAreaBounds">
            <summary>
            Returns the bounding rectangle of the text area (the area within the scrollbars and margins where the text is rendered) in control coordinates. (read only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.DocumentViewBase.VisibleLines">
            <summary>
            Returns a read only observable collection of <see cref="T:Infragistics.Controls.Editors.DocumentViewLine"/>s that represent the lines currently displayed in the <see cref="T:Infragistics.Controls.Editors.DocumentViewBase"/> (read-only)
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.DocumentViewBase.BringLineIntoView(System.Int32,System.Boolean)">
            <summary>
            Ensures that the document line with the specified zero-based line index is in view.  
            </summary>
            <param name="targetLineIndex">The zero-based line index of the document line we are bringing into view.</param>
            <param name="mustBeFullyInView">True if the line represented by 'targetLineIndex' must be fully in view, otherwise false.</param>
            <seealso cref="P:Infragistics.Controls.Editors.DocumentViewBase.FirstVisibleLineNumber"/>
            <seealso cref="M:Infragistics.Controls.Editors.DocumentViewBase.GoToLineNumber(System.Int32)"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.DocumentViewBase.GetIsLineInView(System.Int32,System.Boolean)">
            <summary>
            Returns whether the document line with the specified zero-based line index is in view.
            </summary>
            <param name="targetLineIndex">The zero-based line index of the document line whose visible line we are seeking.</param>
            <param name="mustBeFullyInView">True if the line represented by 'targetLineIndex' must be fully in view, otherwise false.</param>
            <returns>Returns true if the document line with the specified zero-based line index is in view, otherwise false.</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.DocumentViewBase.GetMarginAreaHeight(Infragistics.Controls.Editors.EditorDocumentViewMarginLocation)">
            <summary>
            Returns the height of the margin area in the specified <see cref="T:Infragistics.Controls.Editors.EditorDocumentViewMarginLocation"/>.
            </summary>
            <param name="marginLocation">The <see cref="T:Infragistics.Controls.Editors.EditorDocumentViewMarginLocation"/> that describes the margin area whose height is to be returned.</param>
            <returns>The height of the margin area in the specified <see cref="T:Infragistics.Controls.Editors.EditorDocumentViewMarginLocation"/>.</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.DocumentViewBase.GetMarginAreaWidth(Infragistics.Controls.Editors.EditorDocumentViewMarginLocation)">
            <summary>
            Returns the width of the margin area in the specified <see cref="T:Infragistics.Controls.Editors.EditorDocumentViewMarginLocation"/>.
            </summary>
            <param name="marginLocation">The <see cref="T:Infragistics.Controls.Editors.EditorDocumentViewMarginLocation"/> that describes the margin area whose width is to be returned.</param>
            <returns>The width of the margin area in the specified <see cref="T:Infragistics.Controls.Editors.EditorDocumentViewMarginLocation"/>.</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.DocumentViewBase.GoToLineNumber(System.Int32)">
            <summary>
            Positions the requested line so that it is in view (and in the middle of the display if possible).  
            </summary>
            <param name="lineNumber">The one-based line number of the document line to bring into view.</param>
            <seealso cref="P:Infragistics.Controls.Editors.DocumentViewBase.FirstVisibleLineNumber"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.DocumentViewBase.GoToOffset(System.Int32)">
            <summary>
            Reloads the display so that the line containing the specified document offset is in view and in the middle of the display if possible, and the caret is positioned at the specified offset.  
            </summary>
            <param name="documentOffset">The zero-based offset within the document to bring into view.</param>
            <seealso cref="P:Infragistics.Controls.Editors.DocumentViewBase.FirstVisibleLineNumber"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.DocumentViewBase.GoToTextLocation(Infragistics.Documents.Parsing.TextLocation)">
            <summary>
            Reloads the display so that the line containing the specified <see cref="T:Infragistics.Documents.Parsing.TextLocation"/> is in view (and in the middle of the display if possible), and the caret is positioned at the specified character position.  
            </summary>
            <param name="location">The <see cref="T:Infragistics.Documents.Parsing.TextLocation"/> within the document to bring into view.</param>
            <seealso cref="P:Infragistics.Controls.Editors.DocumentViewBase.FirstVisibleLineNumber"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.DocumentViewBase.SnapshotPointFromScreenPoint(System.Windows.Point)">
            <summary>
            Returns the <see cref="T:Infragistics.Documents.SnapshotPoint"/> that is closest to the specified screen point (expressed in text area coordinates).
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> If there are no visible lines a <see cref="T:Infragistics.Documents.SnapshotPoint"/> representing the 0,0 location is returned.</para>
            </remarks>
            <param name="pointInTextAreaCoordinates">The point to examine (expressed in text area coordinates).</param>
            <returns>The <see cref="T:Infragistics.Documents.SnapshotPoint"/> that is closest to the specified screen point (expressed in text area coordinates).</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.DocumentViewBase.TextAreaPointFromViewPoint(System.Windows.Point)">
            <summary>
            Translates a point from view (which contains the scrollbars, margins, text area) coordinates to text area coordinates.
            </summary>
            <param name="point">The point to be translated</param>
            <returns>The translated point.</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.DocumentViewBase.TextLocationFromScreenPoint(System.Windows.Point)">
            <summary>
            Returns the <see cref="T:Infragistics.Documents.Parsing.TextLocation"/> that is closest to the specified screen point (expressed in text area coordinates).
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> If there are no visible lines a <see cref="T:Infragistics.Documents.Parsing.TextLocation"/> representing the 0,0 location is returned.</para>
            </remarks>
            <param name="pointInTextAreaCoordinates">The point to examine (expressed in text area coordinates).</param>
            <returns>The <see cref="T:Infragistics.Documents.Parsing.TextLocation"/> that is closest to the specified screen point (expressed in text area coordinates).</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.DocumentViewBase.ViewLineFromLineIndex(System.Int32)">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Editors.DocumentViewLine"/> that corresponds to the to the document line with 
            the specified zero-based line index, or null if the document line with the 
            specified zero-based line index is out of view.
            </summary>
            <param name="lineIndex">The zero-based line index of the document line whose visible line we are seeking.</param>
            <returns>The <see cref="T:Infragistics.Controls.Editors.DocumentViewLine"/> that corresponds to the to the document line with 
            the specified zero-based line index, or null if the document line with the 
            specified zero-based line index is out of view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.DocumentViewBase.ViewLineFromVerticalOffset(System.Double)">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Editors.DocumentViewLine"/> that contains the specified vertical pixel offset (in text coordinates) from the top of the view.
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> If no visible line contains the specified vertical pixel offset, the the closest visible line containing the offset is returned.
            </para>
            </remarks>
            <param name="offset">The vertical pixel offset (in text coordinates) from the top of the view to examine.</param>
            <returns>The closest <see cref="T:Infragistics.Controls.Editors.DocumentViewLine"/> that contains the specified vertical pixel offset, or null if no <see cref="T:Infragistics.Controls.Editors.DocumentViewLine"/> contains the specified vertical pixel offset.</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.DocumentViewBase.ViewPointFromTextAreaPoint(System.Windows.Point)">
            <summary>
            Translates a point from text area coordinates to view (which contains the scrollbars, margins, text area) coordinates.
            </summary>
            <param name="pointInTextAreaCoordinates">The point to be translated</param>
            <returns>The translated point.</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.DocumentViewBase.OnAmbientPropertyChanged">
            <summary>
            Called when one or more ambient font or color properties have changed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.DocumentViewBase.OnDocumentChanged(Infragistics.Documents.TextDocument,Infragistics.Documents.TextDocument)">
            <summary>
            Called when the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.Document"/> property has changed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.DocumentViewBase.OnDocumentTextChanged(System.Object,Infragistics.Documents.TextChangedEventArgs)">
            <summary>
            Called when the document text has changed
            </summary>
            <param name="sender">The source of the event</param>
            <param name="e">Information about the event</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.DocumentViewBase.OnDocumentTextChanging(System.Object,Infragistics.Documents.TextChangingEventArgs)">
            <summary>
            Called when the document text is about to change
            </summary>
            <param name="sender">The source of the event></param>
            <param name="e">Information about the event</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.DocumentViewBase.OnDocumentTextLoaded">
            <summary>
            Called when text is loaded into the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.Document"/> as the result of a call to <see cref="M:Infragistics.Documents.TextDocument.Load(System.String)"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.DocumentViewBase.OnLanguageChanged">
            <summary>
            Called when the <see cref="T:Infragistics.Documents.Parsing.LanguageBase">Language</see> associated with the <see cref="T:Infragistics.Documents.TextDocument"/> changes.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.DocumentViewBase.OnLoaded">
            <summary>
            Called when the <see cref="T:Infragistics.Controls.Editors.DocumentViewBase"/> is loaded.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.DocumentViewBase.OnServiceAdded(System.Object)">
            <summary>
            Called when a service has been registered on the associated <see cref="T:Infragistics.Documents.TextDocument"/>'s <see cref="T:Infragistics.Documents.Parsing.LanguageBase">Language</see>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.DocumentViewBase.OnServiceRemoved(System.Object)">
            <summary>
            Called when a service has been unregistered on the associated <see cref="T:Infragistics.Documents.TextDocument"/>'s <see cref="T:Infragistics.Documents.Parsing.LanguageBase">Language</see>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.DocumentViewBase.OnUnloaded">
            <summary>
            Called when the <see cref="T:Infragistics.Controls.Editors.DocumentViewBase"/> is unloaded.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.DocumentViewBase.RefreshLayerLayout(Infragistics.Controls.Editors.AdornmentLayerInfo)">
            <summary>
            Refreshes the layout of the <see cref="T:Infragistics.Controls.Editors.Primitives.AdornmentLayer"/> described by the specified <see cref="T:Infragistics.Controls.Editors.AdornmentLayerInfo"/>
            </summary>
            <param name="layerInfo">The <see cref="T:Infragistics.Controls.Editors.AdornmentLayerInfo"/> that describes the <see cref="T:Infragistics.Controls.Editors.Primitives.AdornmentLayer"/> whose layout should be refreshed.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.DocumentViewBase.RefreshLayersLayout">
            <summary>
            Refreshes the layout of all <see cref="T:Infragistics.Controls.Editors.Primitives.AdornmentLayer"/>s associated with this <see cref="T:Infragistics.Controls.Editors.DocumentViewBase"/>
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.Primitives.EditorDocumentViewPresenter"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.DocumentViewBase.OnLayoutChanged(Infragistics.Controls.Editors.DocumentViewLayoutChangedEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Controls.Editors.DocumentViewBase.LayoutChanged"/> event.
            </summary>
            <param name="args">Event args for raising the event.</param>
            <seealso cref="E:Infragistics.Controls.Editors.DocumentViewBase.LayoutChanged"/>
            <seealso cref="T:Infragistics.Controls.Editors.DocumentViewLayoutChangedEventArgs"/>
        </member>
        <member name="E:Infragistics.Controls.Editors.DocumentViewBase.LayoutChanged">
            <summary>
            Raised after the layout of the lines in the <see cref="T:Infragistics.Controls.Editors.DocumentViewBase"/> has changed.
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.DocumentViewLayoutChangedEventArgs"/>
            <seealso cref="T:Infragistics.Controls.Editors.DocumentViewBase"/>
        </member>
        <member name="T:Infragistics.Controls.Editors.EditorDocumentView">
            <summary>
            A class that represents a view into the document being edited in the <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/> .  
            </summary>
            <remarks>
            <para class="body">
            A <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/> can display 1 or 2 editing areas which are independently scrollable views
            into the document being edited. Each editing area is backed by an <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/> which is 
            represented in the UI by a <see cref="T:Infragistics.Controls.Editors.Primitives.EditorDocumentViewPresenter"/>.  
            </para>
            <para class="body">
            By default the control displays one editing area which takes up the entire inner portion of the control.  If the 
            <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitStatus"/> property is set to <see cref="F:Infragistics.Controls.Editors.EditorDocumentViewSplitStatus.SplitHorizontally"/> or
            <see cref="F:Infragistics.Controls.Editors.EditorDocumentViewSplitStatus.SplitVertically"/> the control will display 2 editing areas.
            </para>
            <para class="note">
            <b>Note:</b> The <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitOptions"/> property controls what type of splits are allowed by the end user.
            </para>
            </remarks>
            <seealso cref="T:Infragistics.Controls.Editors.EditorDocumentViewLocation"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.ActiveDocumentView"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitStatus"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitOptions"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.EditorDocumentView.OnAmbientPropertyChanged">
            <summary>
            Called when one or more ambient font or color properties have changed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.EditorDocumentView.OnDocumentChanged(Infragistics.Documents.TextDocument,Infragistics.Documents.TextDocument)">
            <summary>
            Called when the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.Document"/> property has changed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.EditorDocumentView.OnDocumentTextChanged(System.Object,Infragistics.Documents.TextChangedEventArgs)">
            <summary>
            Called when the document text has changed
            </summary>
            <param name="sender">The source of the event</param>
            <param name="e">Information about the event</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.EditorDocumentView.OnDocumentTextChanging(System.Object,Infragistics.Documents.TextChangingEventArgs)">
            <summary>
            Called when the document text is about to change
            </summary>
            <param name="sender">The source of the event></param>
            <param name="e">Information about the event</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.EditorDocumentView.OnDocumentTextLoaded">
            <summary>
            Called when text is loaded into the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.Document"/> as the result of a call to <see cref="M:Infragistics.Documents.TextDocument.Load(System.String)"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.EditorDocumentView.OnLayoutChanged(Infragistics.Controls.Editors.DocumentViewLayoutChangedEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Controls.Editors.DocumentViewBase.LayoutChanged"/> event.
            </summary>
            <param name="args">Event args for raising the event.</param>
            <seealso cref="E:Infragistics.Controls.Editors.DocumentViewBase.LayoutChanged"/>
            <seealso cref="T:Infragistics.Controls.Editors.DocumentViewLayoutChangedEventArgs"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.EditorDocumentView.IsActive">
            <summary>
            Returns whether the <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/> is the current active view. (read-only).
            </summary>
            <seealso cref="M:Infragistics.Controls.Editors.EditorDocumentView.OnActivated"/>
            <seealso cref="M:Infragistics.Controls.Editors.EditorDocumentView.OnDeactivated"/>
            <seealso cref="E:Infragistics.Controls.Editors.EditorDocumentView.Activated"/>
            <seealso cref="E:Infragistics.Controls.Editors.EditorDocumentView.Deactivated"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.ActiveDocumentView"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.EditorDocumentView.SelectionManager">
            <summary>
            Returns a <see cref="T:Infragistics.Controls.Editors.ViewSelectionManager"/> instance which can be used to query and interact with the selected text in the view. (read only) 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.EditorDocumentView.ViewLocation">
            <summary>
            Returns an <see cref="T:Infragistics.Controls.Editors.EditorDocumentViewLocation"/> enumeration that specifies the location of this <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/> within the <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/> control. (read-only).
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.EditorDocumentViewLocation"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.IsSplitVertically"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.IsSplitHorizontally"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.EditorDocumentView.Activate">
            <summary>
            Makes this <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/> the active view.
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.ActiveDocumentView"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.EditorDocumentView.OnActivated">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Controls.Editors.EditorDocumentView.Activated"/> event.
            </summary>
            <seealso cref="M:Infragistics.Controls.Editors.EditorDocumentView.OnDeactivated"/>
            <seealso cref="E:Infragistics.Controls.Editors.EditorDocumentView.Activated"/>
            <seealso cref="E:Infragistics.Controls.Editors.EditorDocumentView.Deactivated"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.ActiveDocumentView"/>
        </member>
        <member name="E:Infragistics.Controls.Editors.EditorDocumentView.Activated">
            <summary>
            Raised after the <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/> has been activated.
            </summary>
            <seealso cref="M:Infragistics.Controls.Editors.EditorDocumentView.OnActivated"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.EditorDocumentView.OnDeactivated">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Controls.Editors.EditorDocumentView.Deactivated"/> event.
            </summary>
            <seealso cref="M:Infragistics.Controls.Editors.EditorDocumentView.OnActivated"/>
            <seealso cref="E:Infragistics.Controls.Editors.EditorDocumentView.Activated"/>
            <seealso cref="E:Infragistics.Controls.Editors.EditorDocumentView.Deactivated"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.ActiveDocumentView"/>
        </member>
        <member name="E:Infragistics.Controls.Editors.EditorDocumentView.Deactivated">
            <summary>
            Raised after the <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/> has been deactivated.
            </summary>
            <seealso cref="M:Infragistics.Controls.Editors.EditorDocumentView.OnActivated"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.EditorDocumentView.OnSelectionChanged(Infragistics.Controls.Editors.SyntaxEditorSelectionChangedEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Controls.Editors.EditorDocumentView.SelectionChanged"/> event.
            </summary>
            <param name="args">Event args for raising the event.</param>
            <seealso cref="E:Infragistics.Controls.Editors.EditorDocumentView.SelectionChanged"/>
            <seealso cref="T:Infragistics.Controls.Editors.SyntaxEditorSelectionChangedEventArgs"/>
        </member>
        <member name="E:Infragistics.Controls.Editors.EditorDocumentView.SelectionChanged">
            <summary>
            Raised after the <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/>'s Selection is changed.
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.SyntaxEditorSelectionChangedEventArgs"/>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.SelectionManager"/>
            <seealso cref="T:Infragistics.Controls.Editors.ViewSelectionManager"/>
        </member>
        <member name="T:Infragistics.Controls.Editors.DocumentViewLinePartType">
            <summary>
            Specifies the kind of <see cref="T:Infragistics.Controls.Editors.DocumentViewLine"/> part represented by an <see cref="T:Infragistics.Controls.Editors.IDocumentViewLinePart"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.DocumentViewLinePartType.Text">
            <summary>
            A <see cref="T:Infragistics.Controls.Editors.DocumentViewLine"/> part that represents a block of text.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.DocumentViewLinePartType.Tab">
            <summary>
            A <see cref="T:Infragistics.Controls.Editors.DocumentViewLine"/> part that represents a single tab character.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.EditorDocumentViewLocation">
            <summary>
            Specifies the location of an <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/> within the editing area of a <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/> control.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.ActiveDocumentView"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitOptions"/>
            <seealso cref="T:Infragistics.Controls.Editors.EditorDocumentViewSplitStatus"/>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.ViewLocation"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.EditorDocumentViewLocation.Center">
            <summary>
            The <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/> is the only view being displayed by the <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/>
            and it takes up the entire editing area of the control. 
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.ActiveDocumentView"/>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.ViewLocation"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.EditorDocumentViewLocation.UpperOrLeft">
            <summary>
            Specifies that the <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/> is the upper view in a <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/> with a horizontal split or the left view in a <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/> with a vertical split.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.ActiveDocumentView"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitOptions"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitStatus"/>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.ViewLocation"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.EditorDocumentViewLocation.LowerOrRight">
            <summary>
            Specifies that the <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/> is the lower view in a <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/> with a horizontal split or the right view in a <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/> with a vertical split.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.ActiveDocumentView"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitOptions"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitStatus"/>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.ViewLocation"/>
        </member>
        <member name="T:Infragistics.Controls.Editors.EditorDocumentViewSplitStatus">
            <summary>
            Specifies how the editing area of a <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/> control is split.
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>
            <seealso cref="T:Infragistics.Controls.Editors.EditorDocumentViewLocation"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.ActiveDocumentView"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitStatus"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitOptions"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.EditorDocumentViewSplitStatus.NotSplit">
            <summary>
            The editing area of the <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/> is not split - a single <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/> occupies the entire editing area of the control. 
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.ActiveDocumentView"/>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.ViewLocation"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitStatus"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitOptions"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.EditorDocumentViewSplitStatus.SplitVertically">
            <summary>
            The editing area of the <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/> is split vertically - two <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>s occupy the editing area of the control separated by a vertical splitter. 
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.ActiveDocumentView"/>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.ViewLocation"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitStatus"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitOptions"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.EditorDocumentViewSplitStatus.SplitHorizontally">
            <summary>
            The editing area of the <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/> is split horizontally - two <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>s occupy the editing area of the control separated by a horizontal splitter. 
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.ActiveDocumentView"/>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.ViewLocation"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitStatus"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitOptions"/>
        </member>
        <member name="T:Infragistics.Controls.Editors.EditorDocumentViewSplitOptions">
            <summary>
            Specifies wich split operations are allowed on the the editing area of a <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/> control.
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>
            <seealso cref="T:Infragistics.Controls.Editors.EditorDocumentViewLocation"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.ActiveDocumentView"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitStatus"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitOptions"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.EditorDocumentViewSplitOptions.AllowVerticalSplitsOnly">
            <summary>
            The <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/> displays a mini-splitter that allows the editing area of the <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/> to be split vertically, creating two <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>s in the editing area of the control separated by a vertical splitter. 
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.ActiveDocumentView"/>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.ViewLocation"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitStatus"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitOptions"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.EditorDocumentViewSplitOptions.AllowHorizontalSplitsOnly">
            <summary>
            The <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/> displays a mini-splitter that allows the editing area of the <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/> to be split horizontally, creating two <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>s in the editing area of the control separated by a horizontal splitter. 
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.ActiveDocumentView"/>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.ViewLocation"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitStatus"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitOptions"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.EditorDocumentViewSplitOptions.AllowVerticalAndHorizontalSplits">
            <summary>
            The <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/> displays a mini-splitter that allows the editing area of the <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/> to be split horizontally or vertically, creating two <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>s in the editing area of the control separated by either a horizontal or verticalsplitter. 
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.ActiveDocumentView"/>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.ViewLocation"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitStatus"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitOptions"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.EditorDocumentViewSplitOptions.SplittingNotAllowed">
            <summary>
            The <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/> does not display a mini-splitter that allows the editing area of the <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/> to be split - a single <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/> always occupies the entire editing area of the control. 
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.ActiveDocumentView"/>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.ViewLocation"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitStatus"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitOptions"/>
        </member>
        <member name="T:Infragistics.Controls.Editors.EditorDocumentViewMarginLocation">
            <summary>
            Specifies the location of an <see cref="T:Infragistics.Controls.Editors.MarginBase"/> within an <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.MarginBase.Location"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.EditorDocumentViewMarginLocation.Left">
            <summary>
            Specifies an <see cref="T:Infragistics.Controls.Editors.MarginBase"/> location that is on the left side of the <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>.
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>
            <seealso cref="P:Infragistics.Controls.Editors.MarginBase.Location"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.EditorDocumentViewMarginLocation.Top">
            <summary>
            Specifies an <see cref="T:Infragistics.Controls.Editors.MarginBase"/> location that is on the top of the <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>.
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>
            <seealso cref="P:Infragistics.Controls.Editors.MarginBase.Location"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.EditorDocumentViewMarginLocation.Right">
            <summary>
            Specifies an <see cref="T:Infragistics.Controls.Editors.MarginBase"/> location that is on the right side of the <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>.
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>
            <seealso cref="P:Infragistics.Controls.Editors.MarginBase.Location"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.EditorDocumentViewMarginLocation.Bottom">
            <summary>
            Specifies an <see cref="T:Infragistics.Controls.Editors.MarginBase"/> location that is on the bottom of the <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>.
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>
            <seealso cref="P:Infragistics.Controls.Editors.MarginBase.Location"/>
        </member>
        <member name="T:Infragistics.Controls.Editors.EditorDocumentViewLayoutChangeType">
            <summary>
            Specifies the type of change that occurred to a <see cref="T:Infragistics.Controls.Editors.DocumentViewLine"/> during the last layout pass.
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.DocumentViewLine"/>
            <seealso cref="T:Infragistics.Controls.Editors.DocumentViewLayoutChangedEventArgs"/>
            <seealso cref="E:Infragistics.Controls.Editors.DocumentViewBase.LayoutChanged"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.EditorDocumentViewLayoutChangeType.None">
            <summary>
            Specifies that no change occurred to the <see cref="T:Infragistics.Controls.Editors.DocumentViewLine"/> during the last layout pass.
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.DocumentViewLine"/>
            <seealso cref="T:Infragistics.Controls.Editors.DocumentViewLayoutChangedEventArgs"/>
            <seealso cref="E:Infragistics.Controls.Editors.DocumentViewBase.LayoutChanged"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.EditorDocumentViewLayoutChangeType.NewOrReformatted">
            <summary>
            Specifies that the <see cref="T:Infragistics.Controls.Editors.DocumentViewLine"/> was added or reformatted during the last layout pass.
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.DocumentViewLine"/>
            <seealso cref="P:Infragistics.Controls.Editors.DocumentViewLayoutChangedEventArgs.NewOrReformattedLines"/>
            <seealso cref="E:Infragistics.Controls.Editors.DocumentViewBase.LayoutChanged"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.EditorDocumentViewLayoutChangeType.Deleted">
            <summary>
            Specifies that the <see cref="T:Infragistics.Controls.Editors.DocumentViewLine"/> was deleted during the last layout pass.
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.DocumentViewLine"/>
            <seealso cref="P:Infragistics.Controls.Editors.DocumentViewLayoutChangedEventArgs.DeletedLines"/>
            <seealso cref="E:Infragistics.Controls.Editors.DocumentViewBase.LayoutChanged"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.EditorDocumentViewLayoutChangeType.Translated">
            <summary>
            Specifies that the <see cref="T:Infragistics.Controls.Editors.DocumentViewLine"/> was translated during the last layout pass.
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.DocumentViewLine"/>
            <seealso cref="P:Infragistics.Controls.Editors.DocumentViewLayoutChangedEventArgs.TranslatedLines"/>
            <seealso cref="E:Infragistics.Controls.Editors.DocumentViewBase.LayoutChanged"/>
        </member>
        <member name="T:Infragistics.Controls.Editors.EditorDocumentViewTextUpdateMode">
            <summary>
            Specifies how new text should be applied to a <see cref="T:Infragistics.Documents.TextDocument"/>.
            </summary>
            <seealso cref="T:Infragistics.Documents.TextDocument"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.TextUpdateMode"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.EditorDocumentViewTextUpdateMode.Insert">
            <summary>
            Specifies that new text should be inserted at the current cursor position.
            </summary>
            <seealso cref="T:Infragistics.Documents.TextDocument"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.TextUpdateMode"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.EditorDocumentViewTextUpdateMode.Overwrite">
            <summary>
            Specifies that new text should overwrite the text at the current cursor position.
            </summary>
            <seealso cref="T:Infragistics.Documents.TextDocument"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.TextUpdateMode"/>
        </member>
        <member name="T:Infragistics.Controls.Editors.SyntaxEditorCommandType">
            <summary>
            An enumeration of available commands for the <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/> object.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.Cut">
            <summary>
            Cuts the currently selected text to the clipboard. 
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.Copy"/>
            <seealso cref="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.Paste"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.ActiveDocumentView"/>
            <seealso cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.SelectionManager"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.Copy">
            <summary>
            Copies the currently selected text to the clipboard. 
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.Cut"/>
            <seealso cref="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.Paste"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.ActiveDocumentView"/>
            <seealso cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.SelectionManager"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.Paste">
            <summary>
            Pastes the current clipboard text at the current insertion point. 
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.Cut"/>
            <seealso cref="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.Copy"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.ActiveDocumentView"/>
            <seealso cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.SelectionManager"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.Undo">
            <summary>
            Undo the last edit activity.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.Redo"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.Redo">
            <summary>
            Redo the last undone edit activity.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.Undo"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.SplitEditAreaVertically">
            <summary>
            Split the editing area vertically, creating two <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>s in the editing area of the control separated by a vertical splitter. 
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitStatus"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitOptions"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.SplitEditAreaHorizontally">
            <summary>
            Split the editing area horizontally, creating two <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>s in the editing area of the control separated by a horizontal splitter. 
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitStatus"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitOptions"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.RemoveSplitFromEditArea">
            <summary>
            Remove the split from the editing area - a single <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/> will occupy the entire editing area of the control. 
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitStatus"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitOptions"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.AllowEditAreaVerticalSplits">
            <summary>
            Display a mini-splitter that allows the editing area to be split vertically, creating two <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>s in the editing area of the control separated by a vertical splitter. 
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitStatus"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitOptions"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.AllowEditAreaHorizontalSplits">
            <summary>
            Display a mini-splitter that allows the editing area to be split horizontally, creating two <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>s in the editing area of the control separated by a horizontal splitter. 
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitStatus"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitOptions"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.AllowEditAreaVerticalAndHorizontalSplits">
            <summary>
            Display a mini-splitter that allows the editing area to be split vertically and horizontally, creating two <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>s in the editing area of the control separated by either a horizontal or verticalsplitter. 
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitStatus"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitOptions"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.DoNotAllowEditAreaSplitting">
            <summary>
            Do not display a mini-splitter that allows the editing area to be split into multiple views - a single <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/> always occupies the entire editing area of the control. 
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitStatus"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitOptions"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.IncreaseIndent">
            <summary>
            Increases the indent level of the line(s) containing the current selection or Caret position so that the line begins at the nearest tabstop position following the current line start position.
            </summary>
            <seealso cref="P:Infragistics.Documents.TextDocument.TabExtent"/>
            <seealso cref="P:Infragistics.Documents.TextDocument.TabEntryBehavior"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.AcceptsTab"/>
            <seealso cref="M:Infragistics.Controls.Editors.ViewSelectionManager.IncreaseIndent"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.DecreaseIndent">
            <summary>
            Decreases the indent level of the line(s) containing the current selection or Caret position so that the line begins at the nearest tabstop position preceding the current line start position.
            </summary>
            <seealso cref="P:Infragistics.Documents.TextDocument.TabExtent"/>
            <seealso cref="P:Infragistics.Documents.TextDocument.TabEntryBehavior"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.AcceptsTab"/>
            <seealso cref="M:Infragistics.Controls.Editors.ViewSelectionManager.DecreaseIndent"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.ConvertToLowercase">
            <summary>
            Converts the currently selected text to lowercase.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.SelectionManager"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectedText"/>
            <seealso cref="M:Infragistics.Controls.Editors.ViewSelectionManager.ConvertToLowercase"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.ConvertToUppercase">
            <summary>
            Converts the currently selected text to uppercase.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.SelectionManager"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectedText"/>
            <seealso cref="M:Infragistics.Controls.Editors.ViewSelectionManager.ConvertToUppercase"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.DeleteCurrentCharacter">
            <summary>
            Deletes the character at the <see cref="T:Infragistics.Controls.Editors.Caret"/> location.  If there is an active selection, the selected text is deleted.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.SelectionManager"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectedText"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.Caret"/>
            <seealso cref="M:Infragistics.Controls.Editors.ViewSelectionManager.DeleteCurrentCharacter"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.DeletePreviousCharacter">
            <summary>
            Deletes the character preceeding the <see cref="T:Infragistics.Controls.Editors.Caret"/> location.  If there is an active selection, the selected text is deleted.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.SelectionManager"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectedText"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.Caret"/>
            <seealso cref="M:Infragistics.Controls.Editors.ViewSelectionManager.DeletePreviousCharacter"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.DeleteToBeginningOfCurrentWord">
            <summary>
            Deletes all text from the <see cref="T:Infragistics.Controls.Editors.Caret"/> location to the beginning of the current word 
            (if the Caret is in the middle of a word), or deletes the previous word if the Caret is at 
            the beginning of a word.  If there is an active selection, the selected text is deleted.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.SelectionManager"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectedText"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.Caret"/>
            <seealso cref="M:Infragistics.Controls.Editors.ViewSelectionManager.DeleteToBeginningOfCurrentWord"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.DeleteToEndOfCurrentWord">
            <summary>
            Deletes all text from the <see cref="T:Infragistics.Controls.Editors.Caret"/> location to the end of the current word.  If 
            there is an active selection, the selected text is deleted.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.SelectionManager"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectedText"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.Caret"/>
            <seealso cref="M:Infragistics.Controls.Editors.ViewSelectionManager.DeleteToEndOfCurrentWord"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.MoveDown">
            <summary>
            Moves the <see cref="T:Infragistics.Controls.Editors.Caret"/> down one line.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.SelectionManager"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.Caret"/>
            <seealso cref="M:Infragistics.Controls.Editors.ViewSelectionManager.MoveDown"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.MovePageDown">
            <summary>
            Moves the <see cref="T:Infragistics.Controls.Editors.Caret"/> down one page.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.SelectionManager"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.Caret"/>
            <seealso cref="M:Infragistics.Controls.Editors.ViewSelectionManager.MovePageDown"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.MovePageUp">
            <summary>
            Moves the <see cref="T:Infragistics.Controls.Editors.Caret"/> up one page.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.SelectionManager"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.Caret"/>
            <seealso cref="M:Infragistics.Controls.Editors.ViewSelectionManager.MovePageDown"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.MoveToBottomOfPage">
            <summary>
            Moves the <see cref="T:Infragistics.Controls.Editors.Caret"/> to the last line on the current page.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.SelectionManager"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.Caret"/>
            <seealso cref="M:Infragistics.Controls.Editors.ViewSelectionManager.MoveToBottomOfPage"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.MoveToNextCharacter">
            <summary>
            Moves the <see cref="T:Infragistics.Controls.Editors.Caret"/> to the next character position.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.SelectionManager"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.Caret"/>
            <seealso cref="M:Infragistics.Controls.Editors.ViewSelectionManager.MoveToNextCharacter"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.MoveToNextWord">
            <summary>
            Moves the <see cref="T:Infragistics.Controls.Editors.Caret"/> to the next word.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.SelectionManager"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.Caret"/>
            <seealso cref="M:Infragistics.Controls.Editors.ViewSelectionManager.MoveToNextWord"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.MoveToPreviousCharacter">
            <summary>
            Moves the <see cref="T:Infragistics.Controls.Editors.Caret"/> to the previous character position.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.SelectionManager"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.Caret"/>
            <seealso cref="M:Infragistics.Controls.Editors.ViewSelectionManager.MoveToPreviousCharacter"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.MoveToPreviousWord">
            <summary>
            Moves the <see cref="T:Infragistics.Controls.Editors.Caret"/> to the previous word.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.SelectionManager"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.Caret"/>
            <seealso cref="M:Infragistics.Controls.Editors.ViewSelectionManager.MoveToPreviousWord"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.MoveToEndOfDocument">
            <summary>
            Moves the <see cref="T:Infragistics.Controls.Editors.Caret"/> to the end of the <see cref="T:Infragistics.Documents.TextDocument"/>.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.SelectionManager"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.Caret"/>
            <seealso cref="M:Infragistics.Controls.Editors.ViewSelectionManager.MoveToEndOfDocument"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.MoveToEndOfLine">
            <summary>
            Moves the <see cref="T:Infragistics.Controls.Editors.Caret"/> to the end of the line containing the <see cref="T:Infragistics.Controls.Editors.Caret"/>.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.SelectionManager"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.Caret"/>
            <seealso cref="M:Infragistics.Controls.Editors.ViewSelectionManager.MoveToEndOfLine"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.MoveToFirstNonWhitespaceOnLine">
            <summary>
            Moves the <see cref="T:Infragistics.Controls.Editors.Caret"/> to the first non-whitespace character on the line containing the <see cref="T:Infragistics.Controls.Editors.Caret"/>.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.SelectionManager"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.Caret"/>
            <seealso cref="M:Infragistics.Controls.Editors.ViewSelectionManager.MoveToFirstNonWhitespaceOnLine"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.MoveToStartOfDocument">
            <summary>
            Moves the <see cref="T:Infragistics.Controls.Editors.Caret"/> to the start of the <see cref="T:Infragistics.Documents.TextDocument"/>.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.SelectionManager"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.Caret"/>
            <seealso cref="M:Infragistics.Controls.Editors.ViewSelectionManager.MoveToStartOfDocument"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.MoveToStartOfLine">
            <summary>
            Moves the <see cref="T:Infragistics.Controls.Editors.Caret"/> to the start of the line containing the <see cref="T:Infragistics.Controls.Editors.Caret"/>.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.SelectionManager"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.Caret"/>
            <seealso cref="M:Infragistics.Controls.Editors.ViewSelectionManager.MoveToStartOfLine"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.MoveToTopOfPage">
            <summary>
            Moves the <see cref="T:Infragistics.Controls.Editors.Caret"/> to the first line on the current page.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.SelectionManager"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.Caret"/>
            <seealso cref="M:Infragistics.Controls.Editors.ViewSelectionManager.MoveToTopOfPage"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.MoveUp">
            <summary>
            Moves the <see cref="T:Infragistics.Controls.Editors.Caret"/> up one line.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.SelectionManager"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.Caret"/>
            <seealso cref="M:Infragistics.Controls.Editors.ViewSelectionManager.MoveUp"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.SelectDown">
            <summary>
            Moves the <see cref="T:Infragistics.Controls.Editors.Caret"/> down one line, selecting all text in between the start and end position.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.SelectionManager"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.Caret"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionStart"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionEnd"/>
            <seealso cref="M:Infragistics.Controls.Editors.ViewSelectionManager.SelectDown"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.SelectNextCharacter">
            <summary>
            Moves the selection end point one character position to the right.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.SelectionManager"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.Caret"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionStart"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionEnd"/>
            <seealso cref="M:Infragistics.Controls.Editors.ViewSelectionManager.SelectNextCharacter"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.SelectNextWord">
            <summary>
            Moves the selection end point one word to the right.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.SelectionManager"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.Caret"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionStart"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionEnd"/>
            <seealso cref="M:Infragistics.Controls.Editors.ViewSelectionManager.SelectNextWord"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.SelectPageDown">
            <summary>
            Extends the selection down one page.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.SelectionManager"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.Caret"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionStart"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionEnd"/>
            <seealso cref="M:Infragistics.Controls.Editors.ViewSelectionManager.SelectPageDown"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.SelectPageUp">
            <summary>
            Extends the selection up one page.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.SelectionManager"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.Caret"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionStart"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionEnd"/>
            <seealso cref="M:Infragistics.Controls.Editors.ViewSelectionManager.SelectPageUp"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.SelectPreviousCharacter">
            <summary>
            Moves the selection end point one character position to the left.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.SelectionManager"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.Caret"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionStart"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionEnd"/>
            <seealso cref="M:Infragistics.Controls.Editors.ViewSelectionManager.SelectPreviousCharacter"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.SelectPreviousWord">
            <summary>
            Moves the selection end point one word to the left.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.SelectionManager"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.Caret"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionStart"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionEnd"/>
            <seealso cref="M:Infragistics.Controls.Editors.ViewSelectionManager.SelectPreviousWord"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.SelectToBottomOfPage">
            <summary>
            Extends the selection to the bottom of the current page.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.SelectionManager"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.Caret"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionStart"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionEnd"/>
            <seealso cref="M:Infragistics.Controls.Editors.ViewSelectionManager.SelectToBottomOfPage"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.SelectToEndOfDocument">
            <summary>
            Extends the current selection to the end of the <see cref="T:Infragistics.Documents.TextDocument"/>.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.SelectionManager"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.Caret"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionStart"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionEnd"/>
            <seealso cref="M:Infragistics.Controls.Editors.ViewSelectionManager.SelectToEndOfDocument"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.SelectToEndOfLine">
            <summary>
            Extends the current selection to the end of the line containing the <see cref="T:Infragistics.Controls.Editors.Caret"/>.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.SelectionManager"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.Caret"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionStart"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionEnd"/>
            <seealso cref="M:Infragistics.Controls.Editors.ViewSelectionManager.SelectToEndOfLine"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.SelectToFirstNonWhitespaceOnLine">
            <summary>
            Extends the current selection to the first non-whitespace character on the line containing the Caret.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.SelectionManager"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.Caret"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionStart"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionEnd"/>
            <seealso cref="M:Infragistics.Controls.Editors.ViewSelectionManager.SelectToFirstNonWhitespaceOnLine"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.SelectToStartOfDocument">
            <summary>
            Extends the current selection to the start of the document.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.SelectionManager"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.Caret"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionStart"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionEnd"/>
            <seealso cref="M:Infragistics.Controls.Editors.ViewSelectionManager.SelectToStartOfDocument"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.SelectToStartOfLine">
            <summary>
            Extends the current selection to the start of the line containing the <see cref="T:Infragistics.Controls.Editors.Caret"/>.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.SelectionManager"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.Caret"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionStart"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionEnd"/>
            <seealso cref="M:Infragistics.Controls.Editors.ViewSelectionManager.SelectToStartOfLine"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.SelectToTopOfPage">
            <summary>
            Extends the selection to the top of the current page.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.SelectionManager"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.Caret"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionStart"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionEnd"/>
            <seealso cref="M:Infragistics.Controls.Editors.ViewSelectionManager.SelectToTopOfPage"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.SelectUp">
            <summary>
            Moves the <see cref="T:Infragistics.Controls.Editors.Caret"/> up one line, selecting all text in between the start and end position.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.SelectionManager"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.Caret"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionStart"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionEnd"/>
            <seealso cref="M:Infragistics.Controls.Editors.ViewSelectionManager.SelectUp"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.ToggleWhitespaceVisibility">
            <summary>
            Toggles the visibility of the whitespace indicators.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.WhitespaceIndicatorVisibility"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.ToggleCurrentLineHighlightVisibility">
            <summary>
            Toggles the visibility of the current line highlight.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.CurrentLineHighlightVisibility"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorCommandType.ToggleRulerMarginVisibility">
            <summary>
            Toggles the visibility of the <see cref="T:Infragistics.Controls.Editors.RulerMargin"/>.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.IsRulerMarginVisible"/>
            <seealso cref="T:Infragistics.Controls.Editors.RulerMargin"/>
        </member>
        <member name="T:Infragistics.Controls.Editors.SyntaxEditorDataFormats">
            <summary>
            Specifies the data formats supported when dragging a selection.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxEditorDataFormats.Text">
            <summary>
            Specifies the standard ANSI text format.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.SyntaxErrorDisplayMode">
            <summary>
            Specifies the options for when to display error squigglies under text that violates the <see cref="T:Infragistics.Documents.TextDocument"/>'s <see cref="T:Infragistics.Documents.Parsing.LanguageBase">Language</see> grammar rules.
            </summary>
            <seealso cref="T:Infragistics.Documents.TextDocument"/>
            <seealso cref="T:Infragistics.Documents.Parsing.LanguageBase">Language</seealso>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.ErrorDisplayMode"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxErrorDisplayMode.Always">
            <summary>
            Always display error squigglies under text that violates the <see cref="T:Infragistics.Documents.TextDocument"/>'s <see cref="T:Infragistics.Documents.Parsing.LanguageBase">Language</see> grammar rules.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxErrorDisplayMode.Never">
            <summary>
            Never display error squigglies under text that violates the <see cref="T:Infragistics.Documents.TextDocument"/>'s <see cref="T:Infragistics.Documents.Parsing.LanguageBase">Language</see> grammar rules.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.SyntaxErrorDisplayMode.EditableDocumentsOnly">
            <summary>
            Only display error squigglies under text that violates the <see cref="T:Infragistics.Documents.TextDocument"/>'s <see cref="T:Infragistics.Documents.Parsing.LanguageBase">Language</see> grammar rules if the document is modifiable.
            </summary>
            <seealso cref="P:Infragistics.Documents.TextDocument.IsReadOnly"/>
        </member>
        <member name="T:Infragistics.Controls.Editors.ActiveDocumentViewChangedEventArgs">
            <summary>
            Class that defines the arguments passed in the <see cref="E:Infragistics.Controls.Editors.XamSyntaxEditor.ActiveDocumentViewChanged"/> event.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ActiveDocumentViewChangedEventArgs.#ctor(Infragistics.Controls.Editors.DocumentViewBase,Infragistics.Controls.Editors.DocumentViewBase)">
            <summary>
            Constructor.
            </summary>
            <param name="oldDocumentView">An <see cref="T:Infragistics.Controls.Editors.DocumentViewBase"/> that represents the previous view.</param>
            <param name="newDocumentView">An <see cref="T:Infragistics.Controls.Editors.DocumentViewBase"/> that represents the new view.</param>
        </member>
        <member name="P:Infragistics.Controls.Editors.ActiveDocumentViewChangedEventArgs.NewDocumentView">
            <summary>
            Returns the new active <see cref="T:Infragistics.Controls.Editors.DocumentViewBase"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.ActiveDocumentViewChangedEventArgs.OldDocumentView">
            <summary>
            Returns the new active <see cref="T:Infragistics.Controls.Editors.DocumentViewBase"/>.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.ClipboardOperationExecutingEventArgs">
            <summary>
            Class that defines the arguments passed in the <see cref="E:Infragistics.Controls.Editors.XamSyntaxEditor.ClipboardOperationExecuting"/> event.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.ClipboardOperationExecutingEventArgs.ClipboardOperation"/>
            <seealso cref="E:Infragistics.Controls.Editors.XamSyntaxEditor.ClipboardOperationExecuting"/>
            <seealso cref="E:Infragistics.Controls.Editors.XamSyntaxEditor.ClipboardOperationExecuted"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.ClipboardOperationExecutingEventArgs.#ctor(Infragistics.Controls.Editors.ClipboardOperation,Infragistics.Controls.Editors.Primitives.SyntaxEditorDataObject)">
            <summary>
            Constructor.
            </summary>
            <param name="clipboardOperation">The <see cref="P:Infragistics.Controls.Editors.ClipboardOperationExecutingEventArgs.ClipboardOperation"/> that describes the action being executed with the Clipboard.</param>
            <param name="dataObject">The <see cref="T:Infragistics.Controls.Editors.Primitives.SyntaxEditorDataObject"/> that contains the data which is being dragged.</param>
        </member>
        <member name="P:Infragistics.Controls.Editors.ClipboardOperationExecutingEventArgs.ClipboardOperation">
            <summary>
            Returns the <see cref="P:Infragistics.Controls.Editors.ClipboardOperationExecutingEventArgs.ClipboardOperation"/> that describes the action being executed with the Clipboard.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.ClipboardOperationExecutingEventArgs.ClipboardOperation"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.ClipboardOperationExecutingEventArgs.DataObject">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Editors.Primitives.SyntaxEditorDataObject"/> that contains the data being used in the clipboard operation.
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.Primitives.SyntaxEditorDataObject"/>
        </member>
        <member name="T:Infragistics.Controls.Editors.ClipboardOperationExecutedEventArgs">
            <summary>
            Class that defines the arguments passed in the <see cref="E:Infragistics.Controls.Editors.XamSyntaxEditor.ClipboardOperationExecuted"/> event.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.ClipboardOperationExecutedEventArgs.ClipboardOperation"/>
            <seealso cref="E:Infragistics.Controls.Editors.XamSyntaxEditor.ClipboardOperationExecuting"/>
            <seealso cref="E:Infragistics.Controls.Editors.XamSyntaxEditor.ClipboardOperationExecuted"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.ClipboardOperationExecutedEventArgs.#ctor(Infragistics.Controls.Editors.ClipboardOperation,Infragistics.Controls.Editors.Primitives.SyntaxEditorDataObject)">
            <summary>
            Constructor.
            </summary>
            <param name="clipboardOperation">The <see cref="P:Infragistics.Controls.Editors.ClipboardOperationExecutedEventArgs.ClipboardOperation"/> that describes the action being executed with the Clipboard.</param>
            <param name="dataObject">The <see cref="T:Infragistics.Controls.Editors.Primitives.SyntaxEditorDataObject"/> that contains the data which is being dragged.</param>
        </member>
        <member name="P:Infragistics.Controls.Editors.ClipboardOperationExecutedEventArgs.ClipboardOperation">
            <summary>
            Returns the <see cref="P:Infragistics.Controls.Editors.ClipboardOperationExecutedEventArgs.ClipboardOperation"/> that describes the action being executed with the Clipboard.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.ClipboardOperationExecutedEventArgs.ClipboardOperation"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.ClipboardOperationExecutedEventArgs.DataObject">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Editors.Primitives.SyntaxEditorDataObject"/> that contains the data being used in the clipboard operation.
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.Primitives.SyntaxEditorDataObject"/>
        </member>
        <member name="T:Infragistics.Controls.Editors.DocumentChangedEventArgs">
            <summary>
            Class that defines the arguments passed in the <see cref="E:Infragistics.Controls.Editors.XamSyntaxEditor.DocumentChanged"/> event.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.DocumentChangedEventArgs.#ctor(Infragistics.Documents.TextDocument,Infragistics.Documents.TextDocument)">
            <summary>
            Constructor.
            </summary>
            <param name="oldDocument">A <see cref="T:Infragistics.Documents.TextDocument"/> that represents the previous document.</param>
            <param name="newDocument">A <see cref="T:Infragistics.Documents.TextDocument"/> that represents the new document.</param>
        </member>
        <member name="P:Infragistics.Controls.Editors.DocumentChangedEventArgs.NewDocument">
            <summary>
            Returns the new <see cref="T:Infragistics.Documents.TextDocument"/> being edited.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.DocumentChangedEventArgs.OldDocument">
            <summary>
            Returns the previous <see cref="T:Infragistics.Documents.TextDocument"/> being edited.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.DocumentViewLayoutChangedEventArgs">
            <summary>
            Class that defines the arguments passed in the <see cref="E:Infragistics.Controls.Editors.DocumentViewBase.LayoutChanged"/> event.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.DocumentViewLayoutChangedEventArgs.#ctor(System.Collections.Generic.IEnumerable{Infragistics.Controls.Editors.DocumentViewLine},System.Collections.Generic.IEnumerable{Infragistics.Controls.Editors.DocumentViewLine},System.Collections.Generic.IEnumerable{Infragistics.Controls.Editors.DocumentViewLine})">
            <summary>
            Constructor
            </summary>
            <param name="newOrReformattedLines">An enumerable that returns a list of new and/or reformatted <see cref="T:Infragistics.Controls.Editors.DocumentViewLine"/>s.</param>
            <param name="deletedLines">An enumerable that returns a list of deleted <see cref="T:Infragistics.Controls.Editors.DocumentViewLine"/>s</param>
            <param name="translatedLines">An enumerable that returns a list of translated (moved) <see cref="T:Infragistics.Controls.Editors.DocumentViewLine"/>s</param>
        </member>
        <member name="P:Infragistics.Controls.Editors.DocumentViewLayoutChangedEventArgs.DeletedLines">
            <summary>
            Returns an enumerable of the <see cref="T:Infragistics.Controls.Editors.DocumentViewLine"/>s that were deleted when the layout of the lines in the <see cref="T:Infragistics.Controls.Editors.DocumentViewBase"/> changed.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.DocumentViewLayoutChangedEventArgs.NewOrReformattedLines">
            <summary>
            Returns an enumerable of the <see cref="T:Infragistics.Controls.Editors.DocumentViewLine"/>s that were added or reformatted when the layout of the lines in the <see cref="T:Infragistics.Controls.Editors.DocumentViewBase"/> changed.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.DocumentViewLayoutChangedEventArgs.TranslatedLines">
            <summary>
            Returns an enumerable of the <see cref="T:Infragistics.Controls.Editors.DocumentViewLine"/>s that were translated (moved) when the layout of the lines in the <see cref="T:Infragistics.Controls.Editors.DocumentViewBase"/> changed.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.SyntaxEditorSelectionChangedEventArgs">
            <summary>
            Class that defines the arguments passed in the <see cref="E:Infragistics.Controls.Editors.XamSyntaxEditor.SelectionChanged"/> event.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.SyntaxEditorSelectionChangedEventArgs.#ctor(Infragistics.Controls.Editors.EditorDocumentView)">
            <summary>
            Constructor.
            </summary>
            <param name="documentView">The <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/> whose selection has changed.</param>
        </member>
        <member name="P:Infragistics.Controls.Editors.SyntaxEditorSelectionChangedEventArgs.DocumentView">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/> whose selection has changed.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.SelectionDraggingEventArgs">
            <summary>
            Class that defines the arguments passed in the <see cref="E:Infragistics.Controls.Editors.XamSyntaxEditor.SelectionDragging"/> event.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.SelectionDraggingEventArgs.#ctor(Infragistics.Controls.Editors.EditorDocumentView,Infragistics.Controls.Editors.Primitives.SyntaxEditorDataObject)">
            <summary>
            Constructor.
            </summary>
            <param name="documentView">The <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/> whose selection is being dragged.</param>
            <param name="dataObject">The <see cref="T:Infragistics.Controls.Editors.Primitives.SyntaxEditorDataObject"/> that contains the data which is being dragged.</param>
        </member>
        <member name="P:Infragistics.Controls.Editors.SelectionDraggingEventArgs.Cancel">
            <summary>
            Returns/sets whether the action that triggered the event should be canceled.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.SelectionDraggingEventArgs.DataObject">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Editors.Primitives.SyntaxEditorDataObject"/> that contains the data which is being dragged.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.SelectionDraggingEventArgs.DocumentView">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/> whose selection is being dragged.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.SelectionDroppingEventArgs">
            <summary>
            Class that defines the arguments passed in the <see cref="E:Infragistics.Controls.Editors.XamSyntaxEditor.SelectionDropping"/> event.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.SelectionDroppingEventArgs.#ctor(Infragistics.Controls.Editors.EditorDocumentView,Infragistics.Controls.Editors.Primitives.SyntaxEditorDataObject,Infragistics.Documents.SnapshotPoint,System.Boolean,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="documentView">The <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/> into which data is being dropped.</param>
            <param name="dataObject">The <see cref="T:Infragistics.Controls.Editors.Primitives.SyntaxEditorDataObject"/> that contains the data which is being dragged.</param>
            <param name="dropPoint">The <see cref="T:Infragistics.Documents.SnapshotPoint"/> that identifies the location in the <see cref="T:Infragistics.Documents.TextDocument"/> where the data is being inserted.</param>
            <param name="isDragSourceExternal">True if the source of the drag operation is external, false if the source of the drag operation is the <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/>).</param>
            <param name="isOperationMove">True if the data is being moved, false if the data is being copied (only has meaning if 'isDragSourceExternal' is false).</param>
        </member>
        <member name="P:Infragistics.Controls.Editors.SelectionDroppingEventArgs.Cancel">
            <summary>
            Returns/sets whether the action that triggered the event should be canceled.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.SelectionDroppingEventArgs.DataObject">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Editors.Primitives.SyntaxEditorDataObject"/> that contains the data which is being dropped.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.SelectionDroppingEventArgs.DocumentView">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/> into which data is being dropped.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.SelectionDroppingEventArgs.DropPoint">
            <summary>
            Returns the <see cref="T:Infragistics.Documents.SnapshotPoint"/> that identifies the location in the <see cref="T:Infragistics.Documents.TextDocument"/> where the data is being inserted.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.SelectionDroppingEventArgs.IsDragSourceExternal">
            <summary>
            Returns true if the source of the drag operation is external, false if the source of the drag operation is the <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.SelectionDroppingEventArgs.IsOperationMove">
            <summary>
            Returns true if the data is being moved, false if the data is being copied (only has meaning if <see cref="P:Infragistics.Controls.Editors.SelectionDroppingEventArgs.IsDragSourceExternal"/> is false).
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.SplitStatusChangedEventArgs">
            <summary>
            Class that defines the arguments passed in the <see cref="E:Infragistics.Controls.Editors.XamSyntaxEditor.SplitStatusChanged"/> event.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.SplitStatusChangedEventArgs.#ctor(Infragistics.Controls.Editors.EditorDocumentViewSplitStatus,Infragistics.Controls.Editors.EditorDocumentViewSplitStatus)">
            <summary>
            Constructor.
            </summary>
            <param name="oldSplitStatus">The old <see cref="T:Infragistics.Controls.Editors.EditorDocumentViewSplitStatus"/>.</param>
            <param name="newSplitStatus">The new <see cref="T:Infragistics.Controls.Editors.EditorDocumentViewSplitStatus"/>.</param>
        </member>
        <member name="P:Infragistics.Controls.Editors.SplitStatusChangedEventArgs.NewSplitStatus">
            <summary>
            Returns the new <see cref="T:Infragistics.Controls.Editors.EditorDocumentViewSplitStatus"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.SplitStatusChangedEventArgs.OldSplitStatus">
            <summary>
            Returns the old <see cref="T:Infragistics.Controls.Editors.EditorDocumentViewSplitStatus"/>.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.ViewEventArgs">
            <summary>
            Class that defines the arguments passed in the <see cref="E:Infragistics.Controls.Editors.XamSyntaxEditor.ViewLoaded"/> and <see cref="E:Infragistics.Controls.Editors.XamSyntaxEditor.ViewUnloaded"/> events.
            </summary>
            <seealso cref="E:Infragistics.Controls.Editors.XamSyntaxEditor.ViewLoaded"/>
            <seealso cref="E:Infragistics.Controls.Editors.XamSyntaxEditor.ViewUnloaded"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.ViewEventArgs.#ctor(Infragistics.Controls.Editors.DocumentViewBase)">
            <summary>
            Constructor.
            </summary>
            <param name="documentView">The <see cref="T:Infragistics.Controls.Editors.DocumentViewBase"/> associated with the event.</param>
        </member>
        <member name="P:Infragistics.Controls.Editors.ViewEventArgs.DocumentView">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Editors.DocumentViewBase"/> associated with the event.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.ScrollManager">
            <summary>
            A class that manages scrolling for an <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>.
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.ScrollManager.ScrollLineUp">
            <summary>
            Scrolls the <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/> up by one line.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ScrollManager.ScrollLinesUp(System.Int32)">
            <summary>
            Scrolls the <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/> up by the specified number of lines.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ScrollManager.ScrollLineDown">
            <summary>
            Scrolls the <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/> down by one line.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ScrollManager.ScrollLinesDown(System.Int32)">
            <summary>
            Scrolls the <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/> down by the specified number of lines.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ScrollManager.ScrollPageUp">
            <summary>
            Scrolls the <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/> up by one page.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ScrollManager.ScrollPageDown">
            <summary>
            Scrolls the <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/> down by one page.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.ViewSelectionManager">
            <summary>
            A class that manages the selection for an <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/> and exposes properties that allow the selection to be queried and manipulated.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectedText">
            <summary>
            Returns/sets the text included in the current selection.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionStart"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionStartNormalized"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionEnd"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionEndNormalized"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionLength"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionEnd">
            <summary>
            Returns/sets the <see cref="T:Infragistics.Documents.SnapshotPoint"/> that represents the end of the selection.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionEndNormalized"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionStart"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionStartNormalized"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectedText"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionLength"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionEndNormalized">
            <summary>
            Returns the <see cref="T:Infragistics.Documents.SnapshotPoint"/> that represents the end of the selection after normalization. (read only)
            </summary>
            <remarks>
            Normalization ensures that <see cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionStartNormalized"/> represents a <see cref="T:Infragistics.Documents.SnapshotPoint"/> 
            in the document that occurs before <see cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionEndNormalized"/>, regardless of whether the same is
            true for the <see cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionStart"/> and <see cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionEnd"/> properties which represent the 
            raw starting and ending points of the selection.  
            </remarks>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionEnd"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionStart"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionStartNormalized"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectedText"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionLength"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionLength">
            <summary>
            Returns the length of the current selection. (read only)
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionStart"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionStartNormalized"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionEnd"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionEndNormalized"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectedText"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionLength"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionStart">
            <summary>
            Returns/sets the <see cref="T:Infragistics.Documents.SnapshotPoint"/> that represents the start of the selection.
            </summary>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionEndNormalized"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionEnd"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionStartNormalized"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectedText"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionLength"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionStartNormalized">
            <summary>
            Returns the <see cref="T:Infragistics.Documents.SnapshotPoint"/> that represents the start of the selection after normalization. (read only)
            </summary>
            <remarks>
            Normalization ensures that <see cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionStartNormalized"/> represents a <see cref="T:Infragistics.Documents.SnapshotPoint"/> 
            in the document that occurs before <see cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionEndNormalized"/>, regardless of whether the same is
            true for the <see cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionStart"/> and <see cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionEnd"/> properties which represent the 
            raw starting and ending points of the selection.  
            </remarks>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionEndNormalized"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionEnd"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionStart"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectedText"/>
            <seealso cref="P:Infragistics.Controls.Editors.ViewSelectionManager.SelectionLength"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.ViewSelectionManager.ConvertToLowercase">
            <summary>
            Converts the currently selected text to lowercase.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ViewSelectionManager.ConvertToUppercase">
            <summary>
            Converts the currently selected text to uppercase..
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ViewSelectionManager.Copy">
            <summary>
            Copies the currently selected text to the clipboard. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ViewSelectionManager.Cut">
            <summary>
            Cuts the currently selected text to the clipboard. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ViewSelectionManager.DecreaseIndent">
            <summary>
            Decreases the indent level of the line(s) containing the current selection or Caret position so that the line begins at the nearest tabstop position preceding the current line start position.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ViewSelectionManager.DeleteCurrentCharacter">
            <summary>
            Deletes the character at the <see cref="T:Infragistics.Controls.Editors.Caret"/> location.  If there is an active selection, the selected text is deleted.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ViewSelectionManager.DeletePreviousCharacter">
            <summary>
            Deletes the character preceeding the <see cref="T:Infragistics.Controls.Editors.Caret"/> location.  If there is an active selection, the selected text is deleted.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ViewSelectionManager.DeleteToBeginningOfCurrentWord">
            <summary>
            Deletes all text from the <see cref="T:Infragistics.Controls.Editors.Caret"/> location to the beginning of the current word 
            (if the Caret is in the middle of a word), or deletes the previous word if the Caret is at 
            the beginning of a word.  If there is an active selection, the selected text is deleted.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ViewSelectionManager.DeleteToEndOfCurrentWord">
            <summary>
            Deletes all text from the <see cref="T:Infragistics.Controls.Editors.Caret"/> location to the end of the current word.  If 
            there is an active selection, the selected text is deleted.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ViewSelectionManager.IncreaseIndent">
            <summary>
            Increases the indent level of the line(s) containing the current selection or Caret position so that the line begins at the nearest tabstop position following the current line start position.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ViewSelectionManager.MoveDown">
            <summary>
            Moves the <see cref="T:Infragistics.Controls.Editors.Caret"/> down one line.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ViewSelectionManager.MovePageDown">
            <summary>
            Moves the <see cref="T:Infragistics.Controls.Editors.Caret"/> down one page.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ViewSelectionManager.MovePageUp">
            <summary>
            Moves the <see cref="T:Infragistics.Controls.Editors.Caret"/> up one page.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ViewSelectionManager.MoveToBottomOfPage">
            <summary>
            Moves the <see cref="T:Infragistics.Controls.Editors.Caret"/> to the last line on the current page.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ViewSelectionManager.MoveToNextCharacter">
            <summary>
            Moves the <see cref="T:Infragistics.Controls.Editors.Caret"/> to the next character position.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ViewSelectionManager.MoveToNextWord">
            <summary>
            Moves the <see cref="T:Infragistics.Controls.Editors.Caret"/> to the next word.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ViewSelectionManager.MoveToPreviousCharacter">
            <summary>
            Moves the <see cref="T:Infragistics.Controls.Editors.Caret"/> to the previous character position.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ViewSelectionManager.MoveToPreviousWord">
            <summary>
            Moves the <see cref="T:Infragistics.Controls.Editors.Caret"/> to the previous word.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ViewSelectionManager.MoveToEndOfDocument">
            <summary>
            Moves the <see cref="T:Infragistics.Controls.Editors.Caret"/> to the end of the <see cref="T:Infragistics.Documents.TextDocument"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ViewSelectionManager.MoveToEndOfLine">
            <summary>
            Moves the <see cref="T:Infragistics.Controls.Editors.Caret"/> to the end of the line containing the <see cref="T:Infragistics.Controls.Editors.Caret"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ViewSelectionManager.MoveToFirstNonWhitespaceOnLine">
            <summary>
            Moves the <see cref="T:Infragistics.Controls.Editors.Caret"/> to the first non-whitespace character on the line containing the <see cref="T:Infragistics.Controls.Editors.Caret"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ViewSelectionManager.MoveToStartOfDocument">
            <summary>
            Moves the <see cref="T:Infragistics.Controls.Editors.Caret"/> to the start of the <see cref="T:Infragistics.Documents.TextDocument"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ViewSelectionManager.MoveToStartOfLine">
            <summary>
            Moves the <see cref="T:Infragistics.Controls.Editors.Caret"/> to the start of the line containing the <see cref="T:Infragistics.Controls.Editors.Caret"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ViewSelectionManager.MoveToTopOfPage">
            <summary>
            Moves the <see cref="T:Infragistics.Controls.Editors.Caret"/> to the first line on the current page.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ViewSelectionManager.MoveUp">
            <summary>
            Moves the <see cref="T:Infragistics.Controls.Editors.Caret"/> up one line.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ViewSelectionManager.Paste">
            <summary>
            Paste the current clipboard text at the current <see cref="T:Infragistics.Controls.Editors.Caret"/> position.  If there is an active selection, the selection is replaced with the clipboard text.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ViewSelectionManager.Redo">
            <summary>
            Redo the last undone edit activity.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ViewSelectionManager.SelectDown">
            <summary>
            Moves the <see cref="T:Infragistics.Controls.Editors.Caret"/> down one line, selecting all text in between the start and end position.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ViewSelectionManager.SelectLine">
            <summary>
            Select the entire line containing the <see cref="T:Infragistics.Controls.Editors.Caret"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ViewSelectionManager.SelectNextCharacter">
            <summary>
            Moves the selection end point one character position to the right.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ViewSelectionManager.SelectNextWord">
            <summary>
            Moves the selection end point one word to the right.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ViewSelectionManager.SelectPageDown">
            <summary>
            Extends the selection down one page.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ViewSelectionManager.SelectPageUp">
            <summary>
            Extends the selection up one page.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ViewSelectionManager.SelectPreviousCharacter">
            <summary>
            Moves the selection end point one character position to the left.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ViewSelectionManager.SelectPreviousWord">
            <summary>
            Moves the selection end point one word to the left.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ViewSelectionManager.SelectToBottomOfPage">
            <summary>
            Extends the selection to the bottom of the current page.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ViewSelectionManager.SelectToEndOfDocument">
            <summary>
            Extends the current selection to the end of the <see cref="T:Infragistics.Documents.TextDocument"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ViewSelectionManager.SelectToEndOfLine">
            <summary>
            Extends the current selection to the end of the line containing the <see cref="T:Infragistics.Controls.Editors.Caret"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ViewSelectionManager.SelectToFirstNonWhitespaceOnLine">
            <summary>
            Extends the current selection to the first non-whitespace character on the line containing the Caret.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ViewSelectionManager.SelectToStartOfDocument">
            <summary>
            Extends the current selection to the start of the document.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ViewSelectionManager.SelectToStartOfLine">
            <summary>
            Extends the current selection to the start of the line containing the <see cref="T:Infragistics.Controls.Editors.Caret"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ViewSelectionManager.SelectToTopOfPage">
            <summary>
            Extends the selection to the top of the current page.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ViewSelectionManager.SelectUp">
            <summary>
            Moves the <see cref="T:Infragistics.Controls.Editors.Caret"/> up one line, selecting all text in between the start and end position.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ViewSelectionManager.Undo">
            <summary>
            Undo the last edit activity.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Editors.ViewSelectionManager.PropertyChanged">
            <summary>
            Event raised when a property on the object changes.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.ClassificationAppearanceTag">
            <summary>
            Class that inherits from <see cref="T:Infragistics.Documents.Tagging.ClassificationTag"/> and adds a property that exposes a <see cref="P:Infragistics.Controls.Editors.ClassificationAppearanceTag.ClassificationAppearanceMap"/>
            </summary>
            <seealso cref="T:Infragistics.Documents.Tagging.ClassificationTag"/>
            <seealso cref="P:Infragistics.Controls.Editors.ClassificationAppearanceTag.ClassificationAppearanceMap"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.ClassificationAppearanceTag.#ctor(Infragistics.Documents.ClassificationType,Infragistics.Controls.Editors.ClassificationAppearanceMap)">
            <summary>
            Constructor
            </summary>
            <param name="classificationType">The <see cref="T:Infragistics.Documents.ClassificationType"/> associated with this <see cref="T:Infragistics.Documents.Tagging.ClassificationTag"/></param>
            <param name="classificationAppearanceMap">The <see cref="P:Infragistics.Controls.Editors.ClassificationAppearanceTag.ClassificationAppearanceMap"/> that should be used when applying the <see cref="T:Infragistics.Documents.ClassificationType"/> associated with this <see cref="T:Infragistics.Documents.Tagging.ClassificationTag"/></param>
        </member>
        <member name="P:Infragistics.Controls.Editors.ClassificationAppearanceTag.ClassificationAppearanceMap">
            <summary>
            Returns the <see cref="P:Infragistics.Controls.Editors.ClassificationAppearanceTag.ClassificationAppearanceMap"/> that should be used when applying the <see cref="T:Infragistics.Documents.ClassificationType"/> associated with this <see cref="T:Infragistics.Documents.Tagging.ClassificationTag"/> (read only)
            </summary>
            <seealso cref="T:Infragistics.Documents.Tagging.ClassificationTag"/>
            <seealso cref="P:Infragistics.Controls.Editors.ClassificationAppearanceTag.ClassificationAppearanceMap"/>
        </member>
        <member name="T:Infragistics.Controls.Editors.XamSyntaxEditor">
            <summary>
            A control that provides text editing and syntax highlighting functionality based on robust document and syntax parsing frameworks.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSyntaxEditor.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSyntaxEditor.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures child elements
            </summary>
            <param name="availableSize">The size available for child elements.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSyntaxEditor.OnApplyTemplate">
            <summary>
            Called when a new template is applied. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSyntaxEditor.OnCreateAutomationPeer">
            <summary>
            Returns an automation peer that exposes the <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/> to UI Automation.
            </summary>
            <returns>A <see cref="T:Infragistics.AutomationPeers.XamSyntaxEditorAutomationPeer"/></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSyntaxEditor.OnDragEnter(System.Windows.DragEventArgs)">
            <summary>
            Invoked when an unhandled System.Windows.DragDrop.DragEnter attached event reaches an element in its route that is derived from this class. 
            </summary>
            <param name="e">The System.Windows.DragEventArgs that contains the event data.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSyntaxEditor.OnDragLeave(System.Windows.DragEventArgs)">
            <summary>
            Invoked when an unhandled System.Windows.DragDrop.DragLeave attached event reaches an element in its route that is derived from this class.
            </summary>
            <param name="e">The System.Windows.DragEventArgs that contains the event data.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSyntaxEditor.OnDragOver(System.Windows.DragEventArgs)">
            <summary>
            Invoked when an unhandled System.Windows.DragDrop.DragOver attached event reaches an element in its route that is derived from this class. 
            </summary>
            <param name="e">The System.Windows.DragEventArgs that contains the event data.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSyntaxEditor.OnDrop(System.Windows.DragEventArgs)">
            <summary>
            Invoked when an unhandled System.Windows.DragDrop.DragEnter attached event reaches an element in its route that is derived from this class. 
            </summary>
            <param name="e">The System.Windows.DragEventArgs that contains the event data.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSyntaxEditor.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)">
            <summary>
            Invoked when an unhandled System.Windows.DragDrop.QueryContinueDrag attached event reaches an element in its route that is derived from this class.
            </summary>
            <param name="e">The System.Windows.QueryContinueDragEventArgs that contains the event data</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSyntaxEditor.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Called when the element receives focus.
            </summary>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSyntaxEditor.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
            <summary>
            Called when the element receives keyboard focus.
            </summary>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSyntaxEditor.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            Called when the MouseWheel is rotated.
            </summary>
            <param name="e">The data associated with the event</param>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSyntaxEditor.AcceptsTabProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.AcceptsTab"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSyntaxEditor.AcceptsTab">
            <summary>
            Returns/sets whether the Tab key is processed by the control to insert/remove tabs to control the indentation of text.  The default is true.
            </summary>
            <remarks>
            <para class="body">When set to false the control will not process the Tab key allowing focus to be shifted to the next control in the tab order.</para>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.XamSyntaxEditor.AcceptsTabProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSyntaxEditor.ActiveDocumentViewPropertyKey">
            <summary>
            Identifies the property key for read-only <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.ActiveDocumentView"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSyntaxEditor.ActiveDocumentViewProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.ActiveDocumentView"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSyntaxEditor.ActiveDocumentView">
            <summary>
            Returns the current active <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/> (read only).
            </summary>
            <remarks>
            <para class="body">The active <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/> is the view with the keyboard focus.</para>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.XamSyntaxEditor.ActiveDocumentViewProperty"/>
            <seealso cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>
            <seealso cref="T:Infragistics.Controls.Editors.DocumentViewBase"/>
            <seealso cref="T:Infragistics.Controls.Editors.EditorDocumentViewLocation"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitOptions"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitStatus"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSyntaxEditor.AllowDragProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.AllowDrag"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSyntaxEditor.AllowDrag">
            <summary>
            Returns/sets whether the control allows selected text to be dragged.
            </summary>
            <remarks>
            <para class="body">When set to false the control will not allow selected text to be dragged within the control or outside the control.</para>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.XamSyntaxEditor.AllowDragProperty"/>
            <seealso cref="P:System.Windows.UIElement.AllowDrop"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSyntaxEditor.CaretPropertyKey">
            <summary>
            Identifies the property key for read-only <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.Caret"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSyntaxEditor.CaretProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.Caret"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSyntaxEditor.Caret">
            <summary>
            Returns the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.Caret"/> associated with the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.ActiveDocumentView"/> (read only).
            </summary>
            <remarks>
            <para class="body">The <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.ActiveDocumentView"/>  is the <see cref="T:Infragistics.Controls.Editors.DocumentViewBase"/> with the keyboard focus.</para>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.XamSyntaxEditor.CaretProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.ActiveDocumentView"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.Caret"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSyntaxEditor.CaretBrushProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.CaretBrush"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSyntaxEditor.CaretBrush">
            <summary>
            Returns/sets the Brush used to color the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.Caret"/>.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.XamSyntaxEditor.CaretBrushProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.Caret"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSyntaxEditor.ClassificationAppearanceMapProperty">
            <summary>
            Identifies the <see cref="T:Infragistics.Controls.Editors.ClassificationAppearanceMap"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSyntaxEditor.ClassificationAppearanceMap">
            <summary>
            Returns/sets a custom <see cref="T:Infragistics.Controls.Editors.ClassificationAppearanceMap"/> to be used when assigning <see cref="T:Infragistics.Controls.Editors.TextDocumentAppearance"/>s to classified text.
            </summary>
            <remarks>
            <para class="body">The default value of this property is null.  When this property is set, the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.ClassificationAppearanceMapResolved"/> property is updated with its value.</para>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.XamSyntaxEditor.ClassificationAppearanceMapProperty"/>
            <seealso cref="T:Infragistics.Controls.Editors.ClassificationAppearanceMap"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.ClassificationAppearanceMapResolved"/>
            <seealso cref="T:Infragistics.Documents.ClassificationType"/>
            <seealso cref="T:Infragistics.Controls.Editors.TextDocumentAppearance"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSyntaxEditor.ClassificationAppearanceMapResolvedProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.ClassificationAppearanceMapResolved"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSyntaxEditor.ClassificationAppearanceMapResolved">
            <summary>
            Returns the value of the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.ClassificationAppearanceMap"/> property if it has been set, otherwise returns a default <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.ClassificationAppearanceMap"/> (read-only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.XamSyntaxEditor.ClassificationAppearanceMapResolvedProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.ClassificationAppearanceMap"/>
            <seealso cref="T:Infragistics.Controls.Editors.TextDocumentAppearance"/>
            <seealso cref="T:Infragistics.Documents.ClassificationType"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSyntaxEditor.CurrentLineHighlightBackgroundBrushProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.CurrentLineHighlightBackgroundBrush"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSyntaxEditor.CurrentLineHighlightBackgroundBrush">
            <summary>
            Returns/sets the Brush used to highlight the background of the current line (i.e., the line containing the Caret). 
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.XamSyntaxEditor.CurrentLineHighlightBackgroundBrushProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.CurrentLineHighlightVisibility"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.CurrentLineHighlightBorderBrush"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSyntaxEditor.CurrentLineHighlightBorderBrushProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.CurrentLineHighlightBorderBrush"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSyntaxEditor.CurrentLineHighlightBorderBrush">
            <summary>
            Returns/sets the Brush used to highlight the border of the area behind the current line (i.e., the line conatining the Caret). 
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.XamSyntaxEditor.CurrentLineHighlightBorderBrushProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.CurrentLineHighlightVisibility"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.CurrentLineHighlightBackgroundBrush"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSyntaxEditor.CurrentLineHighlightVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.CurrentLineHighlightVisibility"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSyntaxEditor.CurrentLineHighlightVisibility">
            <summary>
            Returns/sets whether a highlight is rendered behind the current line (i.e., the line containing the Caret). 
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.XamSyntaxEditor.CurrentLineHighlightVisibilityProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.WhitespaceIndicatorBrush"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSyntaxEditor.CustomMargins">
            <summary>
            Returns the collection of custom Margins displayed by each <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/> (read only).
            </summary>
            <remarks>
            <para class="body">Custom Margins are classes that derive from the abstract base class <see cref="T:Infragistics.Controls.Editors.MarginBase"/>.  This
            collection only contains the custom Margins you create and add to the collection.  The built-in Margins are created automatically
            by the control, and you can control whether or not they appear using their associated 'IsVisible' properties.</para>
            </remarks>
            <seealso cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>
            <seealso cref="T:Infragistics.Controls.Editors.MarginBase"/>
            <seealso cref="T:Infragistics.Controls.Editors.EditorDocumentViewMarginLocation"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.IsLineNumberMarginVisible"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSyntaxEditor.DocumentProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.Document"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSyntaxEditor.Document">
            <summary>
            Returns/sets the <see cref="T:Infragistics.Documents.TextDocument"/> being edited by the <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/>.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.XamSyntaxEditor.DocumentProperty"/>
            <seealso cref="T:Infragistics.Documents.TextDocument"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSyntaxEditor.ErrorDisplayModeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.ErrorDisplayMode"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSyntaxEditor.ErrorDisplayMode">
            <summary>
            Returns/sets whether the control displays error squigglies under text that violates the <see cref="T:Infragistics.Documents.TextDocument"/>'s <see cref="T:Infragistics.Documents.Parsing.LanguageBase">Language</see> grammar rules.
            </summary>
            <remarks>
            <para class="body">When set to false the control will not allow selected text to be dragged within the control or outside the control.</para>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.XamSyntaxEditor.ErrorDisplayModeProperty"/>
            <seealso cref="T:Infragistics.Controls.Editors.SyntaxErrorDisplayMode"/>
            <seealso cref="T:Infragistics.Documents.TextDocument"/>
            <seealso cref="P:Infragistics.Documents.TextDocument.IsReadOnly"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSyntaxEditor.InactiveDocumentViewPropertyKey">
            <summary>
            Identifies the property key for read-only <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.InactiveDocumentView"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSyntaxEditor.InactiveDocumentViewProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.InactiveDocumentView"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSyntaxEditor.InactiveDocumentView">
            <summary>
            Returns the current inactive <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>, or null if there is no inactive view (read only).
            </summary>
            <remarks>
            <para class="body">The active <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/> is the view with the keyboard focus.  An additional view can be created by splitting the active view.</para>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.XamSyntaxEditor.InactiveDocumentViewProperty"/>
            <seealso cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>
            <seealso cref="T:Infragistics.Controls.Editors.DocumentViewBase"/>
            <seealso cref="T:Infragistics.Controls.Editors.EditorDocumentViewLocation"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitOptions"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitStatus"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSyntaxEditor.IsLineNumberMarginVisibleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.IsLineNumberMarginVisible"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSyntaxEditor.IsLineNumberMarginVisible">
            <summary>
            Returns/sets whether line numbers are displayed in the left Margin for every document line.  The default is true.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.XamSyntaxEditor.IsLineNumberMarginVisibleProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSyntaxEditor.IsRulerMarginVisibleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.IsRulerMarginVisible"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSyntaxEditor.IsRulerMarginVisible">
            <summary>
            Returns/sets whether a column positions ruler is displayed in the top Margin.  The default is false.
            </summary>
            <remarks>
            <para class="body">The ruler displays tick marks for each display column.  The width of the display columns is based on the average width of 
            a character rendered with the current font.  As a result, the ruler is only useful when the <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/> is using a fixed
            width font.  In fact, if you choose to display the ruler when the control is using a proportional font, the ruler's column positions will not 
            align with the character positions in the text.</para>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.XamSyntaxEditor.IsRulerMarginVisibleProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSyntaxEditor.LineNumberMarginBackgroundProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.LineNumberMarginBackground"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSyntaxEditor.LineNumberMarginBackground">
            <summary>
            Returns/sets the Brush used to render the background of the <see cref="T:Infragistics.Controls.Editors.LineNumberMargin"/>.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.XamSyntaxEditor.LineNumberMarginBackgroundProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.LineNumberMarginForeground"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.LineNumberMarginFontFamily"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.LineNumberMarginFontWeight"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.LineNumberMarginFontStyle"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.IsLineNumberMarginVisible"/>
            <seealso cref="T:Infragistics.Controls.Editors.LineNumberMargin"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSyntaxEditor.LineNumberMarginForegroundProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.LineNumberMarginForeground"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSyntaxEditor.LineNumberMarginForeground">
            <summary>
            Returns/sets the Brush used to render the Foreground of the <see cref="T:Infragistics.Controls.Editors.LineNumberMargin"/>.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.XamSyntaxEditor.LineNumberMarginForegroundProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.LineNumberMarginBackground"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.LineNumberMarginFontFamily"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.LineNumberMarginFontWeight"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.LineNumberMarginFontStyle"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.IsLineNumberMarginVisible"/>
            <seealso cref="T:Infragistics.Controls.Editors.LineNumberMargin"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSyntaxEditor.LineNumberMarginFontFamilyProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.LineNumberMarginFontFamily"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSyntaxEditor.LineNumberMarginFontFamily">
            <summary>
            Returns/sets the the FontFamily used by the <see cref="T:Infragistics.Controls.Editors.LineNumberMargin"/>.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.XamSyntaxEditor.LineNumberMarginFontFamilyProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.LineNumberMarginBackground"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.LineNumberMarginForeground"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.LineNumberMarginFontWeight"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.LineNumberMarginFontStyle"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.IsLineNumberMarginVisible"/>
            <seealso cref="T:Infragistics.Controls.Editors.LineNumberMargin"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSyntaxEditor.LineNumberMarginFontStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.LineNumberMarginFontStyle"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSyntaxEditor.LineNumberMarginFontStyle">
            <summary>
            Returns/sets the the FontFamily used by the <see cref="T:Infragistics.Controls.Editors.LineNumberMargin"/>.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.XamSyntaxEditor.LineNumberMarginFontStyleProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.LineNumberMarginBackground"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.LineNumberMarginForeground"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.LineNumberMarginFontWeight"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.LineNumberMarginFontFamily"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.IsLineNumberMarginVisible"/>
            <seealso cref="T:Infragistics.Controls.Editors.LineNumberMargin"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSyntaxEditor.LineNumberMarginFontWeightProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.LineNumberMarginFontWeight"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSyntaxEditor.LineNumberMarginFontWeight">
            <summary>
            Returns/sets the the FontFamily used by the <see cref="T:Infragistics.Controls.Editors.LineNumberMargin"/>.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.XamSyntaxEditor.LineNumberMarginFontWeightProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.LineNumberMarginBackground"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.LineNumberMarginForeground"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.LineNumberMarginFontStyle"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.LineNumberMarginFontFamily"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.IsLineNumberMarginVisible"/>
            <seealso cref="T:Infragistics.Controls.Editors.LineNumberMargin"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSyntaxEditor.RulerMarginBackgroundProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.RulerMarginBackground"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSyntaxEditor.RulerMarginBackground">
            <summary>
            Returns/sets the Brush used to render the background of the <see cref="T:Infragistics.Controls.Editors.RulerMargin"/>.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.XamSyntaxEditor.RulerMarginBackgroundProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.RulerMarginBorderBrush"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.RulerMarginTickMarkBrush"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.RulerMarginCaretPositionHighlightBrush"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.RulerMarginTextBrush"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.IsRulerMarginVisible"/>
            <seealso cref="T:Infragistics.Controls.Editors.RulerMargin"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSyntaxEditor.RulerMarginBorderBrushProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.RulerMarginBorderBrush"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSyntaxEditor.RulerMarginBorderBrush">
            <summary>
            Returns/sets the Brush used to render the border of the <see cref="T:Infragistics.Controls.Editors.RulerMargin"/>.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.XamSyntaxEditor.RulerMarginBorderBrushProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.RulerMarginBackground"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.RulerMarginTickMarkBrush"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.RulerMarginCaretPositionHighlightBrush"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.RulerMarginTextBrush"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.IsRulerMarginVisible"/>
            <seealso cref="T:Infragistics.Controls.Editors.RulerMargin"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSyntaxEditor.RulerMarginTickMarkBrushProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.RulerMarginTickMarkBrush"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSyntaxEditor.RulerMarginTickMarkBrush">
            <summary>
            Returns/sets the Brush used to render the tick marks of the <see cref="T:Infragistics.Controls.Editors.RulerMargin"/>.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.XamSyntaxEditor.RulerMarginTickMarkBrushProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.RulerMarginBackground"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.RulerMarginBorderBrush"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.RulerMarginCaretPositionHighlightBrush"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.RulerMarginTextBrush"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.IsRulerMarginVisible"/>
            <seealso cref="T:Infragistics.Controls.Editors.RulerMargin"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSyntaxEditor.RulerMarginCaretPositionHighlightBrushProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.RulerMarginCaretPositionHighlightBrush"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSyntaxEditor.RulerMarginCaretPositionHighlightBrush">
            <summary>
            Returns/sets the Brush used to render the tick mark and highlight indicator in the <see cref="T:Infragistics.Controls.Editors.RulerMargin"/> that corresponds to the current <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.Caret"/> position.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.XamSyntaxEditor.RulerMarginCaretPositionHighlightBrushProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.RulerMarginBackground"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.RulerMarginBorderBrush"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.RulerMarginTickMarkBrush"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.RulerMarginTextBrush"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.IsRulerMarginVisible"/>
            <seealso cref="T:Infragistics.Controls.Editors.RulerMargin"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSyntaxEditor.RulerMarginTextBrushProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.RulerMarginTextBrush"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSyntaxEditor.RulerMarginTextBrush">
            <summary>
            Returns/sets the Brush used to render the text labels in the <see cref="T:Infragistics.Controls.Editors.RulerMargin"/>.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.XamSyntaxEditor.RulerMarginTextBrushProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.RulerMarginBackground"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.RulerMarginBorderBrush"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.RulerMarginTickMarkBrush"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.RulerMarginCaretPositionHighlightBrush"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.IsRulerMarginVisible"/>
            <seealso cref="T:Infragistics.Controls.Editors.RulerMargin"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSyntaxEditor.SelectionHighlightActiveBrushProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SelectionHighlightActiveBrush"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSyntaxEditor.SelectionHighlightActiveBrush">
            <summary>
            Returns/sets the Brush used to color the selection highlight when the view containting the selection is active.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.XamSyntaxEditor.SelectionHighlightActiveBrushProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.ActiveDocumentView"/>
            <seealso cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.SelectionManager"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSyntaxEditor.SelectionHighlightInactiveBrushProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SelectionHighlightInactiveBrush"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSyntaxEditor.SelectionHighlightInactiveBrush">
            <summary>
            Returns/sets the Brush used to color the selection highlight when the view containting the selection is inactive.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.XamSyntaxEditor.SelectionHighlightInactiveBrushProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.ActiveDocumentView"/>
            <seealso cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.SelectionManager"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSyntaxEditor.SplitOptionsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitOptions"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitOptions">
            <summary>
            Returns/sets whether mini-splitters are displayed in the scrollbar areas to allow the end user to split the editing area of the control.  The default is <see cref="F:Infragistics.Controls.Editors.EditorDocumentViewSplitOptions.AllowVerticalAndHorizontalSplits"/>.
            </summary>
            <remarks>
            <para class="note">
            <b>Note:</b> This property only controls whether the end user can split the editing area (via the mini splitters in the scrollbar areas) and does not affect the ability to programmatically split the editing area by setting the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitStatus"/> property.
            </para>
            <para class="note">
            <b>Note:</b> If the <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/> is placed in a container element that measures its children with an infinite height
            or width (e.g., a StackPanel), then certain settings of this property will be considered 'invalid' and will be resolved to an appropriate
            setting. For example, if the <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/> is placed in a StackPanel with vertical orientation and this property is set 
            to <see cref="F:Infragistics.Controls.Editors.EditorDocumentViewSplitOptions.AllowHorizontalSplitsOnly"/>, it will be resolved to <see cref="F:Infragistics.Controls.Editors.EditorDocumentViewSplitOptions.SplittingNotAllowed"/>
            </para>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.XamSyntaxEditor.SplitOptionsProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitStatus"/>
            <seealso cref="T:Infragistics.Controls.Editors.EditorDocumentViewSplitOptions"/>
            <seealso cref="T:Infragistics.Controls.Editors.EditorDocumentViewLocation"/>
            <seealso cref="E:Infragistics.Controls.Editors.XamSyntaxEditor.SplitStatusChanged"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSyntaxEditor.SplitStatusProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitStatus"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitStatus">
            <summary>
            Returns/sets whether the editing area of the control is split horizontally or vertically to display an additional <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>.  The default is <see cref="F:Infragistics.Controls.Editors.EditorDocumentViewSplitStatus.NotSplit"/>.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.XamSyntaxEditor.SplitStatusProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitOptions"/>
            <seealso cref="T:Infragistics.Controls.Editors.EditorDocumentViewSplitStatus"/>
            <seealso cref="T:Infragistics.Controls.Editors.EditorDocumentViewLocation"/>
            <seealso cref="E:Infragistics.Controls.Editors.XamSyntaxEditor.SplitStatusChanged"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSyntaxEditor.TextUpdateModeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.TextUpdateMode"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSyntaxEditor.TextUpdateMode">
            <summary>
            Returns/sets how new text should be applied to a <see cref="T:Infragistics.Documents.TextDocument"/>.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.XamSyntaxEditor.TextUpdateModeProperty"/>
            <seealso cref="T:Infragistics.Controls.Editors.EditorDocumentViewTextUpdateMode"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSyntaxEditor.WhitespaceIndicatorBrushProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.WhitespaceIndicatorBrush"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSyntaxEditor.WhitespaceIndicatorBrush">
            <summary>
            Returns/sets the Brush used to color the indicators which are rendered to highlight the presence of whitespace (i.e., tabs and spaces) in the document text. 
            </summary>
            <remarks>
            This property defaults to null.  Refer to the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.WhitespaceIndicatorBrushResolved"/> property to see how the final color for rendering the 
            whitespace indicators is determined.
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.XamSyntaxEditor.WhitespaceIndicatorBrushProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.WhitespaceIndicatorVisibility"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.WhitespaceIndicatorBrushResolved"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSyntaxEditor.WhitespaceIndicatorBrushResolvedPropertyKey">
            <summary>
            Identifies the property key for read-only <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.WhitespaceIndicatorBrushResolved"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSyntaxEditor.WhitespaceIndicatorBrushResolvedProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.WhitespaceIndicatorBrushResolved"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSyntaxEditor.WhitespaceIndicatorBrushResolved">
            <summary>
            Returns the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.WhitespaceIndicatorBrush"/> property if non-null, otherwise returns the Foreground color specified for 
            the <see cref="P:Infragistics.Documents.ClassificationType.Whitespace"/> entry in the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.ClassificationAppearanceMapResolved"/> (read only).
            </summary>
            <remarks>
            By default the whitespace indicators will be rendered using the Foreground brush specified for the <see cref="P:Infragistics.Documents.ClassificationType.Whitespace"/> entry in 
            the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.ClassificationAppearanceMapResolved"/> since the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.WhitespaceIndicatorBrush"/> property defaults to null.  
            However, when the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.WhitespaceIndicatorBrush"/> property is set to a non-null value it takes precedence and will be used to render the whitespace indicators. 
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.XamSyntaxEditor.WhitespaceIndicatorBrushResolvedProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.WhitespaceIndicatorBrush"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.WhitespaceIndicatorVisibility"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSyntaxEditor.WhitespaceIndicatorVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.WhitespaceIndicatorVisibility"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSyntaxEditor.WhitespaceIndicatorVisibility">
            <summary>
            Returns/sets whether indicators are rendered along with the document text to indicate the presence of whitespace (i.e., tabs and spaces).  The default is Collapsed.
            </summary>
            <seealso cref="F:Infragistics.Controls.Editors.XamSyntaxEditor.WhitespaceIndicatorVisibilityProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.WhitespaceIndicatorBrush"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSyntaxEditor.ZoomLevelProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.ZoomLevel"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSyntaxEditor.ZoomLevel">
            <summary>
            Returns/sets the zoom level for the text area of the control.  The text and all Margins are included in the zoom area - the scrollbars are not included.
            </summary>
            <remarks>
            <para class="note">
            <b>Note:</b> This value is expressed as a percentage with 1.0 being 100%.  Valid values are from .2 to 4.0.
            </para>
            <para class="body">
            To zoom the text area when running in the Browser (Silverlight or WPF) press the SHIFT key and scroll the mousewheel.  When running 
            outside the Browser press the CTRL key and scroll the mousewheel.
            </para>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.XamSyntaxEditor.ZoomLevelProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.ZoomLevelAsPercentage"/>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSyntaxEditor.ZoomLevelAsPercentageProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.ZoomLevelAsPercentage"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSyntaxEditor.ZoomLevelAsPercentage">
            <summary>
            Returns the value of the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.ZoomLevel"/> property expressed as a percentage. (read-only)
            </summary>
            <remarks>
            <para class="body">
            For example, if the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.ZoomLevel"/> is set to 1.0, this property will return 100.
            </para>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Editors.XamSyntaxEditor.ZoomLevelAsPercentageProperty"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.ZoomLevel"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSyntaxEditor.RegisterResources(System.String,System.Reflection.Assembly)">
            <summary>
            Adds an additonal Resx file in which the control will pull its resources from.
            </summary>
            <param name="name">The name of the embedded resx file that contains the resources to be used.</param>
            <param name="assembly">The assembly in which the resx file is embedded.</param>
            <remarks>Don't include the extension of the file, but prefix it with the default Namespace of the assembly.</remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSyntaxEditor.UnregisterResources(System.String)">
            <summary>
            Removes a previously registered resx file.
            </summary>
            <param name="name">The name of the embedded resx file that was used for registration.</param>
            <remarks>
            Note: this won't have any effect on controls that are already in view and are already displaying strings.
            It will only affect any new controls created.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSyntaxEditor.OnActiveDocumentViewChanged(Infragistics.Controls.Editors.ActiveDocumentViewChangedEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Controls.Editors.XamSyntaxEditor.ActiveDocumentViewChanged"/> event.
            </summary>
            <param name="args">Event args for raising the event.</param>
            <seealso cref="E:Infragistics.Controls.Editors.XamSyntaxEditor.ActiveDocumentViewChanged"/>
            <seealso cref="T:Infragistics.Controls.Editors.ActiveDocumentViewChangedEventArgs"/>
        </member>
        <member name="E:Infragistics.Controls.Editors.XamSyntaxEditor.ActiveDocumentViewChanged">
            <summary>
            Raised after the control's active <see cref="T:Infragistics.Controls.Editors.DocumentViewBase"/> is changed.
            </summary>
            <remarks>
            <para class="body">
            The active <see cref="T:Infragistics.Controls.Editors.DocumentViewBase"/> is the view that contains the keyboard focus.
            </para>
            </remarks>
            <seealso cref="T:Infragistics.Controls.Editors.ActiveDocumentViewChangedEventArgs"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.ActiveDocumentView"/>
            <seealso cref="T:Infragistics.Controls.Editors.DocumentViewBase"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSyntaxEditor.OnClipboardOperationExecuting(Infragistics.Controls.Editors.ClipboardOperationExecutingEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Controls.Editors.XamSyntaxEditor.ClipboardOperationExecuting"/> event.
            </summary>
            <param name="args">Event args for raising the event.</param>
            <seealso cref="E:Infragistics.Controls.Editors.XamSyntaxEditor.ClipboardOperationExecuting"/>
            <seealso cref="T:Infragistics.Controls.Editors.ClipboardOperationExecutingEventArgs"/>
        </member>
        <member name="E:Infragistics.Controls.Editors.XamSyntaxEditor.ClipboardOperationExecuting">
            <summary>
            Raised before a Clipboard operation (i.e., Cut, Copy or Paste) is executed.
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.ClipboardOperationExecutingEventArgs"/>
            <seealso cref="T:Infragistics.Controls.Editors.ClipboardOperation"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSyntaxEditor.OnClipboardOperationExecuted(Infragistics.Controls.Editors.ClipboardOperationExecutedEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Controls.Editors.XamSyntaxEditor.ClipboardOperationExecuted"/> event.
            </summary>
            <param name="args">Event args for raising the event.</param>
            <seealso cref="E:Infragistics.Controls.Editors.XamSyntaxEditor.ClipboardOperationExecuted"/>
            <seealso cref="T:Infragistics.Controls.Editors.ClipboardOperationExecutedEventArgs"/>
        </member>
        <member name="E:Infragistics.Controls.Editors.XamSyntaxEditor.ClipboardOperationExecuted">
            <summary>
            Raised before a Clipboard operation (i.e., Cut, Copy or Paste) is executed.
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.ClipboardOperationExecutedEventArgs"/>
            <seealso cref="T:Infragistics.Controls.Editors.ClipboardOperation"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSyntaxEditor.OnDocumentChanged(Infragistics.Controls.Editors.DocumentChangedEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Controls.Editors.XamSyntaxEditor.DocumentChanged"/> event.
            </summary>
            <param name="args">Event args for raising the event.</param>
            <seealso cref="E:Infragistics.Controls.Editors.XamSyntaxEditor.DocumentChanged"/>
            <seealso cref="T:Infragistics.Controls.Editors.DocumentChangedEventArgs"/>
        </member>
        <member name="E:Infragistics.Controls.Editors.XamSyntaxEditor.DocumentChanged">
            <summary>
            Raised after the <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/>'s document is changed.
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.DocumentChangedEventArgs"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.Document"/>
            <seealso cref="T:Infragistics.Documents.TextDocument"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSyntaxEditor.OnSelectionChanged(Infragistics.Controls.Editors.SyntaxEditorSelectionChangedEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Controls.Editors.XamSyntaxEditor.SelectionChanged"/> event.
            </summary>
            <param name="args">Event args for raising the event.</param>
            <seealso cref="E:Infragistics.Controls.Editors.XamSyntaxEditor.SelectionChanged"/>
            <seealso cref="T:Infragistics.Controls.Editors.SyntaxEditorSelectionChangedEventArgs"/>
        </member>
        <member name="E:Infragistics.Controls.Editors.XamSyntaxEditor.SelectionChanged">
            <summary>
            Raised after the <see cref="T:Infragistics.Controls.Editors.XamSyntaxEditor"/>'s Selection is changed.
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.SyntaxEditorSelectionChangedEventArgs"/>
            <seealso cref="P:Infragistics.Controls.Editors.EditorDocumentView.SelectionManager"/>
            <seealso cref="T:Infragistics.Controls.Editors.ViewSelectionManager"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSyntaxEditor.OnSelectionDragging(Infragistics.Controls.Editors.SelectionDraggingEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Controls.Editors.XamSyntaxEditor.SelectionDragging"/> event.
            </summary>
            <param name="args">Event args for raising the event.</param>
            <seealso cref="E:Infragistics.Controls.Editors.XamSyntaxEditor.SelectionDragging"/>
            <seealso cref="T:Infragistics.Controls.Editors.SelectionDraggingEventArgs"/>
        </member>
        <member name="E:Infragistics.Controls.Editors.XamSyntaxEditor.SelectionDragging">
            <summary>
            Raised when a drag of an <see cref="T:Infragistics.Controls.Editors.EditorDocumentView"/>'s Selection is beginning.
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.SelectionDraggingEventArgs"/>
            <seealso cref="E:Infragistics.Controls.Editors.XamSyntaxEditor.SelectionDropping"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.AllowDrag"/>
            <seealso cref="P:System.Windows.UIElement.AllowDrop"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSyntaxEditor.OnSelectionDropping(Infragistics.Controls.Editors.SelectionDroppingEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Controls.Editors.XamSyntaxEditor.SelectionDropping"/> event.
            </summary>
            <param name="args">Event args for raising the event.</param>
            <seealso cref="E:Infragistics.Controls.Editors.XamSyntaxEditor.SelectionDropping"/>
            <seealso cref="T:Infragistics.Controls.Editors.SelectionDroppingEventArgs"/>
        </member>
        <member name="E:Infragistics.Controls.Editors.XamSyntaxEditor.SelectionDropping">
            <summary>
            Raised when a drag is about to complete and the data is about to be dropped.
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.SelectionDroppingEventArgs"/>
            <seealso cref="E:Infragistics.Controls.Editors.XamSyntaxEditor.SelectionDragging"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.AllowDrag"/>
            <seealso cref="P:System.Windows.UIElement.AllowDrop"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSyntaxEditor.OnSplitStatusChanged(Infragistics.Controls.Editors.SplitStatusChangedEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Controls.Editors.XamSyntaxEditor.SplitStatusChanged"/> event.
            </summary>
            <param name="args">Event args for raising the event.</param>
            <seealso cref="E:Infragistics.Controls.Editors.XamSyntaxEditor.SplitStatusChanged"/>
            <seealso cref="T:Infragistics.Controls.Editors.SplitStatusChangedEventArgs"/>
        </member>
        <member name="E:Infragistics.Controls.Editors.XamSyntaxEditor.SplitStatusChanged">
            <summary>
            Raised after the <see cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitStatus"/> changes.
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.SplitStatusChangedEventArgs"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitStatus"/>
            <seealso cref="P:Infragistics.Controls.Editors.XamSyntaxEditor.SplitOptions"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSyntaxEditor.OnViewLoaded(Infragistics.Controls.Editors.ViewEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Controls.Editors.XamSyntaxEditor.ViewLoaded"/> event.
            </summary>
            <param name="args">Event args for raising the event.</param>
            <seealso cref="E:Infragistics.Controls.Editors.XamSyntaxEditor.ViewLoaded"/>
            <seealso cref="T:Infragistics.Controls.Editors.ViewEventArgs"/>
        </member>
        <member name="E:Infragistics.Controls.Editors.XamSyntaxEditor.ViewLoaded">
            <summary>
            Raised after a <see cref="T:Infragistics.Controls.Editors.DocumentViewBase"/> is loaded but before it is displayed.
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.ViewEventArgs"/>
            <seealso cref="T:Infragistics.Controls.Editors.DocumentViewBase"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSyntaxEditor.OnViewUnloaded(Infragistics.Controls.Editors.ViewEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Controls.Editors.XamSyntaxEditor.ViewUnloaded"/> event.
            </summary>
            <param name="args">Event args for raising the event.</param>
            <seealso cref="E:Infragistics.Controls.Editors.XamSyntaxEditor.ViewUnloaded"/>
            <seealso cref="T:Infragistics.Controls.Editors.ViewEventArgs"/>
        </member>
        <member name="E:Infragistics.Controls.Editors.XamSyntaxEditor.ViewUnloaded">
            <summary>
            Raised after a <see cref="T:Infragistics.Controls.Editors.DocumentViewBase"/> is unloaded.
            </summary>
            <seealso cref="T:Infragistics.Controls.Editors.ViewEventArgs"/>
            <seealso cref="T:Infragistics.Controls.Editors.DocumentViewBase"/>
        </member>
        <member name="T:Infragistics.Controls.Primitives.LayoutTransformer">
            <summary>
            Represents a control that applies a layout transformation to its Content.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:Infragistics.Controls.Primitives.LayoutTransformer.TransformRootName">
            <summary>
            Name of the TransformRoot template part.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Primitives.LayoutTransformer.PresenterName">
            <summary>
            Name of the Presenter template part.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.LayoutTransformer.LayoutTransform">
            <summary>
            Gets or sets the layout transform to apply on the LayoutTransformer 
            control content.
            </summary>
            <remarks>
            Corresponds to UIElement.LayoutTransform.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Primitives.LayoutTransformer.LayoutTransformProperty">
            <summary>
            Identifies the LayoutTransform DependencyProperty.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.LayoutTransformer.Child">
            <summary>
            Gets the child element being transformed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Primitives.LayoutTransformer.AcceptableDelta">
            <summary>
            Acceptable difference between two doubles.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Primitives.LayoutTransformer.DecimalsAfterRound">
            <summary>
            Number of decimals to round the Matrix to.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Primitives.LayoutTransformer._transformRoot">
            <summary>
            Root element for performing transformations.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Primitives.LayoutTransformer._contentPresenter">
            <summary>
            ContentPresenter element for displaying the content.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Primitives.LayoutTransformer._matrixTransform">
            <summary>
            RenderTransform/MatrixTransform applied to _transformRoot.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Primitives.LayoutTransformer._transformation">
            <summary>
            Transformation matrix corresponding to _matrixTransform.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Primitives.LayoutTransformer._childActualSize">
            <summary>
            Actual DesiredSize of Child element (the value it returned from its MeasureOverride method).
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Primitives.LayoutTransformer.#ctor">
            <summary>
            Initializes a new instance of the LayoutTransformer class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Primitives.LayoutTransformer.OnApplyTemplate">
            <summary>
            Builds the visual tree for the LayoutTransformer control when a new 
            template is applied.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Primitives.LayoutTransformer.LayoutTransformChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the Transform DependencyProperty.
            </summary>
            <param name="o">Source of the change.</param>
            <param name="e">Event args.</param>
        </member>
        <member name="M:Infragistics.Controls.Primitives.LayoutTransformer.ApplyLayoutTransform">
            <summary>
            Applies the layout transform on the LayoutTransformer control content.
            </summary>
            <remarks>
            Only used in advanced scenarios (like animating the LayoutTransform). 
            Should be used to notify the LayoutTransformer control that some aspect 
            of its Transform property has changed. 
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Primitives.LayoutTransformer.ProcessTransform(System.Windows.Media.Transform)">
            <summary>
            Processes the Transform to determine the corresponding Matrix.
            </summary>
            <param name="transform">Transform to process.</param>
        </member>
        <member name="M:Infragistics.Controls.Primitives.LayoutTransformer.GetTransformMatrix(System.Windows.Media.Transform)">
            <summary>
            Walks the Transform(Group) and returns the corresponding Matrix.
            </summary>
            <param name="transform">Transform(Group) to walk.</param>
            <returns>Computed Matrix.</returns>
        </member>
        <member name="M:Infragistics.Controls.Primitives.LayoutTransformer.MeasureOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the "Measure" pass of layout.
            </summary>
            <param name="availableSize">The available size that this element can give to child elements.</param>
            <returns>The size that this element determines it needs during layout, based on its calculations of child element sizes.</returns>
        </member>
        <member name="M:Infragistics.Controls.Primitives.LayoutTransformer.ArrangeOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the "Arrange" pass of layout.
            </summary>
            <param name="finalSize">The final area within the parent that this element should use to arrange itself and its children.</param>
            <returns>The actual size used.</returns>
            <remarks>
            Using the WPF paramater name finalSize instead of Silverlight's finalSize for clarity
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Primitives.LayoutTransformer.ComputeLargestTransformedSize(System.Windows.Size)">
            <summary>
            Compute the largest usable size (greatest area) after applying the transformation to the specified bounds.
            </summary>
            <param name="arrangeBounds">Arrange bounds.</param>
            <returns>Largest Size possible.</returns>
        </member>
        <member name="M:Infragistics.Controls.Primitives.LayoutTransformer.IsSizeSmaller(System.Windows.Size,System.Windows.Size)">
            <summary>
            Returns true if Size a is smaller than Size b in either dimension.
            </summary>
            <param name="a">Second Size.</param>
            <param name="b">First Size.</param>
            <returns>True if Size a is smaller than Size b in either dimension.</returns>
        </member>
        <member name="M:Infragistics.Controls.Primitives.LayoutTransformer.RoundMatrix(System.Windows.Media.Matrix,System.Int32)">
            <summary>
            Rounds the non-offset elements of a Matrix to avoid issues due to floating point imprecision.
            </summary>
            <param name="matrix">Matrix to round.</param>
            <param name="decimals">Number of decimal places to round to.</param>
            <returns>Rounded Matrix.</returns>
        </member>
        <member name="M:Infragistics.Controls.Primitives.LayoutTransformer.RectTransform(System.Windows.Rect,System.Windows.Media.Matrix)">
            <summary>
            Implements WPF's Rect.Transform on Silverlight.
            </summary>
            <param name="rect">Rect to transform.</param>
            <param name="matrix">Matrix to transform with.</param>
            <returns>Bounding box of transformed Rect.</returns>
        </member>
        <member name="M:Infragistics.Controls.Primitives.LayoutTransformer.MatrixMultiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
            <summary>
            Implements WPF's Matrix.Multiply on Silverlight.
            </summary>
            <param name="matrix1">First matrix.</param>
            <param name="matrix2">Second matrix.</param>
            <returns>Multiplication result.</returns>
        </member>
        <member name="M:Infragistics.Controls.Primitives.LayoutTransformer.MatrixHasInverse(System.Windows.Media.Matrix)">
            <summary>
            Implements WPF's Matrix.HasInverse on Silverlight.
            </summary>
            <param name="matrix">Matrix to check for inverse.</param>
            <returns>True if the Matrix has an inverse.</returns>
        </member>
        <member name="M:Infragistics.Controls.Primitives.LayoutTransformer.DiagnosticWriteLine(System.String)">
            <summary>
            Outputs diagnostic info if DIAGNOSTICWRITELINE is defined.
            </summary>
            <param name="message">Diagnostic message.</param>
        </member>
    </members>
</doc>
