<?xml version="1.0"?>
<doc>
    <assembly>
        <name>InfragisticsWPF4.DataPresenter.CalculationAdapter.v17.2</name>
    </assembly>
    <members>
        <member name="T:Infragistics.Windows.DataPresenter.Calculations.DataPresenterRefBase">
            <summary>
            Base class for all the UltraWinGrid reference implementations.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.DataPresenterRefBase.#ctor(Infragistics.Windows.DataPresenter.Calculations.DataPresenterReference,System.String,System.Object)">
            <summary>
            Constructor.
            </summary>
            <param name="rootReference">Data presenter root reference.</param>
            <param name="elementName">Element name.</param>
            <param name="context">Reference context.</param>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.DataPresenterRefBase.ParserInstanceVersion">
            <summary>
            Parsed references on rows, cells, rows collections and nested column references
            have to be recreated whenever their absolute names change due to a row getting
            inserted, deleted, the rows collection getting sorted or resynced. For example,
            When the first row is deleted from a rows collection then the next row's absolute
            name changes from //ultraGrid1/Customers(1) to //ultraGrid1/Customers(0). However
            the parsed reference as returned by RefBase.ParsedReference property is still 
            based on the old absolute name. So we need to recreate the parsed reference.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.DataPresenterRefBase.ParsedReference">
            <summary>
            Gets or Sets the parsed representation of this reference.  This returns the absolute reference name.  Use
            <b>RelativeReference</b> to get the parsed representation of the string used to create this reference if this 
            reference is UnAnchored.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.DataPresenterRefBase.FieldLayoutContext">
            <summary>
            Returns the context of a field layout if any. Cell, record, column, field layout references etc... all
            have the context of a field layout.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.DataPresenterRefBase.FieldContext">
            <summary>
            Returns the context of a field if any. Cell and field references etc... all
            have the context of a field.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.DataPresenterRefBase.CalcManager">
            <summary>
            Gets the calc manager.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.DataPresenterRefBase.NotifyCalcEngineValueChanged">
            <summary>
            Notifies the calc manager of the change in this reference' value.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.DataPresenterRefBase.Context">
            <summary>
            Returns the object associated with this references. Returns field for the field reference and cell for the cell reference etc...
            </summary>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.DataPresenterRefBase.ContainsReference(Infragistics.Calculations.Engine.ICalculationReference)">
            <summary>
            Returns true if this reference contains inReference
            </summary>
            <param name="inReference">The contained candidate.</param>
            <returns>true if inReference is contained by this reference.</returns>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.DataPresenterRefBase.IsSubsetReference(Infragistics.Calculations.Engine.ICalculationReference)">
            <summary>
            Returns true if inReference is a proper subset of this reference
            </summary>
            <param name="inReference">The subset candidate.</param>
            <returns>true if inReference is contained by this reference.</returns>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.DataPresenterRefBase.FilterReference(Infragistics.Calculations.Engine.ICalculationReference)">
            <summary>
            UltraCalcEngine has a requirement that two separate instances of ICalculationReference can't have 
            the same absolute name and not share the recalc flags or that two instances of 
            ICalculationReference have different absolute names but share the recalc flags. What this 
            means that since a NestedFieldReference with the context of the root rows collection has the 
            same absolute name as the associated FieldReference, we have to make sure to return the 
            ColumnRefernece instead of the NestedFieldReference in such cases where the nested column 
            reference absolute name happens to be the same as the associated column reference' absolute 
            name. This would occur like I said before when the NestedFieldReference has the root rows 
            collection context. We may have to also modify the NestedReference classes to delgate the recalc 
            flags to the associated non-nested references however as long as this fix works out we won't 
            have to do it. The reason why this is preferrable is that tokens in the formula should really be 
            getting the column and summarysettings references and not the nested ones when they are 
            reconnected.
            </summary>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.DataPresenterRefBase.CreateReference(System.String)">
            <summary>
            Gets the reference for the specified reference name. The reference name can be absolute or relative.
            </summary>
            <param name="referenceName"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.DataPresenterRefBase.CreateRange(System.String,System.String)">
            <summary>
            Create a range reference relative to this reference.
            </summary>
            <param name="fromReferenceName">The start of the range, inclusive.</param>
            <param name="toReferenceName">The end of the range, inclusive.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.DataPresenterRefBase.IsSiblingReference(Infragistics.Calculations.Engine.ICalculationReference)">
            <summary>
            Determines whether the given reference is a sibling of this reference
            </summary>
            <param name="reference">The reference to compare against this one</param>
            <returns>True if the reference is a sibling of the given reference</returns>
        </member>
        <member name="T:Infragistics.Windows.DataPresenter.Calculations.DataPresenterReference">
            <summary>
            Reference implementation that represents a grid control.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.DataPresenterReference.IsValid">
            <summary>
            Indicates if the reference is valid.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.DataPresenterReference.Dispose">
            <summary>
            Sets IsValid to false.
            </summary>
        </member>
        <member name="T:Infragistics.Windows.DataPresenter.Calculations.RangeReference">
            <summary>
            A class to represent range references.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.RangeReference.HasRelativeIndex">
            <summary>
            Return true from HasRelativeIndex since this tells the calc-engine to mark the formula
            refernece holding this range reference as a token. Marking mechanism is used to dirty
            the whole column when a dependant cell gets modified so the whole column gets recalculated
            instead of just the corresponding cell.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.RangeReference.MarkRelativeIndices(Infragistics.Calculations.Engine.ICalculationReference)">
            <summary>
            For each reference tuple in this reference that has a relative index, mark the
            corresponding tuple in inReference.
            </summary>
            <param name="formulaReference">The Reference to be marked.</param>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.RangeReference.RangeEnumerator.#ctor(Infragistics.Windows.DataPresenter.Calculations.RangeReference.ResolvedRangeReference)">
            <summary>
            From and to are inclusive.
            </summary>
            <param name="resolvedRange"></param>
        </member>
        <member name="T:Infragistics.Windows.DataPresenter.Calculations.FieldLayoutReference">
            <summary>
            Reference implementation that represents a grid band.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.FieldLayoutReference.#ctor(Infragistics.Windows.DataPresenter.Calculations.DataPresenterReference,Infragistics.Windows.DataPresenter.FieldLayout,Infragistics.Windows.DataPresenter.Calculations.FieldLayoutReference)">
            <summary>
            Constructor.
            </summary>
            <param name="rootRef">Data presenter root reference.</param>
            <param name="fieldLayout">Field-layout object.</param>
            <param name="parentFieldLayoutReference">Parent field-layout reference if the field-layout has a parent field-layout.</param>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.FieldLayoutReference.FieldLayout">
            <summary>
            Returns the associated field-layout.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.FieldLayoutReference.ParentFieldLayoutReference">
            <summary>
            Gets the parent field-layout reference if any.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.FieldLayoutReference.VerifyGroupLevelSummaryFormulas">
            <summary>
            Creates the group-by level summary formulas whenever the group-by hierarchy changes.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.FieldLayoutReference.GetSummaryDefinitionReference(Infragistics.Windows.DataPresenter.SummaryResult)">
            <summary>
            Gets the summary reference for a particular group level associated with the passed in summary value.
            </summary>
            <param name="summaryResult"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.FieldLayoutReference.GetSummaryDefinitionReference(Infragistics.Windows.DataPresenter.SummaryDefinition,Infragistics.Windows.DataPresenter.Field)">
            <summary>
            Gets the summary reference for a particular group level associated with the passed in group-by column.
            </summary>
            <param name="summary"></param>
            <param name="groupByField"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.FieldLayoutReference.ProcessFieldsChanged">
            <summary>
            Called when the field-layout's Fields collection is changed.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.FieldLayoutReference.ProcessGroupByVersionChanged">
            <summary>
            Called when field-layouts group-by fields change.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.FieldLayoutReference.ProcessSummaryDefinitionsChanged">
            <summary>
            Called when the field-layout's Fields collection is changed.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.FieldLayoutReference.IsDisposedReference">
            <summary>
            True indicates that the reference was disposed.  Read Only.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.FieldLayoutReference.ShouldFormulaEditorIncludeIndex">
            <summary>
            Gets the value indicating whether the formula editor should include default indexes after this reference's address when 
            enumerable references are used where a single value is expected.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.ReferenceManager.#ctor(Infragistics.Windows.DataPresenter.Calculations.FieldLayoutReference,System.Object)">
            <summary>
            Constructor.
            </summary>
            <param name="fieldLayoutReference">Reference of the field-layout to which the clientObject belongs.</param>
            <param name="clientObject">Field or SummaryDefinition.</param>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.ReferenceManager.RegisterWithCalcManager(System.Boolean)">
            <summary>
            Registers the reference and any formula with the calc manager if dirty.
            </summary>
            <param name="reregister"></param>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.ReferenceManager.VerifyName(System.Boolean)">
            <summary>
            Re-verifies the Name based on ReferenceId and control's Name settings.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.ReferenceManager.VerifyFormula(System.Boolean)">
            <summary>
            Called when the Formula is changed on the named reference or the control. It will re-compile and
            associate the new formula with the reference while deleting the old formula from the calc engine.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.ReferenceManager.UnregisterFromCalcManager">
            <summary>
            Removes the calc reference from the calc manager along with its formula if any.
            </summary>
        </member>
        <member name="T:Infragistics.Windows.DataPresenter.Calculations.DataPresenterFormulaRefBase">
            <summary>
            Base class for references that have formula like field or summary references.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.DataPresenterFormulaRefBase.#ctor(Infragistics.Windows.DataPresenter.Calculations.DataPresenterReference,System.String,System.Object)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.DataPresenterFormulaRefBase.HasFormulaSyntaxError">
            <summary>
            Returns true if the reference has a formula and the formula has a syntax error.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.DataPresenterFormulaRefBase.FormulaSyntaxError">
            <summary>
            Returns the syntax error string if there is a syntax error otherwise returns null.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.DataPresenterFormulaRefBase.EnsureFormulaRegistered(System.String)">
            <summary>
            Makes sure that this reference is using the specified formula string as
            its formula. If not it will delete the old formula and compile and add
            the new formula.
            </summary>
            <param name="formulaString"></param>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.DataPresenterFormulaRefBase.RegisterFormulaHelper(System.String)">
            <summary>
            Removes the old formula from the calc network and adds the new formula to 
            the calc network.
            </summary>
            <param name="newFormulaString"></param>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.DataPresenterFormulaRefBase.HasFormula">
            <summary>
            Indicates if the reference has a formula. This property returns true even if 
            the formula has a syntax error.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.DataPresenterFormulaRefBase.CreateReferenceHelper(System.String)">
            <summary>
            A helper method that parses out relative column(*) or summary() names, optionally preceded
            by series of "../" relative parent specifiers. This is to support [../../Summary()]
            and [../../column1(*)] types of references to allow for being able to refer to the parent 
            group's summary or cells. For example, in a group-by situation where customer rows are 
            grouped by State and City columns. Let's say you have a summary with formula 
            Total() = sum([column1]). A column formula of [Total()] refers to the total of the current 
            city. A column formula of [../../Total()] referes to the total of the current state. Notice 
            how we are using two sets of double dots; this is because one set has no meaning (as
            was decided by the Melville team). In other words [Total()] and [../Total()] refer
            to the same summary and this is consistant with how [column1] and [../column1] refer
            to the same column in a column formula. The same logic as summaries applies to column(*)
            references too. Examples of anologous column references are [column1(*)], [../../column1(*)]. 
            [column1(*)] reference resolves to all the column1 cells in the current group
            of rows, current City in our example. [../../column1(*)] resolves to all the cells
            in the current State, which is the parent group-by column.
            </summary>
            <param name="referenceName"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.DataPresenterFormulaRefBase.CreateReference(System.String)">
            <summary>
            Gets the reference for the specified reference name. The reference name can be absolute or relative.
            </summary>
            <param name="referenceName"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Windows.DataPresenter.Calculations.DataPresenterFormulaTargetRefBase">
            <summary>
            Base class for reference objects that are targets of formula evaluation like cell reference and summary value reference.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.DataPresenterFormulaTargetRefBase.ContainingFormulaRef">
            <summary>
            Returns the associated FormulaRefBase instance.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.DataPresenterFormulaTargetRefBase.FormulaEvaluationResult">
            <summary>
            Returns the result of formula evaluation. If this summary doesn't have a formula
            associated with it, returns null.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.DataPresenterFormulaTargetRefBase.HasFormulaSyntaxError">
            <summary>
            Returns true if the associated formula has a syntax error.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.DataPresenterFormulaTargetRefBase.FormulaSyntaxError">
            <summary>
            Returns the syntax error string if there is a syntax error otherwise returns null.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.DataPresenterFormulaTargetRefBase.HasFormula">
            <summary>
            Indicates if this reference has a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.DataPresenterFormulaTargetRefBase.IsValueDirty">
            <summary>
            Returns true if the formula needs to be recalculated.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.CellReference.#ctor(Infragistics.Windows.DataPresenter.Calculations.FieldReference,Infragistics.Windows.DataPresenter.Calculations.DataRecordReference)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.CellReference.IsDisposedReference">
            <summary>
            True indicates that the reference was disposed.  Read Only.
            </summary>
        </member>
        <member name="T:Infragistics.Windows.DataPresenter.Calculations.FieldReference">
            <summary>
            Reference implementation that represents a field.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.FieldReference.IsDisposedReference">
            <summary>
            True indicates that the reference was disposed.  Read Only.
            </summary>
        </member>
        <member name="T:Infragistics.Windows.DataPresenter.Calculations.NestedReference">
            <summary>
            Base class for nested references.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.NestedReference.#ctor(Infragistics.Windows.DataPresenter.RecordCollectionBase,Infragistics.Windows.DataPresenter.Calculations.DataPresenterRefBase,System.Object)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.NestedReference.Scope">
            <summary>
            Returns the associated record collection that defines the scope of this nested reference.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.NestedReference.RecalcDeferred">
            <summary>
            Returns true if the recalc deferred is on for this enumerable reference.
            </summary>
        </member>
        <member name="T:Infragistics.Windows.DataPresenter.Calculations.NestedFieldLayoutReference">
            <summary>
            Reference implementation that represents a nested field-layout.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.NestedFieldLayoutReference.FieldLayout">
            <summary>
            Returns the associated field-layout.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.NestedFieldLayoutReference.IsDisposedReference">
            <summary>
            True indicates that the reference was disposed.  Read Only.
            </summary>
        </member>
        <member name="T:Infragistics.Windows.DataPresenter.Calculations.NestedFieldReference">
            <summary>
            Reference implementation that represents a column within a particular rows collection.
            This enumerable references enumerates all the cells associated with the column that
            either belongs to the associated rows collection or descendants rows of the associated
            rows collection. Note: the column can be from the same band as the rows collection or
            from a descendant band. For example, //ultraGrid1/Customers(0)/Orders/OrderDetails/Total
            reference would be a nested column reference with rows collection of the child rows 
            collection of Customers(0) and the column of Total column of OrderDetails band.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.NestedFieldReference.#ctor(Infragistics.Windows.DataPresenter.RecordCollectionBase,Infragistics.Windows.DataPresenter.Calculations.FieldReference,System.Boolean)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.NestedFieldReference.Field">
            <summary>
            Returns the associated column.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.NestedFieldReference.IsDisposedReference">
            <summary>
            True indicates that the reference was disposed.  Read Only.
            </summary>
        </member>
        <member name="T:Infragistics.Windows.DataPresenter.Calculations.NestedSummaryDefinitionReference">
            <summary>
            Reference implementation that represents a summary definition with 
            context of a record collection.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.NestedSummaryDefinitionReference.#ctor(Infragistics.Windows.DataPresenter.Calculations.SummaryDefinitionReference,Infragistics.Windows.DataPresenter.RecordCollectionBase)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.NestedSummaryDefinitionReference.SummaryReference">
            <summary>
            Returns the associated summary reference object.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.NestedSummaryDefinitionReference.Summary">
            <summary>
            Returns the associated summary object.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.NestedSummaryDefinitionReference.IsDisposedReference">
            <summary>
            True indicates that the reference was disposed.  Read Only.
            </summary>
        </member>
        <member name="T:Infragistics.Windows.DataPresenter.Calculations.RecordCollectionReference">
            <summary>
            Reference implementation that represents a rows collection.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.RecordCollectionReference.Records">
            <summary>
            Returns the associated record collection.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.RecordCollectionReference.FieldLayout">
            <summary>
            Returns the associated field-layout.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.RecordCollectionReference.FieldLayoutContext">
            <summary>
            Returns the context of a field-layout if any. Cell, record, field, field-layout references etc... all
            have the context of a field-layout.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.RecordCollectionReference.GroupByFieldReferenceName">
            <summary>
            If the associated record collection is a group-by record collection then returns the
            reference name of the associated group-by field otherwise returns null.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.RecordCollectionReference.ResolveReferenceHelper(Infragistics.Calculations.Engine.ICalculationReference,Infragistics.Calculations.Engine.ResolveReferenceType,Infragistics.Windows.DataPresenter.Calculations.RecordReferenceBase)">
            <summary>
            Helper method.
            </summary>
            <param name="inReference">Reference to resolve.</param>
            <param name="referenceType">Reference type.</param>
            <param name="recordReferenceContext">Optional record context.</param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.RecordCollectionReference.IsDisposedReference">
            <summary>
            True indicates that the reference was disposed.  Read Only.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.RecordCollectionReference.ShouldFormulaEditorIncludeIndex">
            <summary>
            Gets the value indicating whether the formula editor should include default indexes after this reference's address when 
            enumerable references are used where a single value is expected.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.RefRecordIterator.CurrentRecordCollection">
            <summary>
            Returns the current lowest level rows collection being traversed.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.RefCellCollection.#ctor(Infragistics.Windows.DataPresenter.Calculations.DataPresenterRefBase,Infragistics.Windows.DataPresenter.Calculations.FieldReference,Infragistics.Calculations.Engine.RefParser)">
            <summary>
            Constructor.
            </summary>
            <param name="referenceBeingEnumerated"></param>
            <param name="fieldRef">The field whose cells to iterate.</param>
            <param name="scopeRP">Provides scope information.</param>
        </member>
        <member name="T:Infragistics.Windows.DataPresenter.Calculations.SummaryDefinitionReference">
            <summary>
            Reference implementation that represents a summary definition.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.SummaryDefinitionReference.#ctor(Infragistics.Windows.DataPresenter.Calculations.ReferenceManager,System.String,Infragistics.Windows.DataPresenter.SummaryDefinition)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.SummaryDefinitionReference.Summary">
            <summary>
            Returns the associated summary object.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.SummaryDefinitionReference.IsDisposedReference">
            <summary>
            True indicates that the reference was disposed. Read only.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.SummaryResultReference.#ctor(Infragistics.Windows.DataPresenter.Calculations.RecordCollectionReference,Infragistics.Windows.DataPresenter.Calculations.SummaryDefinitionReference,Infragistics.Windows.DataPresenter.SummaryResult)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.SummaryResultReference.SummaryResult">
            <summary>
            Returns the associated summary result.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.SummaryResultReference.IsDisposedReference">
            <summary>
            True indicates that the reference was disposed.  Read Only.
            </summary>
        </member>
        <member name="T:Infragistics.Windows.DataPresenter.Calculations.RecordReferenceBase">
            <summary>
            Base class for RecordReference and GroupByRecordReference.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.RecordReferenceBase.#ctor(Infragistics.Windows.DataPresenter.Calculations.RecordCollectionReference,Infragistics.Windows.DataPresenter.Record)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.RecordReferenceBase.Record">
            <summary>
            Returns the associated record.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.RecordReferenceBase.FieldLayoutContext">
            <summary>
            Returns the context of a field-layout if any. Cell, record, field, field-layout references etc... all
            have the context of a field-layout.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.RecordReferenceBase.IsDataReference">
            <summary>
            Returns false since record doesn't represent a data reference.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.RecordReferenceBase.FindItemHelper(System.String,Infragistics.Calculations.Engine.RefTuple.RefScope,System.Object)">
            <summary>
            Finds cell, column, or child records etc... based on the scope.
            </summary>
            <param name="name">Name to find.</param>
            <param name="scope">Can be Any, All, Index and RelativeIndex.</param>
            <param name="scopeValue">The value based on the scope type</param>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.RecordReferenceBase.ContainsReference(Infragistics.Calculations.Engine.ICalculationReference)">
            <summary>
            Returns true if this reference contains inReference
            </summary>
            <param name="inReference">The contained candidate.</param>
            <returns>true if inReference is contained by this reference.</returns>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.RecordReferenceBase.ResolveReferenceHelper(Infragistics.Calculations.Engine.ICalculationReference,Infragistics.Calculations.Engine.ResolveReferenceType,Infragistics.Windows.DataPresenter.Calculations.FieldReference)">
            <summary>
            A helper method for resolving cell and summary references.
            </summary>
            <param name="inReference">Reference being resolved.</param>
            <param name="referenceType">Indicates whether the reference being resolved is the lvalue of the formula or an rvalue of the formula.</param>
            <param name="cellContext">Optional cell context.</param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.RecordReferenceBase.IsDisposedReference">
            <summary>
            True indicates that the reference was disposed.  Read Only.
            </summary>
        </member>
        <member name="T:Infragistics.Windows.DataPresenter.Calculations.DataRecordReference">
            <summary>
            Reference implementation that represents an DataRecord.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.DataRecordReference.#ctor(Infragistics.Windows.DataPresenter.Calculations.RecordCollectionReference,Infragistics.Windows.DataPresenter.DataRecord)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.DataRecordReference.FindItemHelper(System.String,Infragistics.Calculations.Engine.RefTuple.RefScope,System.Object)">
            <summary>
            Finds cell, column, or child records etc... based on the scope.
            </summary>
            <param name="name">Name to find.</param>
            <param name="scope">Can be Any, All, Index and RelativeIndex.</param>
            <param name="scopeValue">The value based on the scope type</param>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.DataRecordReference.Record">
            <summary>
            Gets the associated DataRecord.
            </summary>
        </member>
        <member name="T:Infragistics.Windows.DataPresenter.Calculations.GroupByRecordReference">
            <summary>
            Reference implementation that represents a GroupByRecord.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.GroupByRecordReference.#ctor(Infragistics.Windows.DataPresenter.Calculations.RecordCollectionReference,Infragistics.Windows.DataPresenter.GroupByRecord)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.GroupByRecordReference.Record">
            <summary>
            Returns the associated group-by record.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.GroupByRecordReference.FindItemHelper(System.String,Infragistics.Calculations.Engine.RefTuple.RefScope,System.Object)">
            <summary>
            Finds cell, column, or child records etc... based on the scope.
            </summary>
            <param name="name">Name to find.</param>
            <param name="scope">Can be Any, All, Index and RelativeIndex.</param>
            <param name="scopeValue">The value based on the scope type</param>
        </member>
        <member name="T:Infragistics.Windows.DataPresenter.Calculations.GroupLevelReference">
            <summary>
            Represents a group level in a group-by situation. This will be used as a parent of 
            GroupLevelSummaryDefinitionReference instances. This class will return the name of
            the associated group-by column as its element name. This class is only used for
            summaries.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.GroupLevelReference.#ctor(Infragistics.Windows.DataPresenter.Calculations.DataPresenterRefBase,Infragistics.Windows.DataPresenter.Calculations.FieldReference)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.GroupLevelReference.GroupByField">
            <summary>
            Returns the associated group-by field.
            </summary>
        </member>
        <member name="T:Infragistics.Windows.DataPresenter.Calculations.GroupLevelSummaryDefinitionReference">
            <summary>
            Represents a summary settings reference at a particular group-by level. We needed
            to do this because when a cell got dirtied, all the summary values across all the 
            group-by levels need to be dirtied. The root summary settings object (one that 
            would be associated with the overall summary is always represented by 
            SummaryDefinitionReference. GroupLevelSummaryDefinitionReference only represents 
            summaries at lower levels.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.GroupLevelSummaryDefinitionReference.#ctor(Infragistics.Windows.DataPresenter.Calculations.GroupLevelReference,Infragistics.Windows.DataPresenter.Calculations.SummaryDefinitionReference)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.GroupLevelSummaryDefinitionReference.ParentReference">
            <summary>
            Returns the associated GroupLevelReference reference.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.GroupLevelSummaryDefinitionReference.GroupByField">
            <summary>
            Returns the associated group-by field.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.GroupLevelSummaryDefinitionReference.IsDisposedReference">
            <summary>
            True indicates that the reference was disposed.  Read Only.
            </summary>
        </member>
        <member name="T:Infragistics.Windows.DataPresenter.Calculations.RefUtils">
            <summary>
            A helper class.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.RefUtils.#ctor(Infragistics.Windows.DataPresenter.Calculations.DataPresenterReference)">
            <summary>
            Constructor.
            </summary>
            <param name="rootRef"></param>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.RefUtils.AddFormulaHelper(Infragistics.Windows.DataPresenter.Calculations.DataPresenterRefBase,Infragistics.Calculations.Engine.ICalculationFormula)">
            <summary>
            Adds the specified formula to the specified calc manager. If the formula has syntax error
            then it does not add it.
            </summary>
            <param name="reference"></param>
            <param name="formula"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.RefUtils.GetNextGroupByField(Infragistics.Windows.DataPresenter.Field,Infragistics.Windows.DataPresenter.FieldLayout)">
            <summary>
            Returns the group-by field after the passed in group-by field. If null is passed in for groupByField then
            returns the first group-by field in the specified field-layout.
            </summary>
            <param name="groupByField"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.RefUtils.GetParentRecord(Infragistics.Windows.DataPresenter.Record)">
            <summary>
            Gets the parent record of the record. If the parent record is expandable field record, then
            returns that records parent. Effectively this method skips expandable field record.
            </summary>
            <param name="record"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.RefUtils.GetParentRecord(Infragistics.Windows.DataPresenter.RecordCollectionBase)">
            <summary>
            Gets the parent record of the record. If the parent record is expandable field record, then
            returns that records parent. Effectively this method skips expandable field record.
            </summary>
            <param name="record"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.RefUtils.IsDescendantOf(Infragistics.Windows.DataPresenter.FieldLayout,Infragistics.Windows.DataPresenter.FieldLayout)">
            <summary>
            Returns true if the 'testFieldLayout' is a descendant field-layout of 'ancestorFieldLayout'.
            </summary>
            <param name="testFieldLayout"></param>
            <param name="ancestorFieldLayout"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.RefUtils.IsGroupByRecords(Infragistics.Windows.DataPresenter.RecordCollectionBase)">
            <summary>
            Indicates if the records are group-by records.
            </summary>
            <param name="records"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.RefUtils.IsObjectOfType(System.Object,System.Type)">
            <summary>
            Returns true if the specified object is an instance of the specified
            type or a type that's derived from specified type. It also checks for
            interfaces.
            </summary>
            <param name="obj"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.RefUtils.IsObjectOfType(System.Type,System.Type)">
            <summary>
            Returns true if the objectType is the same as the type or is 
            a type derived from the type. It also checks for interfaces.
            </summary>
            <param name="objectType"></param>
            <param name="typeToCheck"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.RefUtils.RemoveFormulaHelper(Infragistics.Windows.DataPresenter.Calculations.DataPresenterRefBase,Infragistics.Calculations.Engine.ICalculationFormula)">
            <summary>
            Removes the specified formula from the specified calc manager. If the formula has 
            syntax error then it takes no action as a formula with syntax error should never have
            been added to the calc network in the first place.
            </summary>
            <param name="reference"></param>
            <param name="formula"></param>
        </member>
        <member name="T:Infragistics.Windows.DataPresenter.Calculations.Resources">
            <summary>
            Exposes a <see cref="T:Infragistics.Shared.ResourceCustomizer"/> instance for this assembly. 
            </summary>
            <seealso cref="P:Infragistics.Windows.DataPresenter.Calculations.Resources.Customizer"/> 
            <seealso cref="T:Infragistics.Shared.ResourceCustomizer"/> 
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.Resources.Customizer">
            <summary>
            Returns the <see cref="T:Infragistics.Shared.ResourceCustomizer"/> for this assembly.
            </summary>
            <seealso cref="T:Infragistics.Shared.ResourceCustomizer"/> 
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.Resources.GetString(System.String,System.Object[])">
            <summary>
            Returns the resource string using the specified name and default culture.
            </summary>
            <param name="name">Name of the string resource to return.</param>
            <param name="args">Arguments supplied to the string.Format method when formatting the string.</param>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.Resources.GetString(System.String)">
            <summary>
            Returns the resource string using the specified resource name and default culture. The string is then formatted using the arguments specified.
            </summary>
            <param name="name">Name of the string resource to return.</param>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.Resources.GetDynamicResourceString(System.String)">
            <summary>
            Returns a DynamicResourceString object that tracks customization changes to a resource and raises an event when the resource value is changed.
            </summary>
            <param name="name">Name of the string resource to return.</param>
            <returns>A <see cref="T:Infragistics.Shared.DynamicResourceString"/> object to track changes in the resource customizations.</returns>
            <seealso cref="T:Infragistics.Shared.ResourceCustomizer"/>
            <seealso cref="M:Infragistics.Shared.ResourceCustomizer.SetCustomizedString(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Shared.ResourceCustomizer.ResetCustomizedString(System.String)"/>
            <seealso cref="M:Infragistics.Shared.ResourceCustomizer.ResetAllCustomizedStrings"/>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.Resources.GetDynamicResourceString(System.String,System.Object[])">
            <summary>
            Returns a DynamicResourceString object that tracks customization changes to a resource and raises an event when the resource value is changed.
            </summary>
            <param name="name">Name of the string resource to return.</param>
            <param name="args">Arguments supplied to the string.Format method when formatting the string.</param>
            <returns>A <see cref="T:Infragistics.Shared.DynamicResourceString"/> object to track changes in the resource customizations.</returns>
            <seealso cref="T:Infragistics.Shared.ResourceCustomizer"/>
            <seealso cref="M:Infragistics.Shared.ResourceCustomizer.SetCustomizedString(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Shared.ResourceCustomizer.ResetCustomizedString(System.String)"/>
            <seealso cref="M:Infragistics.Shared.ResourceCustomizer.ResetAllCustomizedStrings"/>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.Resources.GetDynamicResourceString(System.String,System.Object[],System.Globalization.CultureInfo)">
            <summary>
            Returns a DynamicResourceString object that tracks customization changes to a resource and raises an event when the resource value is changed.
            </summary>
            <param name="name">Name of the string resource to return.</param>
            <param name="args">Arguments supplied to the string.Format method when formatting the string.</param>
            <param name="culture">Culture whose resource should loaded. The resource will go through a fallback process to locate the appropriate resources.</param>
            <returns>A <see cref="T:Infragistics.Shared.DynamicResourceString"/> object to track changes in the resource customizations.</returns>
            <seealso cref="T:Infragistics.Shared.ResourceCustomizer"/>
            <seealso cref="M:Infragistics.Shared.ResourceCustomizer.SetCustomizedString(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Shared.ResourceCustomizer.ResetCustomizedString(System.String)"/>
            <seealso cref="M:Infragistics.Shared.ResourceCustomizer.ResetAllCustomizedStrings"/>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.Resources.GetObject(System.String)">
            <summary>
            Returns the resource object using the specified name.
            </summary>
            <param name="name">Name of the resource item</param>
            <returns>An object containing the specified resource</returns>
        </member>
        <member name="T:Infragistics.Windows.DataPresenter.Calculations.DataPresenterCalculationAdapter">
            <summary>
            Class that exposes <see cref="T:Infragistics.Windows.DataPresenter.DataPresenterBase"/> objects to a <see cref="T:Infragistics.Calculations.XamCalculationManager"/>'s network.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.DataPresenterCalculationAdapter.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Windows.DataPresenter.Calculations.DataPresenterCalculationAdapter"/>
            </summary>
        </member>
        <member name="F:Infragistics.Windows.DataPresenter.Calculations.DataPresenterCalculationAdapter.DataPresenterProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.DataPresenter.Calculations.DataPresenterCalculationAdapter.DataPresenter"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.DataPresenterCalculationAdapter.DataPresenter">
            <summary>
            Returns the associated DataPresenter (read-only)
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> this is initialized by setting the <see cref="T:Infragistics.Windows.DataPresenter.DataPresenterBase"/>'s <see cref="P:Infragistics.Windows.DataPresenter.DataPresenterBase.CalculationAdapter"/> property to this object.</para>
            </remarks>
            <seealso cref="F:Infragistics.Windows.DataPresenter.Calculations.DataPresenterCalculationAdapter.DataPresenterProperty"/>
            <seealso cref="P:Infragistics.Windows.DataPresenter.DataPresenterBase.CalculationAdapter"/>
            <seealso cref="T:Infragistics.Windows.DataPresenter.DataPresenterBase"/>
        </member>
        <member name="F:Infragistics.Windows.DataPresenter.Calculations.DataPresenterCalculationAdapter.ReferenceIdProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.DataPresenter.Calculations.DataPresenterCalculationAdapter.ReferenceId"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.DataPresenterCalculationAdapter.ReferenceId">
            <summary>
            Gets/sets the root reference Id for any calculation references exposed by the <see cref="P:Infragistics.Windows.DataPresenter.Calculations.DataPresenterCalculationAdapter.DataPresenter"/> for use in the associated <see cref="T:Infragistics.Calculations.XamCalculationManager"/>'s network.
            </summary>
            <seealso cref="P:Infragistics.Windows.DataPresenter.Calculations.DataPresenterCalculationAdapter.DataPresenter"/>
            <seealso cref="F:Infragistics.Windows.DataPresenter.Calculations.DataPresenterCalculationAdapter.ReferenceIdProperty"/>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.DataPresenterCalculationAdapter.CalcManager">
            <summary>
            Gets the associated calculation manager instance if any.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.DataPresenter.Calculations.DataPresenterCalculationAdapter.VisibleRecords">
            <summary>
            Gets the records that are visible on screen. This is used to support recalc deferred mode where
            we only calculate visible records.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.DataPresenterCalculationAdapter.DirtyRootReference(System.Boolean)">
            <summary>
            Discards the current root reference and creates new root reference based on 'verify' parameter.
            </summary>
            <param name="verify">Whether to call Verify method to create new root reference.</param>
            <param name="async">If 'verify' parameter is true, this parameter indicates whether to asynchronously verify.</param>
        </member>
        <member name="M:Infragistics.Windows.DataPresenter.Calculations.DataPresenterCalculationAdapter.OnFieldLayouts_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Event handler for CollectionChanged of the data presenter's field layouts collection.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LocalizedCategoryAttribute.GetLocalizedString(System.String)">
            <summary>
            Returns the localized category name
            </summary>
            <param name="value">Name of the category to retreive</param>
            <returns>The localized string value</returns>
        </member>
        <member name="M:InternalDynamicResourceString.#ctor(Infragistics.Shared.ResourceCustomizer,System.Globalization.CultureInfo,System.String,System.Object[])">
            <summary>
            This constructor is for internal use only.
            </summary>
        </member>
        <member name="M:InternalDynamicResourceString.GetStringFromResource(System.String,System.Globalization.CultureInfo)">
            <summary>
            For internal use only.
            </summary>
        </member>
    </members>
</doc>
