<?xml version="1.0"?>
<doc>
    <assembly>
        <name>InfragisticsWPF4.Controls.Maps.XamNetworkNode.v17.2</name>
    </assembly>
    <members>
        <member name="T:Infragistics.Controls.Maps.XamNetworkNodeAutomationPeer">
            <summary>
            The automation peer for the <see cref="P:Infragistics.Controls.Maps.XamNetworkNodeAutomationPeer.XamNetworkNode"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamNetworkNodeAutomationPeer.#ctor(Infragistics.Controls.Maps.XamNetworkNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Maps.XamNetworkNodeAutomationPeer"/> class.
            </summary>
            <param name="networkNode">The org chart.</param>
        </member>
        <member name="P:Infragistics.Controls.Maps.XamNetworkNodeAutomationPeer.XamNetworkNode">
            <summary>
            Gets or sets the <see cref="P:Infragistics.Controls.Maps.XamNetworkNodeAutomationPeer.XamNetworkNode"/> instance.
            </summary>
            <value>The <see cref="P:Infragistics.Controls.Maps.XamNetworkNodeAutomationPeer.XamNetworkNode"/> instance.</value>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamNetworkNodeAutomationPeer.GetChildrenCore">
            <summary>
            Gets the collection of child elements of the <see cref="P:Infragistics.Controls.Maps.XamNetworkNodeAutomationPeer.XamNetworkNode"/> that is associated with this <see cref="T:Infragistics.Controls.Maps.XamNetworkNodeAutomationPeer"/>.
            </summary>
            <returns>The collection of child elements.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamNetworkNodeAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Overrides the framework invocation of when a request is made for what types of user interaction are avalible. 
            </summary>
            <param name="patternInterface">This is the type of user interaction requested.</param>
            <returns>An object that can handle this pattern or null if none available.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamNetworkNodeAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Overrides the framework invocation of what generic type of control this is.
            </summary>
            <returns>The <see cref="T:System.Windows.Automation.Peers.AutomationControlType"/> that describes this control.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamNetworkNodeAutomationPeer.GetClassNameCore">
            <summary>
            Overrides the framework invocation requesting a string that describes this control.
            </summary>
            <returns>A string describing the name of this control.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamNetworkNodeAutomationPeer.GetNameCore">
            <summary>
            Returns the text label of the <see cref="T:System.Windows.FrameworkElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName"/>.
            </summary>
            <returns>
            The text label of the element that is associated with this automation peer.
            </returns>
        </member>
        <member name="P:Infragistics.Controls.Maps.XamNetworkNodeAutomationPeer.CanSelectMultiple">
            <summary>
            Gets a value that indicates whether the UI automation provider allows more than one child element to be selected concurrently.
            </summary>
            <value></value>
            <returns>true if multiple selection is allowed; otherwise, false.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamNetworkNodeAutomationPeer.GetSelection">
            <summary>
            Retrieves a UI automation provider for each child element that is selected.
            </summary>
            <returns>
            A generic list of UI automation providers.
            </returns>
        </member>
        <member name="P:Infragistics.Controls.Maps.XamNetworkNodeAutomationPeer.IsSelectionRequired">
            <summary>
            Gets a value that indicates whether the UI automation provider requires at least one child element to be selected.
            </summary>
            <value></value>
            <returns>true if selection is required; otherwise, false.</returns>
        </member>
        <member name="T:Infragistics.Controls.Maps.NetworkNodeNodeAutomationPeer">
            <summary>
            The automation peer for the <see cref="T:Infragistics.Controls.Maps.NetworkNodeNodeControl"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeNodeAutomationPeer.#ctor(Infragistics.Controls.Maps.NetworkNodeNodeControl)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Maps.NetworkNodeNodeAutomationPeer"/> class.
            </summary>
            <param name="owner">The <see cref="T:Infragistics.Controls.Maps.NetworkNodeNodeControl"/> that this automation peer controls.</param>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeNodeAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Overrides the framework invocation of what generic type of control this is.
            </summary>
            <returns>The <see cref="T:System.Windows.Automation.Peers.AutomationControlType"/> that describes this control.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeNodeAutomationPeer.GetClassNameCore">
            <summary>
            Overrides the framework invocation requesting a string that describes this control.
            </summary>
            <returns>A string describing the name of this control.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeNodeAutomationPeer.GetNameCore">
            <summary>
            Returns the text label of the <see cref="T:System.Windows.FrameworkElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName"/>.
            </summary>
            <returns>
            The text label of the element that is associated with this automation peer.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeNodeAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Overrides the framework invocation of when a request is made for what types of user interaction are avalible. 
            </summary>
            <param name="patternInterface">This is the type of user interaction requested.</param>
            <returns>An object that can handle this pattern or null if none available.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeNodeAutomationPeer.RaiseIsSelectedPropertyChangedEvent(System.Boolean)">
            <summary>
            Raises the automation is selected changed.
            </summary>
            <param name="isSelected">if set to <c>true</c> when property IsSelected is set to <c>true</c>.</param>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeNodeAutomationPeer.OwningNodeControl_PropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles the PropertyChanged event of the OwningNodeControl property.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeNodeAutomationPeer.AddToSelection">
            <summary>
            Selects the item this automation peer controls.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeNodeAutomationPeer.RemoveFromSelection">
            <summary>
            Deselects the item this automation peer controls.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeNodeAutomationPeer.Select">
            <summary>
            Clears the current selection then selects the item this automation peer controls.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeNodeAutomationPeer.IsSelected">
            <summary>
            Gets a value indicating whether the item this automation peer controls is selected.
            </summary>
            <value></value>
            <returns>true if the element is selected; otherwise, false.</returns>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeNodeAutomationPeer.SelectionContainer">
            <summary>
            Gets the provider for this control.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Maps.NetworkNodeInvokeAction">
            <summary>
            An enumeration of different interactions.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.NetworkNodeInvokeAction.Keyboard">
            <summary>
            An action was raised via the keyboard. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.NetworkNodeInvokeAction.MouseMove">
            <summary>
            An action was raised via the mouse moving. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.NetworkNodeInvokeAction.Click">
            <summary>
            An action was raised via a MouseDown or Spacebar press.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.NetworkNodeInvokeAction.Code">
            <summary>
            An action was raised via the API.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Maps.NetworkNodeSelectionType">
            <summary>
            Describes the type of selection that should be performed. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.NetworkNodeSelectionType.None">
            <summary>
            Selection should be disabled
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.NetworkNodeSelectionType.Single">
            <summary>
            Only one item should be selected at a given time. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.NetworkNodeSelectionType.Multiple">
            <summary>
            Multiple items can be selected via the ctrl and shift keys. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.NetworkNodeSelectionType.Extended">
            <summary>
            When some node is selected all its children are also selected.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Maps.NetworkNodeClickEventArgs">
            <summary>
            The event arguments of the events fired when a node is clicked.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeClickEventArgs.#ctor(Infragistics.Controls.Maps.NetworkNodeNodeControl,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Maps.NetworkNodeClickEventArgs"/> class.
            </summary>
            <param name="nodeControl">The node control.</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeClickEventArgs.MouseEventArgs">
            <summary>
            Gets or sets the mouse event args.
            </summary>
            <value>The mouse event args.</value>
        </member>
        <member name="T:Infragistics.Controls.Maps.NetworkNodeEventArgs">
            <summary>
            The event arguments of the events of a node.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeEventArgs.#ctor(Infragistics.Controls.Maps.NetworkNodeNodeControl)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Maps.NetworkNodeEventArgs"/> class.
            </summary>
            <param name="nodeControl">The node control.</param>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeEventArgs.NodeControl">
            <summary>
            Gets the node.
            </summary>
            <value>The node.</value>
        </member>
        <member name="T:Infragistics.Controls.Maps.NetworkNodeLayoutAssignedEventArgs">
            <summary>
            The event arguments of the events fired when a node layout is assinged.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeLayoutAssignedEventArgs.#ctor(Infragistics.Controls.Maps.NetworkNodeNodeLayout,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Maps.NetworkNodeLayoutAssignedEventArgs"/> class.
            </summary>
            <param name="nodeLayout">The node layout.</param>
            <param name="dataType">Type of the data.</param>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeLayoutAssignedEventArgs.NodeLayout">
            <summary>
            Gets or sets the node layout.
            </summary>
            <value>The node layout.</value>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeLayoutAssignedEventArgs.DataType">
            <summary>
            Gets the data type.
            </summary>
            <value>The data type.</value>
        </member>
        <member name="T:Infragistics.Controls.Maps.NetworkNodeMouseEventArgs">
            <summary>
            The event arguments of the mouse events of a node.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeMouseEventArgs.#ctor(Infragistics.Controls.Maps.NetworkNodeNodeControl,System.Windows.Input.MouseEventArgs)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Maps.NetworkNodeMouseEventArgs"/> class.
            </summary>
            <param name="nodeControl">The node control.</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeMouseEventArgs.MouseEventArgs">
            <summary>
            Gets or sets the mouse event args.
            </summary>
            <value>The mouse event args.</value>
        </member>
        <member name="T:Infragistics.Controls.Maps.NetworkNodeMouseWheelEventArgs">
            <summary>
            The event arguments of the mouse wheel events of a node.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeMouseWheelEventArgs.#ctor(Infragistics.Controls.Maps.NetworkNodeNodeControl,System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Maps.NetworkNodeMouseWheelEventArgs"/> class.
            </summary>
            <param name="nodeControl">The node control.</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseWheelEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeMouseWheelEventArgs.MouseEventArgs">
            <summary>
            Gets or sets the mouse event args.
            </summary>
            <value>The mouse event args.</value>
        </member>
        <member name="T:Infragistics.Controls.Maps.NetworkNodeSelectionEventArgs">
            <summary>
            A class listing the information needed when the selected nodes change.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeSelectionEventArgs.OriginalSelectedNodes">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Maps.SelectedNetworkNodesCollection"/> of nodes that were previously selected.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeSelectionEventArgs.CurrentSelectedNodes">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Maps.SelectedNetworkNodesCollection"/> of nodes that are selected.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Maps.NodeExpansionChangedEventArgs">
            <summary>
            The event arguments of the events fired when a node is expanded or collapsed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.NodeExpansionChangedEventArgs.#ctor(Infragistics.Controls.Maps.NetworkNodeNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Maps.NodeExpansionChangedEventArgs"/> class.
            </summary>
            <param name="node">The node</param>
        </member>
        <member name="P:Infragistics.Controls.Maps.NodeExpansionChangedEventArgs.Node">
            <summary>
            Gets the node.
            </summary>
            <value>The node.</value>
        </member>
        <member name="T:Infragistics.Controls.Maps.Layout">
            <summary>
            XamNetworkNode Layout
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.Layout.#ctor(Infragistics.Controls.Maps.XamNetworkNode)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Object"/> class.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Maps.NetworkNodeConnection">
            <summary>
            An object that represents a single connection data object in the <see cref="T:Infragistics.Controls.Maps.XamNetworkNode"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeConnection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Maps.NetworkNodeConnection"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeConnection.#ctor(Infragistics.Controls.Maps.NetworkNodeNode,Infragistics.Controls.Maps.NetworkNodeNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Maps.NetworkNodeConnection"/> class.
            </summary>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeConnection.LineCapSize">
            <summary>
            Sets or gets the size of line caps.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.NetworkNodeConnection.LineCapSizeProperty">
            <summary>
            Identifies the LineCapSize dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeConnection.LineStartCapSize">
            <summary>
            Sets or gets the size of line start caps.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.NetworkNodeConnection.LineStartCapSizeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.NetworkNodeConnection.LineStartCapSize"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeConnection.LineEndCapSize">
            <summary>
            Sets or gets the size of line end caps.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.NetworkNodeConnection.LineEndCapSizeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.NetworkNodeConnection.LineEndCapSize"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeConnection.LineStartCap">
            <summary>
            Sets or gets a LineCap enumeration that describes the cap at the start of
            connection lines.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.NetworkNodeConnection.LineStartCapProperty">
            <summary>
            Identifies the LineStartCap dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeConnection.LineEndCap">
            <summary>
            Sets or gets a LineCap enumeration that describes the cap at the end of
            connection lines.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.NetworkNodeConnection.LineEndCapProperty">
            <summary>
            Identifies the LineEndCap dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeConnection.LineStyle">
            <summary>
            Gets or sets the line style.
            </summary>
            <value>The line style.</value>
        </member>
        <member name="F:Infragistics.Controls.Maps.NetworkNodeConnection.LineStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.NetworkNodeConnection.LineStyle"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeConnection.LineStartCapStyle">
            <summary>
            Gets or sets the line start cap style.
            </summary>
            <value>The line start cap style.</value>
        </member>
        <member name="F:Infragistics.Controls.Maps.NetworkNodeConnection.LineStartCapStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.NetworkNodeConnection.LineStartCapStyle"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeConnection.LineEndCapStyle">
            <summary>
            Gets or sets the line end cap style.
            </summary>
            <value>The line end cap style.</value>
        </member>
        <member name="F:Infragistics.Controls.Maps.NetworkNodeConnection.LineEndCapStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.NetworkNodeConnection.LineEndCapStyle"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeConnection.DefineConnectionCallback">
            <summary>
            Gets or sets the define connection callback. 
            </summary>                
            <value>The define connection callback.</value>        
            <remarks> 
            The callback is invoked with the following arguments:
            <list type="bullet">
            <item>
            <description>NetworkNodeConnection - the connection object for which a visual representation is created</description>
            </item>
            <item>
            <description>Point - the source point</description>
            </item>
            <item>
            <description>Point - the target point</description>
            </item>
            <item>
            <description>Point - the original source point</description>
            </item>
            <item>
            <description>Point - the original target point</description>
            </item>
            </list>
            </remarks>    
        </member>
        <member name="F:Infragistics.Controls.Maps.NetworkNodeConnection.DefineConnectionCallbackProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.NetworkNodeConnection.DefineConnectionCallback"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeConnection.Line">
            <summary>
            Sets or gets the System.Windows.Media.Brush that specifies how the
            connection line is painted.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.NetworkNodeConnection.LineProperty">
            <summary>
            Identifies the Line dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeConnection.LineThickness">
            <summary>
            Sets or gets the width of the connection line.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.NetworkNodeConnection.LineThicknessProperty">
            <summary>
            Identifies the LineThickness dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeConnection.LineEffect">
            <summary>
            Sets or gets the pixel shader effect to use to paint the connection line.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.NetworkNodeConnection.LineEffectProperty">
            <summary>
            Identifies the LineEffect dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeConnection.Data">
            <summary>
            Gets the underlying data associated with the <see cref="T:Infragistics.Controls.Maps.NetworkNodeConnection"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeConnection.Weight">
            <summary>
            Gets or sets the weight of the connection.
            </summary>
            <value>The weight.</value>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeConnection.Source">
            <summary>
            Gets the source node.
            </summary>
            <value>The source.</value>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeConnection.Target">
            <summary>
            Gets the target node.
            </summary>
            <value>The target.</value>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeConnection.NetworkNode">
            <summary>
            Gets the NetworkNode.
            </summary>
            <value>The network node.</value>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeConnection.Visibility">
            <summary>
            Gets or sets the visibility of a node's connection. A node's connection that is not visible does not render and does not communicate its desired size to layout.
            </summary>            
        </member>
        <member name="F:Infragistics.Controls.Maps.NetworkNodeConnection.VisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.NetworkNodeConnection.Visibility"/> dependency property.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Maps.NetworkNodeNode">
            <summary>
            An object that represents a single node data object in the <see cref="T:Infragistics.Controls.Maps.XamNetworkNode"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeNode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Maps.NetworkNodeNode"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeNode.ExpansionIndicatorVisibility">
            <summary>
            Gets or sets the expansion indicator visibility.
            </summary>
            <value>The expansion indicator visibility.</value>
        </member>
        <member name="F:Infragistics.Controls.Maps.NetworkNodeNode.ExpansionIndicatorVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.NetworkNodeNode.ExpansionIndicatorVisibility"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeNode.OnExpansionIndicatorVisibilityChanged(System.Nullable{System.Windows.Visibility},System.Nullable{System.Windows.Visibility})">
            <summary>
            ExpansionIndicatorVisibilityProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeNode.ExpansionIndicatorStyle">
            <summary>
            Gets or sets the expansion indicator style.
            </summary>
            <value>The expansion indicator style.</value>
        </member>
        <member name="F:Infragistics.Controls.Maps.NetworkNodeNode.ExpansionIndicatorStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.NetworkNodeNode.ExpansionIndicatorStyle"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeNode.OnExpansionIndicatorStyleChanged(System.Windows.Style,System.Windows.Style)">
            <summary>
            ExpansionIndicatorStyleProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeNode.IsExpanded">
            <summary>
            Gets or sets a value indicating whether this instance is expanded.
            </summary>
            <value>
            	<c>true</c> if this instance is expanded; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Infragistics.Controls.Maps.NetworkNodeNode.IsExpandedProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.NetworkNodeNode.IsExpanded"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeNode.OnIsExpandedChanged(System.Boolean,System.Boolean)">
            <summary>
            IsExpandedProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeNode.Style">
            <summary>
            Gets or sets the style.
            </summary>
            <value>The style.</value>
        </member>
        <member name="F:Infragistics.Controls.Maps.NetworkNodeNode.StyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.NetworkNodeNode.Style"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeNode.OnStyleChanged(System.Windows.Style,System.Windows.Style)">
            <summary>
            StyleProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeNode.Visibility">
            <summary>
            Gets or sets the visibility of a node. A node that is not visible does not render and does not communicate its desired size to layout.
            </summary>            
        </member>
        <member name="F:Infragistics.Controls.Maps.NetworkNodeNode.VisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.NetworkNodeNode.Visibility"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeNode.OnVisibilityChanged(System.Windows.Visibility,System.Windows.Visibility)">
            <summary>
            VisibilityProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeNode.IsEditing">
            <summary>
            Gets or sets a value indicating whether an item is currently in editing state. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.NetworkNodeNode.IsEditingProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.NetworkNodeNode.IsEditing"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeNode.OnIsEditingChanged(System.Boolean,System.Boolean)">
            <summary>
            IsEditingProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeNode.IsReadOnly">
            <summary>
            Gets or sets a value indicating whether an item is currently in readonly state. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.NetworkNodeNode.IsReadOnlyProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.NetworkNodeNode.IsReadOnly"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeNode.OnIsReadOnlyChanged(System.Boolean,System.Boolean)">
            <summary>
            IsReadOnlyProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeNode.IsEnabled">
            <summary>
            Gets or sets a value indicating whether the user can interact with the node control.  
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.NetworkNodeNode.IsEnabledProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.NetworkNodeNode.IsEnabled"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeNode.OnIsEnabledChanged(System.Boolean,System.Boolean)">
            <summary>
            IsEnabledProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeNode.ToolTipContentTemplate">
            <summary>
            Gets or sets the tool tip content template.
            </summary>
            <value>The tool tip content template.</value>
        </member>
        <member name="F:Infragistics.Controls.Maps.NetworkNodeNode.ToolTipContentTemplateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.NetworkNodeNode.ToolTipContentTemplate"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeNode.OnToolTipContentTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
            <summary>
            ToolTipContentTemplateProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeNode.Location">
            <summary>
            Gets or sets the coordinates of the upper-left corner of the control relative to the upper-left corner of its container. 
            </summary>
            <value>The location.</value>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeNode.IsActive">
            <summary>
            Gets or sets a value indicating whether the item is active.
            </summary>
            <value><c>true</c> if this instance is active; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeNode.NetworkNode">
            <summary>
            Gets the NetworkNode.
            </summary>
            <value>The NetworkNode.</value>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeNode.NodeLayout">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Maps.NetworkNodeNodeLayout"/> that is associated with the <see cref="T:Infragistics.Controls.Maps.NetworkNodeNode"/>.
            </summary>
            <value>The node layout.</value>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeNode.Degree">
            <summary>
            Gets the sum of node outgoing and node incoming degree.
            </summary>
            <value>The sum of node outgoing and node incoming degree.</value>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeNode.IncomingDegree">
            <summary>
            Gets the node incoming degree.
            </summary>
            <value>The node incoming degree.</value>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeNode.OutgoingDegree">
            <summary>
            Gets the node outgoing degree.
            </summary>
            <value>The node outgoing degree.</value>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeNode.IncomingConnections">
            <summary>
            Gets the node incoming connections.
            </summary>
            <value>The node incoming connections.</value>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeNode.OutgoingConnections">
            <summary>
            Gets the node outgoing connections.
            </summary>
            <value>The node outgoing connections.</value>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeNode.Connections">
            <summary>
            Gets the combined node outcoming and node incoming connections.
            </summary>
            <value>The combined node outcoming and node incoming connections.</value>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeNode.ConnectedNodes">
            <summary>
            Gets the combined node successors and node predecessors nodes.
            </summary>
            <value>The combined node successors and node predecessors nodes.</value>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeNode.Data">
            <summary>
            Gets the underlying data associated with the <see cref="T:Infragistics.Controls.Maps.NetworkNodeNode"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeNode.Control">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Maps.NetworkNodeNodeControl"/> that is attached to the <see cref="T:Infragistics.Controls.Maps.NetworkNodeNode"/>
            </summary>
            <remarks>A Control is only assoicated with a node when it's in the viewport of the <see cref="T:Infragistics.Controls.Maps.NetworkNodeNodesPanel"/></remarks>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeNode.OutConnections">
            <summary>
            Gets or sets the outgoing node's connections.
            </summary>
            <value>The outgoing node's connections.</value>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeNode.InConnections">
            <summary>
            Gets or sets the incoming node's connections.
            </summary>
            <value>The incoming node's connections.</value>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeNode.Successors">
            <summary>
            Gets the node successors.
            </summary>
            <value>The node successors.</value>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeNode.Predecessors">
            <summary>
            Gets the node predecessors.
            </summary>
            <value>The node predecessors.</value>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeNode.X">
            <summary>
            Gets the horizontal positon of the left side of the <see cref="T:Infragistics.Controls.Maps.NetworkNodeNode"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeNode.Y">
            <summary>
            Gets the vertical positon of the top side of the <see cref="T:Infragistics.Controls.Maps.NetworkNodeNode"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeNode.HandleKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Method called when a key action happens while the <see cref="T:Infragistics.Controls.Maps.NetworkNodeNode"/> is currently active.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeNode.IsSelected">
            <summary>
            Gets or sets a value indicating whether an item is currently selected. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeNode.SetSelected(System.Boolean)">
            <summary>
            Sets the selected state of an item. 
            </summary>
            <param name="isSelected">true if node should be selected; otherwise false</param>
        </member>
        <member name="T:Infragistics.Controls.Maps.NetworkNodeNodeControl">
            <summary>
            An object that acts as the visual representaion of a <see cref="T:Infragistics.Controls.Maps.NetworkNodeNode"/> objects.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.NetworkNodeNodeControl.GroupEdit">
            <summary>
            Edit state group.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.NetworkNodeNodeControl.StateEditing">
            <summary>
            Editing state of the Edit state group.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.NetworkNodeNodeControl.StateNotEditing">
            <summary>
            Not Editing state of the Edit state group.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeNodeControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Maps.NetworkNodeNodeControl"/> class.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Maps.NetworkNodeNodeControl.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeNodeControl.NotifyPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:PropertyChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeNodeControl.Interaction">
            <summary>
            Gets or sets the helper that provides all of the standard
            interaction functionality. Making it internal for subclass access.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeNodeControl.UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions"> True to use transitions when updating the visual state, false to
            snap directly to the new visual state.</param>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeNodeControl.Infragistics#IUpdateVisualState#UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeNodeControl.Node">
            <summary>
            Gets the node.
            </summary>
            <value>The node.</value>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeNodeControl.CornerRadius">
            <summary>
            Gets or sets a value that represents the degree to which the corners are rounded. 
            </summary>
            <value>The CornerRadius that describes the degree to which corners are rounded. This property has no default value.</value>
        </member>
        <member name="F:Infragistics.Controls.Maps.NetworkNodeNodeControl.CornerRadiusProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.NetworkNodeNodeControl.CornerRadius"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeNodeControl.OnCornerRadiusChanged(System.Windows.CornerRadius,System.Windows.CornerRadius)">
            <summary>
            CornerRadiusProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:Infragistics.Controls.Maps.NetworkNodeNodeControl.InnerVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.NetworkNodeNodeControl.InnerVisibility"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeNodeControl.OnInnerVisibilityChanged(System.Windows.Visibility,System.Windows.Visibility)">
            <summary>
            InnerVisibilityProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeNodeControl.ExpanderButton">
            <summary>
            Gets the expander button.
            </summary>
            <value>The expander button.</value>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeNodeControl.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) 
            call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>. In simplest terms, this means the method is 
            called just before a UI element displays in an application. For more information, see Remarks.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeNodeControl.MeasureOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the Measure pass of Silverlight layout. Classes can override this method to define their own Measure pass behavior.
            </summary>
            <param name="availableSize">The available size that this object can give to child objects. Infinity (<see cref="F:System.Double.PositiveInfinity"/>) can be specified as a value to indicate that the object will size to whatever content is available.</param>
            <returns>
            The size that this object determines it needs during layout, based on its calculations of the allocated sizes for child objects; or based on other considerations, such as a fixed container size.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeNodeControl.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeNodeControl.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeNodeControl.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.UIElement.MouseRightButtonDown"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeNodeControl.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.UIElement.MouseRightButtonUp"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeNodeControl.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseMove"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeNodeControl.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Provides handling for the MouseEnter event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeNodeControl.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Provides handling for the MouseLeave event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeNodeControl.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseWheel"/> event occurs to provide handling for the event in a derived class without attaching a delegate.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Input.MouseWheelEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeNodeControl.OnCreateAutomationPeer">
            <summary>
            Overrides the framework invocation when an automation peer needs to be created.
            </summary>
            <returns>The a new <see cref="T:Infragistics.Controls.Maps.NetworkNodeNodeAutomationPeer"/>.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeNodeControl.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Provides handling for the GotFocus event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeNodeControl.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Provides handling for the LostFocus event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="T:Infragistics.Controls.Maps.NetworkNodeNodeLayout">
            <summary>
            This class binds the value, text and items source properties of a NetworkNode item to the provided data.
            Paths should be provided which are the names of the properties of the data.
            The data should be of TargetTypeName type.
            </summary>    
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeNodeLayout.TargetTypeName">
            <summary>
            Gets or sets the name of the target type. Only data of that type is bound by this binder.
            </summary>
            <value>The name of the target type.</value>
        </member>
        <member name="F:Infragistics.Controls.Maps.NetworkNodeNodeLayout.TargetTypeNameProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.NetworkNodeNodeLayout.TargetTypeName"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeNodeLayout.ItemTemplate">
            <summary>
            Gets or sets the item template.
            </summary>
            <value>The item template.</value>
        </member>
        <member name="F:Infragistics.Controls.Maps.NetworkNodeNodeLayout.ItemTemplateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.NetworkNodeNodeLayout.ItemTemplate"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeNodeLayout.NodeStyle">
            <summary>
            Gets or sets the node style.
            </summary>
            <value>The node style.</value>
        </member>
        <member name="F:Infragistics.Controls.Maps.NetworkNodeNodeLayout.NodeStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.NetworkNodeNodeLayout.NodeStyle"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeNodeLayout.AllowToolTips">
            <summary>
            Gets or sets a value indicating whether the tooltips are allowed.
            </summary>
            <value><c>true</c> if the tooltips are allowed; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:Infragistics.Controls.Maps.NetworkNodeNodeLayout.AllowToolTipsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.NetworkNodeNodeLayout.AllowToolTips"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeNodeLayout.DisplayMemberPath">
            <summary>
            Gets or sets the text path. It is the name of the property which is bound to the text of the NetworkNodeNode node item.
            </summary>
            <value>The text path.</value>
            <remarks>
            If the ItemTemplate property is set to a value other than null, then the ItemTemplate will override the DisplayMemberPath setting.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Maps.NetworkNodeNodeLayout.DisplayMemberPathProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.NetworkNodeNodeLayout.DisplayMemberPath"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeNodeLayout.ToolTipMemberPath">
            <summary>
            Gets or sets the tool tip path.
            </summary>
            <value>The tool tip path.</value>
        </member>
        <member name="F:Infragistics.Controls.Maps.NetworkNodeNodeLayout.ToolTipMemberPathProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.NetworkNodeNodeLayout.ToolTipMemberPath"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeNodeLayout.ToolTipContentTemplate">
            <summary>
            Gets or sets the tool tip content template.
            </summary>
            <value>The tool tip content template.</value>
        </member>
        <member name="F:Infragistics.Controls.Maps.NetworkNodeNodeLayout.ToolTipContentTemplateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.NetworkNodeNodeLayout.ToolTipContentTemplate"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeNodeLayout.ConnectionWeightMemberPath">
            <summary>
            Gets or sets the name or path of the property that is the weight of the connection.        
            </summary>
            <value>The connection weight member path.</value>
        </member>
        <member name="F:Infragistics.Controls.Maps.NetworkNodeNodeLayout.ConnectionWeightMemberPathProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.NetworkNodeNodeLayout.ConnectionWeightMemberPath"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeNodeLayout.OnConnectionWeightMemberPathChanged(System.String,System.String)">
            <summary>
            ConnectionWeightMemberPathProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeNodeLayout.ConnectionTargetMemberPath">
            <summary>
            Gets or sets a path to a value on the XamNetworkNode's ItemsSource to be used for pointing the target node of the connection.
            </summary>
            <value>The connection target member path.</value>
        </member>
        <member name="F:Infragistics.Controls.Maps.NetworkNodeNodeLayout.ConnectionTargetMemberPathProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.NetworkNodeNodeLayout.ConnectionTargetMemberPath"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeNodeLayout.OnConnectionTargetMemberPathChanged(System.String,System.String)">
            <summary>
            ConnectionTargetMemberPathProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeNodeLayout.ConnectionsMemberPath">
            <summary>
            Gets or sets a path to a value on the XamNetworkNode's ItemsSource to be used for pointing to the connections.
            </summary>
            <value>The connections member path.</value>
        </member>
        <member name="F:Infragistics.Controls.Maps.NetworkNodeNodeLayout.ConnectionsMemberPathProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.NetworkNodeNodeLayout.ConnectionsMemberPath"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeNodeLayout.OnConnectionsMemberPathChanged(System.String,System.String)">
            <summary>
            ConnectionsMemberPathProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeNodeLayout.ExpansionIndicatorVisibility">
            <summary>
            Gets or sets the expansion indicator visibility.
            </summary>
            <value>The expansion indicator visibility.</value>
        </member>
        <member name="F:Infragistics.Controls.Maps.NetworkNodeNodeLayout.ExpansionIndicatorVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.NetworkNodeNodeLayout.ExpansionIndicatorVisibility"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.NetworkNodeNodeLayout.ExpansionIndicatorStyle">
            <summary>
            Gets or sets the expansion indicator style.
            </summary>
            <value>The expansion indicator style.</value>
        </member>
        <member name="F:Infragistics.Controls.Maps.NetworkNodeNodeLayout.ExpansionIndicatorStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.NetworkNodeNodeLayout.ExpansionIndicatorStyle"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeNodeLayout.OnPropertyUpdated(System.String,System.Object,System.Object)">
            <summary>
            Called when a property is updated.
            </summary>
            <param name="propertyName">The name of the property.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="E:Infragistics.Controls.Maps.NetworkNodeNodeLayout.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeNodeLayout.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:PropertyChanged"/> event.
            </summary>
            <param name="ea">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Infragistics.Controls.Maps.NetworkNodeNodeLayoutCollection">
            <summary>
             Collection class for node layouts.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeNodeLayoutCollection.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:CollectionChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Infragistics.Controls.Maps.NetworkNodeNodesPanel">
            <summary>
            Represents a panel containing the XamNetworkNode nodes.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.NetworkNodeNodesPanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Maps.NetworkNodeNodesPanel"/> class.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Maps.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Maps.SelectedNetworkNodesCollection">
            <summary>
            Represents a modifiable collection of <see cref="T:Infragistics.Controls.Maps.NetworkNodeNode"/> objects which have been selected.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.SelectedNetworkNodesCollection.#ctor(Infragistics.Controls.Maps.XamNetworkNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Maps.SelectedNetworkNodesCollection"/> class.
            </summary>
            <param name="networkNode">The network node.</param>
        </member>
        <member name="P:Infragistics.Controls.Maps.SelectedNetworkNodesCollection.NetworkNode">
            <summary>
            Gets or sets a reference to the <see cref="T:Infragistics.Controls.Maps.XamNetworkNode"/> that this collection belongs to. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.SelectedNetworkNodesCollection.CreateNewInstance">
            <summary>
            Creates a new instance of this collection.
            </summary>
            <returns>
            The create new instance.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.SelectedNetworkNodesCollection.OnSelectionChanged(Infragistics.Controls.SelectedCollectionBase{Infragistics.Controls.Maps.NetworkNodeNode},Infragistics.Controls.SelectedCollectionBase{Infragistics.Controls.Maps.NetworkNodeNode})">
            <summary>
            Called when the Selection collection has changed. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.SelectedNetworkNodesCollection.AddItem(System.Int32,Infragistics.Controls.Maps.NetworkNodeNode)">
            <summary>
            Adds the item at the specified index. 
            </summary>
            <param name="index">The zero-based index of the element to add.</param>
            <param name="item">item to be added</param>
        </member>
        <member name="T:Infragistics.Controls.Maps.Strings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.Strings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.Strings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.Strings.Exception_TargetTypeNameIsNullOrEmpty">
            <summary>
              Looks up a localized string similar to NetworkNodeNodeLayout.TargetTypeName is null or empty..
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Maps.XamNetworkNode">
            <summary>
            Represents the XamNetworkNode control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamNetworkNode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Maps.XamNetworkNode"/> class.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Maps.XamNetworkNode.NodeExpansionChanged">
            <summary>
            This event is raised when a <see cref="T:Infragistics.Controls.Maps.NetworkNodeNode"/> is expanded or collapsed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamNetworkNode.OnNodeExpansionChanged(Infragistics.Controls.Maps.NodeExpansionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Maps.XamNetworkNode.NodeExpansionChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:Infragistics.Controls.Maps.NetworkNodeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Infragistics.Controls.Maps.XamNetworkNode.NodeControlAttachedEvent">
            <summary>
            Occurs when a node is attached to the control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamNetworkNode.OnNodeControlAttachedEvent(Infragistics.Controls.Maps.NetworkNodeEventArgs)">
            <summary>
            Raises the <see cref="E:NodeControlAttachedEvent"/> event.
            </summary>
            <param name="e">The <see cref="T:Infragistics.Controls.Maps.NetworkNodeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Infragistics.Controls.Maps.XamNetworkNode.NodeControlDetachedEvent">
            <summary>
            Occurs when a node is detached from the control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamNetworkNode.OnNodeControlDetachedEvent(Infragistics.Controls.Maps.NetworkNodeEventArgs)">
            <summary>
            Raises the <see cref="E:NodeDetachedEvent"/> event.
            </summary>
            <param name="e">The <see cref="T:Infragistics.Controls.Maps.NetworkNodeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Infragistics.Controls.Maps.XamNetworkNode.SelectedNodesCollectionChanged">
            <summary>
            Event raised when the SelectedNodes collection is modified.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamNetworkNode.OnSelectedNodesCollectionChanged(Infragistics.Controls.Maps.SelectedNetworkNodesCollection,Infragistics.Controls.Maps.SelectedNetworkNodesCollection)">
            <summary>
            Called when SelectedNodes collection is modified.
            </summary>
            <param name="originalSelectedNodes">Nodes that were previously selected.</param>
            <param name="currentSelectedNodes">Nodes that are selected.</param>
        </member>
        <member name="E:Infragistics.Controls.Maps.XamNetworkNode.NodeMouseLeftButtonDown">
            <summary>
            Occurs when the mouse left button is pushed over a node.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamNetworkNode.OnNodeMouseLeftButtonDown(Infragistics.Controls.Maps.NetworkNodeClickEventArgs)">
            <summary>
            Raises the <see cref="E:NodeMouseLeftButtonDown"/> event.
            </summary>
            <param name="e">The <see cref="T:Infragistics.Controls.Maps.NetworkNodeClickEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Infragistics.Controls.Maps.XamNetworkNode.NodeMouseLeftButtonUp">
            <summary>
            Occurs when mouse left button is released over a node.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamNetworkNode.OnNodeMouseLeftButtonUp(Infragistics.Controls.Maps.NetworkNodeClickEventArgs)">
            <summary>
            Raises the <see cref="E:NodeMouseLeftButtonUp"/> event.
            </summary>
            <param name="e">The <see cref="T:Infragistics.Controls.Maps.NetworkNodeClickEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Infragistics.Controls.Maps.XamNetworkNode.NodeMouseRightButtonDown">
            <summary>
            Occurs when mouse right button is pushed over a node.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamNetworkNode.OnNodeMouseRightButtonDown(Infragistics.Controls.Maps.NetworkNodeClickEventArgs)">
            <summary>
            Raises the <see cref="E:NodeMouseRightButtonDown"/> event.
            </summary>
            <param name="e">The <see cref="T:Infragistics.Controls.Maps.NetworkNodeClickEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Infragistics.Controls.Maps.XamNetworkNode.NodeMouseRightButtonUp">
            <summary>
            Occurs when mouse right button is released over a node.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamNetworkNode.OnNodeMouseRightButtonUp(Infragistics.Controls.Maps.NetworkNodeClickEventArgs)">
            <summary>
            Raises the <see cref="E:NodeMouseRightButtonUp"/> event.
            </summary>
            <param name="e">The <see cref="T:Infragistics.Controls.Maps.NetworkNodeClickEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Infragistics.Controls.Maps.XamNetworkNode.NodeMouseMove">
            <summary>
            Occurs when mouse is moved over a node.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamNetworkNode.OnNodeMouseMove(Infragistics.Controls.Maps.NetworkNodeMouseEventArgs)">
            <summary>
            Raises the <see cref="E:NodeMouseMove"/> event.
            </summary>
            <param name="e">The <see cref="T:Infragistics.Controls.Maps.NetworkNodeMouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Infragistics.Controls.Maps.XamNetworkNode.NodeMouseWheel">
            <summary>
            Occurs when mouse wheel is moved over a node.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamNetworkNode.OnNodeMouseWheel(Infragistics.Controls.Maps.NetworkNodeMouseWheelEventArgs)">
            <summary>
            Raises the <see cref="E:NodeMouseWheel"/> event.
            </summary>
            <param name="e">The <see cref="T:Infragistics.Controls.Maps.NetworkNodeMouseWheelEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Infragistics.Controls.Maps.XamNetworkNode.NodeMouseDoubleClick">
            <summary>
            Occurs when mouse double clicked over a node.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Maps.XamNetworkNode.NodeLayoutAssigned">
            <summary>
            Occurs when node layout is assigned.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamNetworkNode.OnNodeLayoutAssigned(Infragistics.Controls.Maps.NetworkNodeLayoutAssignedEventArgs)">
            <summary>
            Raises the <see cref="E:NodeLayoutAssigned"/> event.
            </summary>
            <param name="e">The <see cref="T:Infragistics.Controls.Maps.NetworkNodeLayoutAssignedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Infragistics.Controls.Maps.XamNetworkNode.ActiveNode">
            <summary>
            Gets or sets the active node.
            </summary>
            <value>The active node.</value>
        </member>
        <member name="P:Infragistics.Controls.Maps.XamNetworkNode.Nodes">
            <summary>
            Gets the collection of nodes for this XamNetworkNode control.
            </summary>
            <value>The nodes.</value>
        </member>
        <member name="P:Infragistics.Controls.Maps.XamNetworkNode.Connections">
            <summary>
            Gets the collection of connections for this XamNetworkNode control.
            </summary>
            <value>The connections.</value>
        </member>
        <member name="P:Infragistics.Controls.Maps.XamNetworkNode.NodeDistance">
            <summary>
            Gets or sets the optimal distance between node.
            </summary>
            <value>The optimal distance between nodes.</value>
        </member>
        <member name="F:Infragistics.Controls.Maps.XamNetworkNode.NodeDistanceProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.XamNetworkNode.NodeDistance"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamNetworkNode.OnNodeDistanceChanged(System.Double,System.Double)">
            <summary>
            NodeDistanceProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Maps.XamNetworkNode.ItemsSource">
            <summary>
            Gets or sets a collection used to generate the content of the XamNetworkNode. The default is null.
            </summary>       
            <value>The items source.</value>        
        </member>
        <member name="F:Infragistics.Controls.Maps.XamNetworkNode.ItemsSourceProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.XamNetworkNode.ItemsSource"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamNetworkNode.OnItemsSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            ItemsSourceProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Maps.XamNetworkNode.ItemTemplate">
            <summary>
            Gets or sets the node template.
            </summary>
            <value>The item template.</value>
        </member>
        <member name="F:Infragistics.Controls.Maps.XamNetworkNode.ItemTemplateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.XamNetworkNode.ItemTemplate"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamNetworkNode.OnItemTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
            <summary>
            ItemTemplateProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Maps.XamNetworkNode.NodeStyle">
            <summary>
            Gets or sets the node style.
            </summary>
            <value>The node style.</value>
        </member>
        <member name="F:Infragistics.Controls.Maps.XamNetworkNode.NodeStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.XamNetworkNode.NodeStyle"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamNetworkNode.OnNodeStyleChanged(System.Windows.Style,System.Windows.Style)">
            <summary>
            NodeStyleProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Maps.XamNetworkNode.GlobalNodeLayouts">
            <summary>
            A list of NodeLayouts to apply to any data item matched by TargetTypeName.
            </summary>
            <remarks>
            The performance of the NodeLayouts collection is significantly slower than the NodeLayouts collection when using a large number of nodes.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Maps.XamNetworkNode.GlobalNodeLayoutsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.XamNetworkNode.GlobalNodeLayouts"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.XamNetworkNode.AllowToolTips">
            <summary>
            Gets or sets a value indicating whether the tooltips are allowed.
            </summary>
            <value><c>true</c> if the tooltips are allowed; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:Infragistics.Controls.Maps.XamNetworkNode.AllowToolTipsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.XamNetworkNode.AllowToolTips"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamNetworkNode.OnAllowToolTipsChanged(System.Boolean,System.Boolean)">
            <summary>
            AllowToolTipsProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Maps.XamNetworkNode.ToolTipStyle">
            <summary>
            Sets or gets the current XamNetworkNode's ToolTipStyle property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.XamNetworkNode.ToolTipStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.XamNetworkNode.ToolTipStyle"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamNetworkNode.OnToolTipStyleChanged(System.Windows.Style,System.Windows.Style)">
            <summary>
            ToolTipStyleProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Maps.XamNetworkNode.LineCapSize">
            <summary>
            Sets or gets the size of line caps.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.XamNetworkNode.LineCapSizeProperty">
            <summary>
            Identifies the LineCapSize dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.XamNetworkNode.LineStartCapSize">
            <summary>
            Sets or gets the size of line start caps.
            <para>This is a dependency property.</para>
            </summary>        
        </member>
        <member name="F:Infragistics.Controls.Maps.XamNetworkNode.LineStartCapSizeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.XamNetworkNode.LineStartCapSize"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamNetworkNode.OnLineStartCapSizeChanged(System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            LineStartCapSizeProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Maps.XamNetworkNode.LineEndCapSize">
            <summary>
            Sets or gets the size of line end caps.
            <para>This is a dependency property.</para>
            </summary>        
        </member>
        <member name="F:Infragistics.Controls.Maps.XamNetworkNode.LineEndCapSizeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.XamNetworkNode.LineEndCapSize"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamNetworkNode.OnLineEndCapSizeChanged(System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            LineEndCapSizeProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Maps.XamNetworkNode.LineStartCap">
            <summary>
            Sets or gets a LineCap enumeration that describes the cap at the start of
            connection lines.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.XamNetworkNode.LineStartCapProperty">
            <summary>
            Identifies the LineStartCap dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.XamNetworkNode.LineEndCap">
            <summary>
            Sets or gets a LineCap enumeration that describes the cap at the end of
            connection lines.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.XamNetworkNode.LineEndCapProperty">
            <summary>
            Identifies the LineEndCap dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.XamNetworkNode.LineStyle">
            <summary>
            Gets or sets the line style.
            </summary>
            <value>The line style.</value>
        </member>
        <member name="F:Infragistics.Controls.Maps.XamNetworkNode.LineStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.XamNetworkNode.LineStyle"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamNetworkNode.OnLineStyleChanged(System.Windows.Style,System.Windows.Style)">
            <summary>
            LineStyleProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Maps.XamNetworkNode.LineStartCapStyle">
            <summary>
            Gets or sets the line start cap style.
            </summary>
            <value>The line start cap style.</value>
        </member>
        <member name="F:Infragistics.Controls.Maps.XamNetworkNode.LineStartCapStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.XamNetworkNode.LineStartCapStyle"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamNetworkNode.OnLineStartCapStyleChanged(System.Windows.Style,System.Windows.Style)">
            <summary>
            LineStartCapStyleProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Maps.XamNetworkNode.LineEndCapStyle">
            <summary>
            Gets or sets the line end cap style.
            </summary>
            <value>The line end cap style.</value>
        </member>
        <member name="F:Infragistics.Controls.Maps.XamNetworkNode.LineEndCapStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.XamNetworkNode.LineEndCapStyle"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamNetworkNode.OnLineEndCapStyleChanged(System.Windows.Style,System.Windows.Style)">
            <summary>
            LineEndCapStyleProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Maps.XamNetworkNode.Line">
            <summary>
            Sets or gets the System.Windows.Media.Brush that specifies how the
            connection lines are painted.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.XamNetworkNode.LineProperty">
            <summary>
            Identifies the Line dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.XamNetworkNode.LineThickness">
            <summary>
            Sets or gets the width of the connection lines.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.XamNetworkNode.LineThicknessProperty">
            <summary>
            Identifies the LineThickness dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.XamNetworkNode.LineEffect">
            <summary>
            Sets or gets the pixel shader effect to use to paint the connection lines.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.XamNetworkNode.LineEffectProperty">
            <summary>
            Identifies the LineEffect dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.XamNetworkNode.DefineConnectionCallback">
            <summary>
            Gets or sets the define connection callback. 
            </summary>                
            <value>The define connection callback.</value>        
            <remarks> 
            The callback is invoked with the following arguments:
            <list type="bullet">
            <item>
            <description>NetworkNodeConnection - the connection object for which a visual representation is created</description>
            </item>
            <item>
            <description>Point - the source point</description>
            </item>
            <item>
            <description>Point - the target point</description>
            </item>
            <item>
            <description>Point - the original source point</description>
            </item>
            <item>
            <description>Point - the original target point</description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Maps.XamNetworkNode.DefineConnectionCallbackProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.XamNetworkNode.DefineConnectionCallback"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamNetworkNode.OnDefineConnectionCallbackChanged(System.Func{Infragistics.Controls.Maps.NetworkNodeConnection,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.FrameworkElement},System.Func{Infragistics.Controls.Maps.NetworkNodeConnection,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.FrameworkElement})">
            <summary>
            DefineConnectionCallbackProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Maps.XamNetworkNode.ExpansionIndicatorStyle">
            <summary>
            Gets or sets the expansion indicator style.
            </summary>
            <value>The expansion indicator style.</value>
        </member>
        <member name="F:Infragistics.Controls.Maps.XamNetworkNode.ExpansionIndicatorStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.XamNetworkNode.ExpansionIndicatorStyle"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.XamNetworkNode.ExpansionIndicatorVisibility">
            <summary>
            Gets or sets the expansion indicator visibility.
            </summary>
            <value>The expansion indicator visibility.</value>
        </member>
        <member name="F:Infragistics.Controls.Maps.XamNetworkNode.ExpansionIndicatorVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.XamNetworkNode.ExpansionIndicatorVisibility"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Maps.XamNetworkNode.SelectionTypeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Maps.XamNetworkNode.SelectionType"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.XamNetworkNode.SelectionType">
            <summary>
            Gets or sets the <see cref="T:Infragistics.Controls.Maps.NetworkNodeSelectionType"/> which will be applied to all <see cref="T:Infragistics.Controls.Maps.XamNetworkNode"/>s.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Maps.XamNetworkNode.SelectedNodes">
            <summary>
            Gets a collection of <see cref="T:Infragistics.Controls.Maps.XamNetworkNode"/> objects which are currently selected.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamNetworkNode.OnCreateAutomationPeer">
            <summary>
            Overrides the framework invocation when an automation peer needs to be created.
            </summary>
            <returns>The a new <see cref="T:Infragistics.Controls.Maps.XamNetworkNodeAutomationPeer"/>.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamNetworkNode.OnWindowRectChanged(System.Windows.Rect,System.Windows.Rect)">
            <summary>
            WindowRectProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamNetworkNode.OnViewportRectChanged(System.Windows.Rect,System.Windows.Rect)">
            <summary>
            ViewportRectProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamNetworkNode.CanStartNavigation(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Determines whether this instance can start navigation.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> instance containing the event data.</param>
            <returns>
            	<c>true</c> if this instance can start navigation; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamNetworkNode.RenderPreview">
            <summary>
            Renders the preview.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamNetworkNode.OnPropertyUpdated(System.String,System.Object,System.Object)">
            <summary>
            Called when a property is updated.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamNetworkNode.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass)
            call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>. In simplest terms, this means the method is called
            just before a UI element displays in an application. For more information, see Remarks.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamNetworkNode.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.KeyDown"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamNetworkNode.Search``1(System.Predicate{``0})">
            <summary>
            Searches the specified expression.
            </summary>
            <typeparam name="T">The type of underlying data binded in <see cref="P:Infragistics.Controls.Maps.XamNetworkNode.ItemsSource"/> property</typeparam>
            <param name="predicate">The expression to test each node for a condition.</param>
            <returns>An IEnumerable that contains <see cref="T:Infragistics.Controls.Maps.NetworkNodeNode"/>s from the input data that satisfy the condition.</returns>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamNetworkNode.UpdateNodeArrangement">
            <summary>
            Updates the arrangement of nodes.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamNetworkNode.ZoomSelectedNodes">
            <summary>
            Adjusts the window rectangle to fit selected nodes.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamNetworkNode.ZoomNodes(System.Collections.Generic.IEnumerable{Infragistics.Controls.Maps.NetworkNodeNode})">
            <summary>
            Adjusts the window rectangle to fit nodes.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamNetworkNode.UnselectNode(Infragistics.Controls.Maps.NetworkNodeNode)">
            <summary>
            Internal method which will unselect a <see cref="T:Infragistics.Controls.Maps.NetworkNodeNode"/>
            </summary>
            <param name="node">the node which should be unseleceted</param>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamNetworkNode.SelectNode(Infragistics.Controls.Maps.NetworkNodeNode,Infragistics.Controls.Maps.NetworkNodeInvokeAction)">
            <summary>
            Internal method which will select a <see cref="T:Infragistics.Controls.Maps.NetworkNodeNode"/>
            </summary>
            <param name="node">
            Node that should be selected
            </param>
            <param name="action">
            Indicates who involves the selection
            </param>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamNetworkNode.RegisterResources(System.String,System.Reflection.Assembly)">
            <summary>
            Adds an additonal Resx file in which the control will pull its resources from.
            </summary>
            <param name="name">The name of the embedded resx file that contains the resources to be used.</param>
            <param name="assembly">The assembly in which the resx file is embedded.</param>
            <remarks>Don't include the extension of the file, but prefix it with the default Namespace of the assembly.</remarks>
        </member>
        <member name="M:Infragistics.Controls.Maps.XamNetworkNode.UnregisterResources(System.String)">
            <summary>
            Removes a previously registered resx file.
            </summary>
            <param name="name">The name of the embedded resx file that was used for registration.</param>
            <remarks>
            Note: this won't have any effect on controls that are already in view and are already displaying strings.
            It will only affect any new controls created.
            </remarks>
        </member>
    </members>
</doc>
