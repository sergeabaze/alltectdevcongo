<?xml version="1.0"?>
<doc>
    <assembly>
        <name>InfragisticsWPF4.Controls.Barcodes.BarcodeReader.v17.2</name>
    </assembly>
    <members>
        <member name="F:Infragistics.Controls.Barcodes.BarcodeAlgorithm.NumericChars">
            <summary>
            Valid Numeric characters string.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.BarcodeAlgorithm.AlphanumericChars">
            <summary>
            Valid alphanumeric characters string.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.BarcodeAlgorithm.AsciiChars">
            <summary>
            String of all ASCII characters;
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.BarcodeAlgorithm.MinWidthToHeightRatio">
            <summary>
            The minimum value of the WidthToHeight property range.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.BarcodeAlgorithm.MaxWidthToHeightRatio">
            <summary>
            The maximum value of the WidthToHeight property range.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.BarcodeAlgorithm.DefaultAspectRatio">
            <summary>
            The defaul aspect ratio, used when no other dimensions are defined.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.BarcodeAlgorithm.MinXDimension">
            <summary>
            Define the minimum XDimension valid value.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.BarcodeAlgorithm.MaxXDimension">
            <summary>
            The maximum value of the XDimension property range.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.BarcodeAlgorithm.DefaultWidthToHeightRatio">
            <summary>
            The default value of the width to height ratio.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.BarcodeAlgorithm.DefaultXDimension">
            <summary>
            The nominal value of the XDimension property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BarcodeAlgorithm.BaseConvert(System.Int32,System.String,System.Int32)">
            <summary>
            Convert a string number represented in From base system to To base system.
            </summary>
            <param name="to">The name of the system in which the number will be converted.</param>
            <param name="text">The text.</param>
            <param name="from">The name of the system the number is represented in.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BarcodeAlgorithm.Pow(System.Int32,System.Int32)">
            <summary>
            Returns the specified base value to its power-th degree.
            </summary>
            <param name="baseValue">The base value.</param>
            <param name="powerValue">The power value.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BarcodeAlgorithm.ReverseInt(System.Int32)">
            <summary>
            Reverses an integer value string.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BarcodeAlgorithm.ConvertHexToIntValue(System.String)">
            <summary>
            Converts hexademical value to its integer representation.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BarcodeAlgorithm.ConvertDecimalToHexValue(System.String)">
            <summary>
            Converts large decimal number to its hexadecimal representation.
            </summary>
            <param name="number">The decimal number to convert.</param>
            <returns>The hexadecimal representation of the big decimal number.</returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BarcodeAlgorithm.ConvertHexToDecimalValue(System.String)">
            <summary>
            Converts large hexadecimal number to decimal representation.
            </summary>
            <param name="hex">The hexadecimal number to convert.</param>
            <returns>The decimal representation of the hexadecimal number.</returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BarcodeAlgorithm.GetRemainder(System.String,System.Int32)">
            <summary>
            Gets the remainder from a division of a string represented number by an integer divider.
            </summary>
            <param name="number">The string represented number.</param>
            <param name="divider">The divider.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BarcodeAlgorithm.GetDivisor(System.String,System.Int32)">
            <summary>
            Gets the divisor from a division of a string represented number by an integer divider.
            </summary>
            <param name="number">The string represented number.</param>
            <param name="divider">The divider.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BarcodeAlgorithm.AreCharsValid(System.String,System.String)">
            <summary>
            Check if the code has characters only from the corresponding characters set.
            </summary>
            <param name="code">The code.</param>
            <param name="validChars">The valid characters set.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BarcodeAlgorithm.ValidateNumericCodeLength(System.String,System.Int32)">
            <summary>
            Validates if the input is a numeric data with the corresponding length.
            </summary>
            <param name="code">The code that should be validated.</param>
            <param name="length">The length that should be the code.</param>
            <returns></returns>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.Code128Algorithm.MaxNumberEncodedChars">
            <summary>
            The maximum characters number that can be encoded in a symbol.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.Code128Algorithm.Code128Chars">
            <summary>
            Sequence of the encoding bits for the all Code128 characters.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.Code128Algorithm.StopChar">
            <summary>
            Sequence of the encoding pits for the stop character.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Code128Algorithm.GenerateCheckDigit(System.String)">
            <summary>
            Generates the check digit concerning modulo 103.
            </summary>
            <param name="code">The code.</param>
            <returns>The check digit.</returns>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.Code39Algorithm.ValidCode39Chars">
            <summary>
            The valid characters set for Code39 symbology.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.Code39Algorithm.Code39Chars">
            <summary>
            The Code39 characters bars widths sequence
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.EanUpcAlgorithm.Odd">
            <summary>
            Odd parity marker.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.EanUpcAlgorithm.Even">
            <summary>
            Even parity marker.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.EanUpcAlgorithm.ValidUpcEanChars">
            <summary>
            The valid characters set for EAN/UPC types.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.EanUpcAlgorithm.FinderPattern">
            <summary>
            Finder pattern sequence.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.EanUpcAlgorithm.MiddlePattern">
            <summary>
            Middle pattern sequence.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.EanUpcAlgorithm.UpcEStopPattern">
            <summary>
            Stop pattern sequence for the UpcE symbol.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.EanUpcAlgorithm.ConvertUpcEToUpcA(System.String)">
            <summary>
            Converts the UPC-E code to UPC-A.
            </summary>
            <param name="upcE">The upc E.</param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.Gf256">
            <summary>
            Describe Galois Field for 256 - a closed field of 0..256.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.Gf256.GfNumber">
            <summary>
            GF is an closed-field => all operations between values in the field produce another value in the field.
            GfNumber defines the Size and the Prime Polynomial of this Galois field.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.Gf256.N">
            <summary>
            GF(256) contains all integers of 00 to N=255; 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Gf256.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Barcodes.Gf256"/> class.
            </summary>
            <param name="primePolynom">The decimal value of the prime polynom for creating of the GF(256 instance).</param>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Gf256.CalculatePolynomialAt(System.Int32[],System.Int32)">
            <summary>
            Evaluates a polynomial g(x) with the specified coefficients at a point, i.e. g(a).
            </summary>
            <param name="polynomialCoefficients">The polynomial coefficients.</param>
            <param name="point">The point A for evaluation.</param>
            <returns>
            Evaluation of the polynomial at a given point.
            </returns>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.GfArithmetics">
            <summary>
            Describe arithmetic operations in a Power-of-Two Galois Field.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.GfArithmetics.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Barcodes.GfArithmetics"/> class.
            </summary>
            <param name="gf">The power-of-two gf number.</param>
        </member>
        <member name="P:Infragistics.Controls.Barcodes.GfArithmetics.GfInstance">
            <summary>
            Gets or sets the power-of-two number GF.
            </summary>
            <value>The GF.</value>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.GfArithmetics.CreateLogArrays(System.Int32)">
            <summary>
            Creates the log and antiLog arrays with appropriate integer values.
            </summary>
            <param name="primePolynom">The PP.</param>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.GfArithmetics.Sum(System.Int32,System.Int32)">
            <summary>
            Calculates the Sum within the current GF field.
            </summary>
            <param name="a">The first addend.</param>
            <param name="b">The second addend.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.GfArithmetics.Sum(System.Int32[],System.Int32[])">
            <summary>
            Calculates the Sums of two coefficients arrays within the current GF field.
            </summary>
            <param name="aCoefficients">A.</param>
            <param name="bCoefficients">The b.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.GfArithmetics.Sum(System.Byte,System.Byte)">
            <summary>
            Calculates the Sum within the current GF field.
            </summary>
            <param name="a">The first addend.</param>
            <param name="b">The second addend.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.GfArithmetics.CalculateSumOfBits(System.Byte[],System.Byte[])">
            <summary>
            Calculates the sum of bits within current GF field.
            </summary>
            <param name="xa">The xa.</param>
            <param name="xb">The xb.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.GfArithmetics.Difference(System.Int32,System.Int32)">
            <summary>
            Calculates the Difference operation in the GF field.
            The sum and difference between two numbers in GF arithmetics is the same.
            </summary>
            <param name="a">The a.</param>
            <param name="b">The B.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.GfArithmetics.Product(System.Int32,System.Int32)">
            <summary>
             Multiplication operation within the current GF field.
            </summary>
            <param name="a">The A.</param>
            <param name="b">The B.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.GfArithmetics.Product(System.Int32[],System.Int32[])">
            <summary>
            Multiplication operation over coefficients arrays within the current GF field.
            </summary>
            <param name="aCoefficients">A coefficients.</param>
            <param name="bCoefficients">The b coefficients.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.GfArithmetics.Product(System.Int32[],System.Int32)">
            <summary>
            Multiplication operation of coeffients array with a scalar value within the current GF field.
            </summary>
            <param name="coefficients">The coefficients.</param>
            <param name="scalar">The scalar.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.GfArithmetics.Quotient(System.Int32,System.Int32)">
            <summary>
            Division operation within the current GF field.
            </summary>
            <param name="a">The A.</param>
            <param name="b">The B.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.GfArithmetics.Inverse(System.Int32)">
            <summary>
            Multiplicative inverse of a.
            </summary>
            <param name="a">A.</param>
            <returns>Multiplicative inverse of a.</returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.GfArithmetics.RemoveLeadingZeros(System.Int32[])">
            <summary>
            As the coefficient are polinomial coefficient, when leading zeroes, we could remove them.
            </summary>
            <param name="coefficients">The coefficients.</param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.QRReedSolomon">
            <summary>
            A Galois field of 2 power of 8 with 100011101 (decimal 285) representing the field's prime modulus 
            polynomial x8 + x4 + x3 + x2 +1.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.QRReedSolomon.#ctor(Infragistics.Controls.Barcodes.Implementation.BarcodeSR)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Barcodes.QRReedSolomon"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.QRReedSolomon.GenerateErrorCorrectionCodewords(System.Int32[],System.Int32,System.Int32[],System.Int32,System.Int32)">
            <summary>
            Generates the error correction codewords, calculated using bit-wise modulo 2 arithmetic and bytewise
            modulo 100011101 (285) arithmetic.
            </summary>
            <param name="codewords">The codewords.</param>
            <param name="rsEccCodewords">The reed solomon error correction codewords number.</param>
            <param name="rsBlockOrder">The reed solomon block order.</param>
            <param name="maxDataCodewords">The maximum data codewords.</param>
            <param name="maxCodewords">The maximum codewords number = data + error correction.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.QRReedSolomon.DisassembleDataBlocksCodewords(System.Byte[],System.Byte[],System.Byte,System.Int32[]@)">
            <summary>
            Orders the final codewords into blocks codewords (data + error correction ones).
            </summary>
            <param name="codewords">The codewords.</param>
            <param name="blocksOrder">The blocks order.</param>
            <param name="eccNumberPerBlock">The ecc number per block.</param>
            <param name="dataCodewordsPerBlock">The data codewords per block.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.QRReedSolomon.CorrectBlockDataBytes(System.Byte[],System.Int32)">
            <summary>
            Corrects the block data bytes with the error correction codewords. See Annex B from the ISO.
            </summary>
            <param name="blockDataBytes">The block data + error correction codewords bytes.</param>
            <param name="eccNumber">The number of the error correction codewords in the block.</param>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Gs1DataBarAlgorithm.CalculateBarsWidths(System.Int64,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Generate widths for GS1 DataBar elements for a given value.
            </summary>
            <param name="value">The required value.</param>
            <param name="n">The number of modules.</param>
            <param name="elements">The elements in set (GS1 DataBar 14 and Expanded = 4; GS1 DataBar Limited = 7).</param>
            <param name="maxWidth">The maximum module width of an element.</param>
            <param name="noNarrow">if set to <c>false</c> skip patterns without a narrow element.</param>
            <returns>The element widths.</returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Gs1DataBarAlgorithm.CalculateValue(System.Int32[],System.Int32,System.Int32,System.Boolean)">
            <summary>
            Calculates the value of n,k character subset by given GS1 DataBar elements widths.
            Opposite to CalculateBarsWidths(...).
            </summary>
            <param name="widths">The widths of the GS1 DataBar elements.</param>
            <param name="k">The k.</param>
            <param name="maxWidth">The maximum module width of an element.</param>
            <param name="noNarrow">if set to <c>false</c> skip patterns without a narrow element.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Gs1DataBarAlgorithm.NumberOfCombinations(System.Int32,System.Int32)">
            <summary>
            Calculate the number of Combinations of r selected from n:
            Combinations = n! /( n-r! * r!) */
            </summary>
            <param name="n">The n.</param>
            <param name="r">The r.</param>
            <returns>The number of calculations.</returns>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.Gs1Helper">
            <summary>
            Helper file for work with all Application Identifiers (AI).
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.Gs1Helper.AIs">
            <summary>
            Gets or sets the GS1 Application Identifiers in numerical order, represented by:
            AIs[AI] = Number of the Digits (if Number == -1 then FNC1 is required)
            </summary>
            <value>The A is.</value>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Gs1Helper.VerifyApplicationIdentifier(System.String,System.Char)">
            <summary>
            Verifies the Application Identifier (AI) and make it in the encodable format.
            </summary>
            <param name="code">The code.</param>
            <param name="fnc1">The FNC1.</param>
            <returns>The code, formated for encoding.</returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Gs1Helper.GenerateCheckDigit(System.String)">
            <summary>
            Generates the last check digit for the GS barcodes family by the given AI number.
            </summary>
            <param name="code">The AI number code.</param>
            <returns></returns>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.IntelligentMailAlgorithm.ValidIntelligentMailChars">
            <summary>
            The valid character set for IntelligentMail symbology.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.IntelligentMailAlgorithm.VerticalClearZone">
            <summary>
            The width of the vertical clear zone in modules.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.IntelligentMailAlgorithm.GenerateImbTables(System.Int32,System.Int32)">
            <summary>
            Generates the Nof13 tables used for Intelligent Mail Barcode (IMB).
            </summary>
            <param name="n">The type of table: 2 for 2of13 table, 5 for 5of13table.</param>
            <param name="size">The size of table (78 for n=2 and 1287 for n=5).</param>
            <returns></returns>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.Interleaved2Of5Algorithm.ValidI25Chars">
            <summary>
            The valid character set for I25 symbology.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.Interleaved2Of5Algorithm.CharLength">
            <summary>
            The modules length of a character encodation.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.Interleaved2Of5Algorithm.I25Chars">
            <summary>
             basic bars widths sequence
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.Interleaved2Of5Algorithm.StartPattern">
            <summary>
            The start pattern for every I2of5 symbol.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.Interleaved2Of5Algorithm.StopPattern">
            <summary>
            The end patternd for every I2Of5 symbol.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.Pdf417Algorithm.QuietHZone">
            <summary>
            horizontal quiet zone in modules
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.Pdf417Algorithm.QuietVZone">
            <summary>
            vertical quiet zone in modules
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Pdf417Algorithm.GetErrorCorrectionCodewordCount(System.Int32)">
            <summary>
            Gets the number of the error correction codewords.
            </summary>
            <param name="errorCorrectionLevel">The error correction level.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Pdf417Algorithm.IsAspectRatioValid(System.Double)">
            <summary>
            Determines whether aspect ration value is valid.
            </summary>
            <returns>
            	<c>true</c> if [aspect ration is valid]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.QRCodeAlgorithm">
            <summary>
            Helper class implementing the QR Code algorithm logic.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.QRCodeAlgorithm.ValidQrAlphanumercChars">
            <summary>
            String of valid characters when in Alphanumeric compaction mode.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.QRCodeAlgorithm.ValidQrByteChars">
            <summary>
            String of valid characters when in Byte mode.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.QRCodeAlgorithm.ValidQrKanjiChars">
            <summary>
            String of valid characters when in KanjiMode.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.QRCodeAlgorithm.QuietVZone">
            <summary>
            vertical quiet zone in modules.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.QRCodeAlgorithm.QuietHZone">
            <summary>
            horizontal quiet zone in modules.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.QRCodeAlgorithm.DefaultEciNumber">
            <summary>
            The default ECI number representing the ISO/IEC 8859-1 character set.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.QRCodeAlgorithm.MaxEciNumber">
            <summary>
            The maximum valid number for the EciNumber property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.QRCodeAlgorithm.MinEciNumber">
            <summary>
            The minimum valid number for the EciNumber property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.QRCodeAlgorithm.MaxDataLength">
            <summary>
            The maximum data characters enconded per symbol encoding mode and error correction level.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.QRMask">
            <summary>
            Describes the QR Code masking logic.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.ResourceHelper">
            <summary>
            Helper methods for resource reading.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.ResourceHelper.GetResourceBytes(System.String)">
            <summary>
            Gets the resource.
            </summary>
            <param name="filename">The filename.</param>
            <returns>Bytes array of the read data.</returns>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.RoyalMailAlgorithm.ValidRoyalMailChars">
            <summary>
            The valid characters set of the RoyalMail symbology.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.RoyalMailAlgorithm.RoyalMailChars">
            <summary>
            Modules encodating sequence for the characters.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.RoyalMailAlgorithm.TopQuietZone">
            <summary>
            Modules number of the top quiet zone.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.RoyalMailAlgorithm.BottomQuietZone">
            <summary>
            Modules number of the bottom quiet zone.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.RoyalMailAlgorithm.#cctor">
            <summary>
            Initializes the <see cref="T:Infragistics.Controls.Barcodes.RoyalMailAlgorithm"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.RoyalMailAlgorithm.GenerateCheckSum(System.String)">
            <summary>
            Generates the check sum.
            </summary>
            <param name="code">The code.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.MathHelper.GetLinePoints(Infragistics.Controls.Barcodes.PointInt,Infragistics.Controls.Barcodes.PointInt)">
            <summary>
            Gets all points of line specified by start/left and end/right point.
            </summary>
            <param name="start">The left.</param>
            <param name="end">The right.</param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.PerspectiveTransformation">
            <summary>
            Describes a perspective transformation methods used for mapping one arbitrary 2D quadrilateral into another.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.PerspectiveTransformation.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Barcodes.PerspectiveTransformation"/> class with the specified matrix arguments.
            </summary>
            <param name="a11">The a11.</param>
            <param name="a21">The a21.</param>
            <param name="a31">The a31.</param>
            <param name="a12">The a12.</param>
            <param name="a22">The a22.</param>
            <param name="a32">The a32.</param>
            <param name="a13">The a13.</param>
            <param name="a23">The a23.</param>
            <param name="a33">The a33.</param>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.PerspectiveTransformation.TransformPoints(System.Single[])">
            <summary>
            Transforms the array of points with the current projection.
            </summary>
            <param name="points">The points.</param>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.PerspectiveTransformation.TransformPoints(System.Single[],System.Single[])">
            <summary>
            Transforms the specivied x and y values of the points with the current projection.
            </summary>
            <param name="xValues">The x values.</param>
            <param name="yValues">The y values.</param>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.PerspectiveTransformation.BuildAdjoint">
            <summary>
            Adjoint is the transpose of the cofactor matrix.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.BarcodeReader">
            <summary>
            Defines the BarcodeReader class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Barcodes.BarcodeReader.BarcodeOrientation">
            <summary>
            Gets or sets a SymbolOrientation enumeration value indicating the symbol orientation in the image.
            The default value SymbolOrientation.None specifies scanning to both Horizontal and Vertical orientation.
            Use this property to improve the performance of the barcode reader.
            </summary>
            <value>The barcode orientation.</value>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.BarcodeReader.BarcodeOrientationProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Barcodes.BarcodeReader.BarcodeOrientation"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BarcodeReader.OnBarcodeOrientationChanged(Infragistics.Controls.Barcodes.SymbolOrientation,Infragistics.Controls.Barcodes.SymbolOrientation)">
            <summary>
            BarcodeOrientationProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Barcodes.BarcodeReader.MaxNumberOfSymbolsToRead">
            <summary>
            Specifies the maximum barcode symbols number that will be expected in the image.
            The default value is 1. Set it to -1 to indicate no limit and look for all symbols in the image.   
            Use this property to improve the performance of the barcode reader.
            </summary>
            <value><c>true</c> if [multiple symbols read]; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.BarcodeReader.MaxNumberOfSymbolsToReadProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Barcodes.BarcodeReader.MaxNumberOfSymbolsToRead"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BarcodeReader.OnMultipleSymbolsReadChanged(System.Int32,System.Int32)">
            <summary>
            MultipleSymbolsReadProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Barcodes.BarcodeReader.FilteredImage">
            <summary>
            Gets or sets the filtered image after the decoding specifying the decoded barcode symbols.
            Do not use this property when performing the decoding by the DecodeAsync method - use instead the 
            FilteredImage argument of the DecodeComplete event handler. 
            </summary>
            <value>The filtered image.</value>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.BarcodeReader.FilteredImageProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Barcodes.BarcodeReader.FilteredImage"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BarcodeReader.OnFilteredImageChanged(System.Windows.Media.Imaging.BitmapSource,System.Windows.Media.Imaging.BitmapSource)">
            <summary>
            FilteredImageProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Barcodes.BarcodeReader.MinSymbolSize">
            <summary>
            Gets or sets the minumum size in pixels that a symbol could be (width and height).
            The property is used only for linear symbologies when the barcode zones are created.
            The default value is unspecified (-1). Use this property to improve the performance 
            of the barcode reader when you know what will be the minimum pixels size of the barcode
            symbol in the image.
            </summary>
            <value>The size of the min symbol.</value>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.BarcodeReader.MinSymbolSizeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Barcodes.BarcodeReader.MinSymbolSize"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BarcodeReader.OnMinSymbolSizeChanged(System.Int32,System.Int32)">
            <summary>
            MinSymbolSizeProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.BarcodeReader.Zones">
            <summary>
            A list of the already found zones with barcode symbols. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BarcodeReader.Decode(System.Windows.Media.Imaging.BitmapSource)">
            <summary>
            Decodes synchronously the specified bitmap per all supported symbologies. 
            </summary>
            <param name="bitmap">The bitmap.</param>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BarcodeReader.Decode(System.Windows.Media.Imaging.BitmapSource,Infragistics.Controls.Barcodes.Symbology)">
            <summary>
            Decodes synchronously the specified bitmap per specified symbologies.
            </summary>
            <param name="bitmap">The bitmap.</param>
            <param name="symbologyTypes">The symbology types.</param>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BarcodeReader.DecodeAsync(System.Windows.Media.Imaging.BitmapSource)">
            <summary>
            Decodes asynchronously the specified bitmap per all symbologies.
            </summary>
            <param name="bitmap">The bitmap.</param>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BarcodeReader.DecodeAsync(System.Windows.Media.Imaging.BitmapSource,Infragistics.Controls.Barcodes.Symbology)">
            <summary>
            Decodes asynchronously the specified bitmap per specified symbologies.
            </summary>
            <param name="bitmap">The bitmap.</param>
            <param name="symbologyTypes">The symbology types.</param>
        </member>
        <member name="E:Infragistics.Controls.Barcodes.BarcodeReader.DecodeComplete">
            <summary>
            Occurs when decoding is completed no matter a symbol is found or not.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BarcodeReader.ResultData.#ctor(System.String,Infragistics.Controls.Barcodes.Symbology)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Barcodes.BarcodeReader.ResultData"/> struct.
            </summary>
            <param name="data">The data.</param>
            <param name="symbology">The symbology.</param>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.BarcodeReader.ResultData.Data">
            <summary>
            The decoded symbol's data.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.BarcodeReader.ResultData.Symbology">
            <summary>
            The decoded symbol's symbology.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.BarcodeCharacter">
            <summary>
            Describes a barcode character
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BarcodeCharacter.#ctor(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Barcodes.BarcodeCharacter"/> class.
            </summary>
            <param name="data">The bytes data which the character consists of.</param>
            <param name="pixelLength">The number of the pixels which the character holds.</param>
            <param name="symbologyCharLength">Length of the char in modules.</param>
        </member>
        <member name="P:Infragistics.Controls.Barcodes.BarcodeCharacter.DataSequence">
            <summary>
            Gets or sets the bytes sequence of the data.
            </summary>
            <value>The data sequence.</value>
        </member>
        <member name="P:Infragistics.Controls.Barcodes.BarcodeCharacter.PixelsCount">
            <summary>
            Gets or sets the number of the pixels which the character holds.
            </summary>
            <value>The pixels count/number.</value>
        </member>
        <member name="P:Infragistics.Controls.Barcodes.BarcodeCharacter.SymbologyCharLength">
            <summary>
            Gets or sets the length of the char in modules.
            </summary>
            <value>The length of the char.</value>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.BarcodeDecoder">
            <summary>
            Describes the main decoder characteristics and methods. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.BarcodeDecoder.White">
            <summary>
            Specifies the White pixel.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.BarcodeDecoder.Black">
            <summary>
            Specifies the Black pixel
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.BarcodeDecoder.NotFound">
            <summary>
            Describes the not found constant. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BarcodeDecoder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Barcodes.BarcodeDecoder"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Barcodes.BarcodeDecoder.Data">
            <summary>
            Stores in a List the decoded data strings. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Barcodes.BarcodeDecoder.StartCharPixelsCount">
            <summary>
            The number of the pixels in the start character.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BarcodeDecoder.GetModulesSequence(System.Int32[],System.Double,System.Int32)">
            <summary>
            Gets the sequence of modules for the specified pixels array depending of the modules number for the character.
            </summary>
            <param name="charPixels">The bars and spaces pixels array for the character.</param>
            <param name="threshold">The threshold for the black and white pixels.</param>
            <param name="modulesLength">Number of the modules for the character.</param>
            <returns>A modules array.</returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BarcodeDecoder.FindPattern(System.Byte[],System.Int32,System.Byte[],System.Byte)">
            <summary>
            Starting at the query position, scan bars until we encounter the desired character.
            If we do, return the starting position of that character.
            </summary>
            <param name="vals">Barcode pixel values</param>
            <param name="queryPos">The query position</param>
            <param name="pattern">The start pattern.</param>
            <param name="firstModuleColor">The color of the first module in the character.</param>
            <returns>
            The start position of the first start character found. Returns NotFound (-1) if no start character found.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BarcodeDecoder.GetCharacterPixelsNumber(System.Byte[],System.Int32,System.Byte[],System.Byte)">
            <summary>
            Check if a start character pattern is found in the bytes sequence from the startPos
            </summary>
            <param name="vals">The vals.</param>
            <param name="startPos">The start pos.</param>
            <param name="pattern">The start pattern.</param>
            <param name="firstModuleColor">The color of the the first module from the character.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BarcodeDecoder.GetCharPixels(System.Byte[],System.Int32,System.Int32,System.Byte)">
            <summary>
            Extracts an array of pixels for the required number of modules.
            </summary>
            <param name="pixels">The pixels array.</param>
            <param name="curPos">The cur pos.</param>
            <param name="elementsCount">The number of the space and bar elements we are looking for.</param>
            <param name="firstModuleColor">The color of the the module of the character.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BarcodeDecoder.GetBarPixelsNumber(System.Byte[],System.Int32)">
            <summary>
            Calculates the number of the pixels with the same color.
            </summary>
            <param name="vals">The bytes sequence.</param>
            <param name="startPos">The start position.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BarcodeDecoder.AreArraysEqual(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Check if two arrays are equal.
            </summary>
            <param name="arr1">The first array.</param>
            <param name="arr2">The second array.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BarcodeDecoder.ClearProperties">
            <summary>
            Clears the internally used properties values.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BarcodeDecoder.ApplyThresholdFunctionByLuminanceThresh(System.Collections.Generic.List{System.Byte[]},System.Int32@)">
            <summary>
            Applies the threshold function over a row/column of pixels. We use data from the above and bellow
            rows to determine the threshold and the color of the pixels to improve the performance of the reader.
            </summary>
            <param name="luminanceList">The three rows of pixels. We need to convert the middle one to monochrome, while the top and bottom are used for additional data.</param>
            <param name="threshold">[out] The threshold used for this row.</param>
            <returns>A pixel array with monochrome (black and white) data.</returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BarcodeDecoder.GetByteSequenceString(System.Byte[])">
            <summary>
            Gets the string of the byte sequence.
            </summary>
            <param name="input">The input.</param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.BarcodeDecoderService">
            <summary>
            A service class used for decoding the pixels data per all specified symbologies.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BarcodeDecoderService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Barcodes.BarcodeDecoderService"/> class
            used for decoding the pixels data per all specified symbologies.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BarcodeDecoderService.#ctor(Infragistics.Controls.Barcodes.Symbology,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Barcodes.BarcodeDecoderService"/> class
            used for decoding the pixels data per all specified symbologies.
            </summary>
            <param name="symbologyTypes">The symbology types.</param>
            <param name="maxNumberOfSymbolsToRead">The max number of symbols to read.</param>
            <param name="isImageZoomed">if set to <c>true</c> the image data we are decoding is zoomed for better recognition.</param>
        </member>
        <member name="P:Infragistics.Controls.Barcodes.BarcodeDecoderService.Symbology">
            <summary>
            Gets or sets the symbology/ies.
            </summary>
            <value>The symbology.</value>
        </member>
        <member name="P:Infragistics.Controls.Barcodes.BarcodeDecoderService.MaxNumberOfSymbolsToRead">
            <summary>
            Gets or sets the maximum number of symbols which are going to be recognized.
            </summary>
            <value>The max number of symbols to read.</value>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BarcodeDecoderService.IsRequested(Infragistics.Controls.Barcodes.Symbology)">
            <summary>
            Determines whether the specified symbology type is requested for recognition.
            </summary>
            <param name="symbologyType">Type of the symbology.</param>
            <returns>
            	<c>true</c> if the specified symbology type is requested; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BarcodeDecoderService.GetDecoder(Infragistics.Controls.Barcodes.Symbology)">
            <summary>
            Returns the decoder for the specified symbology type.
            </summary>
            <param name="symbologyType">Type of the symbology.</param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.Code128Decoder">
            <summary>
            Specifies the Code128 symbology logic for decoding.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Code128Decoder.#cctor">
            <summary>
            Initializes the <see cref="T:Infragistics.Controls.Barcodes.Code128Decoder"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Code128Decoder.Decode(System.Byte[])">
            <summary>
            Decodes the specified pixels.
            </summary>
            <param name="pixels">The pixels.</param>
            <returns>A list of decoded data strings.</returns>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.Code39Decoder">
            <summary>
            Specifies the Code39 symbology logic for decoding.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Code39Decoder.#cctor">
            <summary>
            Initializes the <see cref="T:Infragistics.Controls.Barcodes.Code39Decoder"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Code39Decoder.Decode(System.Byte[])">
            <summary>
            Decodes the specified pixels.
            </summary>
            <param name="pixels">The pixels.</param>
            <returns>A list of decoded data strings.</returns>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.Code39ExtDecoder">
            <summary>
            Specifies the Code39 Extended symbology logic for decoding
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Code39ExtDecoder.Decode(System.Byte[])">
            <summary>
            Decodes the specified pixels.
            </summary>
            <param name="pixels">The pixels.</param>
            <returns>A list of decoded data strings.</returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.ComplexLinearBarcodeDecoder.InjectProperties(Infragistics.Controls.Barcodes.BarcodeZone)">
            <summary>
            Sets the minimum size of a barcode symbol.
            Used for the complex linear symbologies - GS1DataBarStacked and Postal ones.
            </summary>
            <param name="scanningZone">The zone we are scanning the barcode in.</param>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.ComplexLinearBarcodeDecoder.ClearProperties">
            <summary>
            Clears the properties.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.ComplexLinearBarcodeDecoderService">
            <summary>
            A service used for decoding the pixels data per specified complex linear symbologies (GS1 DataBar Stacked and Postal ones).
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.ComplexLinearBarcodeDecoderService.#ctor(Infragistics.Controls.Barcodes.Symbology,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Barcodes.ComplexLinearBarcodeDecoderService"/> class.
            </summary>
            <param name="symbologyTypes">The symbology types.</param>
            <param name="maxNumberOfSymbolsToRead">The max number of symbols to read.</param>
            <param name="isImageZoomed">if set to <c>true</c> [is image zoomed].</param>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.ComplexLinearBarcodeDecoderService.Decode(System.Byte[][],Infragistics.Controls.Barcodes.BarcodeZone)">
            <summary>
            Decodes the specified array of pixels.
            </summary>
            <param name="pixels">The pixels.</param>
            <param name="minZoneSize">The minimum size of a barcode symbol.</param>
            <param name="zone">The zone we are scanning.</param>
            <returns>A list of the DecodedData information.</returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.ComplexLinearBarcodeDecoderService.DecodeBySymbology(Infragistics.Controls.Barcodes.ComplexLinearBarcodeDecoder,System.Byte[][],Infragistics.Controls.Barcodes.Symbology,System.Collections.Generic.List{Infragistics.Controls.Barcodes.DecodedData}@,Infragistics.Controls.Barcodes.BarcodeZone)">
            <summary>
            Decodes the pixels sequence by symbology and returns the number of the overall found symbols.
            </summary>
            <param name="decoder">The decoder.</param>
            <param name="pixels">The pixels.</param>
            <param name="symbologyType">Type of the symbology.</param>
            <param name="results">The results.</param>
            <param name="zone">The zone we are scanning.</param>
            <returns>The number of the overall found symbols</returns>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.Ean13Decoder">
            <summary>
            Describes the Ean13 symbology logic for decoding.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Ean13Decoder.#cctor">
            <summary>
            Initializes the <see cref="T:Infragistics.Controls.Barcodes.Ean13Decoder"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Ean13Decoder.CheckData(System.String,System.String)">
            <summary>
            Checks if the data is properly decoded for the specified symbology.
            </summary>
            <param name="data">The data string.</param>
            <param name="charCodeSets">The character code sets of the decoded data string.</param>
            <returns>
            The verified data for the decoded symbology or empty string if the data is not verified.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Ean13Decoder.ShouldLookForFinalPattern(System.Int32)">
            <summary>
            Determine if the found bars and spaces number proper number before the final pattern.
            </summary>
            <param name="barsAndSpacesCount">The number of the bars and spaces counted from the first bar of the symbology.</param>
            <returns>
            A bool value indicating if the number is proper for finding the final pattern.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Ean13Decoder.ShouldLookForMiddlePattern(System.Int32)">
            <summary>
            Determine if the found bars and spaces are proper number before the middle pattern.
            </summary>
            <param name="barsAndSpacesCount">The number of the bars and spaces counted from the first bar of the symbology.</param>
            <returns>
            A bool value indicating if the number is proper for finding the middle pattern.
            </returns>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.Ean8Decoder">
            <summary>
            Describes the Ean8 symbology logic.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Ean8Decoder.CheckData(System.String,System.String)">
            <summary>
            Checks if the data is properly decoded for the specified symbology.
            </summary>
            <param name="data">The data string.</param>
            <param name="charCodeSets">The character code sets of the decoded data string.</param>
            <returns>
            The verified data for the decoded symbology or empty string if the data is not verified.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Ean8Decoder.ShouldLookForFinalPattern(System.Int32)">
            <summary>
            Determine if the found bars and spaces number proper number before the final pattern.
            </summary>
            <param name="barsAndSpacesCount">The number of the bars and spaces counted from the first bar of the symbology.</param>
            <returns>
            A bool value indicating if the number is proper for finding the final pattern.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Ean8Decoder.ShouldLookForMiddlePattern(System.Int32)">
            <summary>
            Determine if the found bars and spaces are proper number before the middle pattern.
            </summary>
            <param name="barsAndSpacesCount">The number of the bars and spaces counted from the first bar of the symbology.</param>
            <returns>
            A bool value indicating if the number is proper for finding the middle pattern.
            </returns>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.EanUpcDecoder">
            <summary>
            Describes the EAN UPC symbologies logic for decoding.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.EanUpcDecoder.#cctor">
            <summary>
            Initializes the <see cref="T:Infragistics.Controls.Barcodes.EanUpcDecoder"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.EanUpcDecoder.Decode(System.Byte[])">
            <summary>
            Decodes the specified pixels.
            </summary>
            <param name="pixels">The pixels.</param>
            <returns>A list of decoded data strings.</returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.EanUpcDecoder.CheckData(System.String,System.String)">
            <summary>
            Checks if the data is properly decoded for the specified symbology.
            </summary>
            <param name="data">The data string.</param>
            <param name="charCodeSets">The character code sets of the decoded data string.</param>
            <returns>The verified data for the decoded symbology or empty string if the data is not verified.</returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.EanUpcDecoder.ShouldLookForFinalPattern(System.Int32)">
            <summary>
            Determine if the found bars and spaces number proper number before the final pattern.
            </summary>
            <param name="barsAndSpacesCount">The number of the bars and spaces counted from the first bar of the symbology.</param>
            <returns>A bool value indicating if the number is proper for finding the final pattern.</returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.EanUpcDecoder.ShouldLookForMiddlePattern(System.Int32)">
            <summary>
            Determine if the found bars and spaces are proper number before the middle pattern.
            </summary>
            <param name="barsAndSpacesCount">The number of the bars and spaces counted from the first bar of the symbology.</param>
            <returns>A bool value indicating if the number is proper for finding the middle pattern.</returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.EanUpcDecoder.GetParity(System.String)">
            <summary>
            Gets the parity of the data codesets.
            </summary>
            <param name="codeSets">The code sets.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.EanUpcDecoder.GetCharsCodeSets(System.String)">
            <summary>
            Gets all used CodeSets for the data.
            </summary>
            <param name="codeSets">The code sets.</param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.Gs1DataBarDecoder">
            <summary>
            Describes the GS1 DataBar Omnidirectional and Truncated symbologies logic for decoding.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Gs1DataBarDecoder.Decode(System.Byte[])">
            <summary>
            Decodes the specified pixels for GS1 DataBar Omnidirectional and Truncated symbologies.
            </summary>
            <param name="pixels">The pixels.</param>
            <returns>A list of decoded data strings.</returns>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.Gs1DataBarExpandedDecoder">
            <summary>
            Describes the GS1 DataBar Expanded symbology logic for decoding.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Gs1DataBarExpandedDecoder.ClearProperties">
            <summary>
            Clears the internally used properties values.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Gs1DataBarExpandedDecoder.Decode(System.Byte[])">
            <summary>
            Decodes the specified pixels for GS1 DataBar symbology.
            </summary>
            <param name="pixels">The pixels.</param>
            <returns>A list of decoded data strings.</returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Gs1DataBarExpandedDecoder.ExtractSymbolsInfo(System.Byte[])">
            <summary>
            Extract the symbols info by the found segments. We count on the consecutively adding of the segments.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.Gs1DataBarFamilyDecoder">
            <summary>
            Describes the GS1 DataBar Family symbologies logic for decoding.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.Gs1DataBarLimitedDecoder">
            <summary>
            Describes the GS1 DataBar Expanded symbology logic for decoding.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Gs1DataBarLimitedDecoder.ClearProperties">
            <summary>
            Clears the internally used properties values.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Gs1DataBarLimitedDecoder.Decode(System.Byte[])">
            <summary>
            Decodes the specified pixels for GS1 DataBar Limited symbology.
            </summary>
            <param name="pixels">The pixels.</param>
            <returns>A list of decoded data strings.</returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Gs1DataBarLimitedDecoder.Normalize(System.Int32[],System.Int64,System.Int32)">
            <summary>
            Converts 14 raw element widths to normalized element widths as uses edge-to-edge decoding 
            and then extracts normalized element widths.
            </summary>
            <param name="nkCharData">Array of 14 raw element widths, changed to 14 normalized elements of character.</param>
            <param name="module">Average module width in the character.</param>
            <param name="endBar">End element width (negated if on right end- for data 1 and check).</param>
            <returns>True if successful, otherwise false.</returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Gs1DataBarLimitedDecoder.AddCheckDigit(System.String)">
            <summary>
            Adds the EAN.UCC-14 parity (check) digit.
            </summary>
            <param name="dataString">The data string of 13 digits.</param>
            <returns>The final data result filled with the 14th ASCII parity character.</returns>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.Gs1DataBarStackedDecoder">
            <summary>
            Describes the GS1 DataBar Stacked and StackedOmnidirectional symbologies logic for decoding.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Gs1DataBarStackedDecoder.Decode(System.Byte[][])">
            <summary>
            Decodes the specified pixels for GS1 DataBar Stacked and Stacked Omnidirectional symbologies.
            </summary>
            <param name="pixels">The pixels.</param>
            <returns>A list of decoded data strings.</returns>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.IntelligentMailDecoder">
            <summary>
            Describes the IntelligentMail symbology decoding logic.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.IntelligentMailDecoder.#cctor">
            <summary>
            Initializes the <see cref="T:Infragistics.Controls.Barcodes.IntelligentMailDecoder"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.IntelligentMailDecoder.MultiplyAndAddToArray(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Multiplies bytes by "mult" and add "add".
            </summary>
            <param name="bytes">An array of bytes representing a multiple-precision number.</param>
            <param name="mult">The mult number. Assuming 32-bit integers, the largest mult can be without overflowing around 2**23, or approximately 8 million.</param>
            <param name="add">The add.</param>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.IntelligentMailDecoder.DivideModToArray(System.Byte[],System.Int32)">
            <summary>
            Divides bytes by "div" and return remainder.
            </summary>
            <param name="bytes">An array of bytes representing a multiple-precision number.</param>
            <param name="div">The div.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.IntelligentMailDecoder.AddToArray(System.Byte[],System.Int32)">
            <summary>
            Adds "add" to bytes array.
            </summary>
            <param name="bytes">An array of bytes representing a multiple-precision number.</param>
            <param name="add">The add.</param>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.Interleaved2Of5Decoder">
            <summary>
            Describes the Interleaved 2 Of 5 symbology logic for decoding.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Interleaved2Of5Decoder.#cctor">
            <summary>
            Initializes the <see cref="T:Infragistics.Controls.Barcodes.Interleaved2Of5Decoder"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Interleaved2Of5Decoder.Decode(System.Byte[])">
            <summary>
            Decodes the specified pixels.
            </summary>
            <param name="pixels">The pixels.</param>
            <returns>A list of decoded data strings.</returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Interleaved2Of5Decoder.FindFinalPattern(System.Byte[],System.Int32,System.Double[])">
            <summary>
            Finds the final pattern from the quiery position and returns its pixels length or -1 if failed.
            </summary>
            <param name="vals">The vals.</param>
            <param name="queryPos">The cur pos.</param>
            <param name="thresholds">The thresholds.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Interleaved2Of5Decoder.AreBarsSimilar(System.Collections.Generic.List{System.Int32},System.Double)">
            <summary>
            Used to check if all narrow bars have almost the same width and all wide bars too, 
            i.e. if 1:3 ratio is used for the wide, it should be used for all wide bars,
            not to use 1:2 for some wide and 1:3 for other.
            </summary>
            <param name="barsPixels">The bars pixels.</param>
            <param name="thresh">The thresh.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.LinearBarcodeDecoder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Barcodes.LinearBarcodeDecoder"/> class.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.LinearBarcodeDecoder.FirstPixelOfPattern">
            <summary>
            Stores in a List the first indexes of the decoded data pixels. Used for zone defining.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.LinearBarcodeDecoder.LastPixelOfPattern">
            <summary>
            Stores in a List the last indexes of the decoded data pixels. Used for zone defining.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.LinearBarcodeDecoder.ClearProperties">
            <summary>
            Clears the internally used properties values.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.LinearBarcodeDecoder.Decode(System.Byte[])">
            <summary>
            Decodes the specified pixels.
            </summary>
            <param name="pixels">The pixels.</param>
            <returns>A list of decoded data strings. </returns>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.LinearBarcodeDecoderService">
            <summary>
            A service used for decoding the pixels data per specified linear symbologies.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.LinearBarcodeDecoderService.#ctor(Infragistics.Controls.Barcodes.Symbology,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Barcodes.LinearBarcodeDecoderService"/> class.
            </summary>
            <param name="symbologyTypes">Specifies the desired symbologies the decoder looks for.</param>
            <param name="maxNumberOfSymbolsToRead">The maximum number of symbols that the decoder looks for.</param>
            <param name="isImageZoomed">if set to <c>true</c> the image data we are detecting is zoomed.</param>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.LinearBarcodeDecoderService.Decode(System.Byte[])">
            <summary>
            Decodes the specified array of pixels.
            </summary>
            <param name="pixels">The pixels.</param>
            <returns>A list of the DecodedData information.</returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.LinearBarcodeDecoderService.DecodeBySymbology(Infragistics.Controls.Barcodes.LinearBarcodeDecoder,System.Byte[],Infragistics.Controls.Barcodes.Symbology,System.Collections.Generic.List{Infragistics.Controls.Barcodes.DecodedData}@)">
            <summary>
            Decodes the pixels sequence by symbology and returns the number of the overall found symbols.
            </summary>
            <param name="decoder">The decoder.</param>
            <param name="pixels">The pixels.</param>
            <param name="symbologyType">Type of the symbology.</param>
            <param name="results">The results.</param>
            <returns>The number of the overall found symbols</returns>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.MailDecoder">
            <summary>
            Main decoding logic for the mail symbologies.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.MailDecoder.Decode(System.Byte[][])">
            <summary>
            Decodes the specified pixels for RoyalMail symbol.
            </summary>
            <param name="pixels">The pixels.</param>
            <returns>A list of decoded data strings.</returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.MailDecoder.AreBarsProperNumber(System.Int32)">
            <summary>
            Check if the bars are proper number as the elementsNumber includes bars and space elements.
            </summary>
            <param name="elementsNumber">The elements number.</param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.Pdf417Decoder">
            <summary>
            Describes the logis for decoding PDF417 symbology.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Pdf417Decoder.DoPatternsMatch(System.Int32[],System.Byte[])">
            <summary>
            Does the patterns match.
            </summary>
            <param name="charPixels">The char pixels.</param>
            <param name="pattern">The pattern.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Pdf417Decoder.Decode(System.Byte[][])">
            <summary>
            Decodes the specified grayscaled.
            </summary>
            <param name="grayscaled">The grayscaled.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Pdf417Decoder.CorrectCodeWordVertices(Infragistics.Controls.Barcodes.Pdf417FinderPatterns,System.Boolean)">
            <summary>
            Correct the codewords end points to theoretically perfect bunding quadrilateral if there is any skew or rotation in the image.
            </summary>
            <param name="patterns">The found stop and start patterns.</param>
            <param name="isReversed">if set to <c>true</c> the pattern has been reversed.</param>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Pdf417Decoder.CalculateXDimension(Infragistics.Controls.Barcodes.BasicPattern,System.Single)">
            <summary>
            Calculates the dimension (number of modules in a row) of the codeword matrix area.
            </summary>
            <param name="codewordsArea">The codewords area points.</param>
            <param name="moduleWidth">Width of a module.</param>
            <returns>The number of the columns in the bits matrix.</returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Pdf417Decoder.CalculateHeightModulesNumber(Infragistics.Controls.Barcodes.BasicPattern,System.Single,System.Int32)">
            <summary>
            Calculates the dimension in vertical, i.e. the number of the rows.
            </summary>
            <param name="codewordsArea">The codewords area.</param>
            <param name="moduleWidth">Width of the module.</param>
            <param name="rowCellsNumber">The number of cells in a row.</param>
            <returns>
            The number of the rows in the bits matrix.
            </returns>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.Pdf417BitParser">
            <summary>
            Helper class used for reading the decoded information in a symbol bits. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Pdf417BitParser.#ctor(System.Byte[][])">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Barcodes.Pdf417BitParser"/> class.
            </summary>
            <param name="bits">The bits.</param>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Pdf417BitParser.ProcessRow(System.Int32[],System.Int32,System.Int32,System.Collections.Generic.List{System.Int32},System.Int32)">
            <summary> Convert the symbols in the row to codewords.
            Each PDF417 symbol character shall consist of four bar elements and four space
            elements, each of which can be one to six modules wide. The four bar and
            four space elements shall measure 17 modules in total. 
            </summary>
            <param name="rowCounters"> An array containing the counts of black pixels for each column
            in the row. </param>
            <param name="rowNumber"> The current row number of codewords. </param>
            <param name="rowHeight"> The height of the row in pixels. </param>
            <param name="codewords"> The codeword array to save the codewords into. </param>
            <param name="next"> The next available index into the codewords array. </param>
            <returns> The next available index into the codeword array after processing this row. </returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Pdf417BitParser.GetCodeword(System.Int64)">
            <summary> Translate the symbol data into a codeword. </summary>
            <param name="symbol"> The symbol data to be translated. </param>
            <returns> The codeword corresponding to the symbol. </returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Pdf417BitParser.FindCodewordIndex(System.Int64)">
            <summary> Use a binary search to find the index of the codeword corresponding to the specified symbol.
            </summary>
            <param name="symbol">The symbol data from the barcode.</param>
            <returns> The index into the codeword table. </returns>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.Pdf417ReedSolomon">
            <summary>
            Describes the Reed Solomon algorithm for detecting and correction errors and erasures in a PDF 417 symbol.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Pdf417ReedSolomon.#cctor">
            <summary>
            Initializes the <see cref="T:Infragistics.Controls.Barcodes.Pdf417ReedSolomon"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Pdf417ReedSolomon.CorrectErasuresAndErrors(System.Int32[],System.Int32[],System.Int32,System.Int32)">
            <summary>
            Corrects the erasures and errors by the Reed Solomon algorithm.
            </summary>
            <param name="data">The data.</param>
            <param name="erasuresPositions">The erasus positions.</param>
            <param name="dataCodewordsNumber">The data codewords number.</param>
            <param name="errorCodewordsNumber">The error codewords number.</param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.QRCodeDecoder">
            <summary>
            Describes the QR Code symbology logic for decoding.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.QRCodeDecoder.#ctor(Infragistics.Controls.Barcodes.Implementation.BarcodeSR)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Barcodes.QRCodeDecoder"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.QRCodeDecoder.Decode(System.Byte[][])">
            <summary>
            Decodes the specified pixels for QRCode symbology.
            </summary>
            <param name="grayScaledPixels">The pixels.</param>
            <returns>A list of decoded data strings.</returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.QRCodeDecoder.GetPatternSize(Infragistics.Controls.Barcodes.PointFloat,Infragistics.Controls.Barcodes.PointFloat)">
            <summary>
            Gets the half size of the pattern from its center to its end by direction of the next pattern.
            </summary>
            <param name="patternC">From.</param>
            <param name="directionPoint">To.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.QRCodeDecoder.GetOpositePoint(Infragistics.Controls.Barcodes.PointFloat,Infragistics.Controls.Barcodes.PointFloat,System.Int32,System.Int32)">
            <summary>
            Gets the oposite point of the end point regarding the center point.
            </summary>
            <param name="center">The center.</param>
            <param name="end">The end.</param>
            <param name="width">The width of the image in pixels.</param>
            <param name="height">The height of the image in pixels.</param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.BitParser">
            <summary>
            Helper class used for reading the decoded information in a symbol bits. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BitParser.#ctor(System.Byte[][])">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Barcodes.BitParser"/> class.
            </summary>
            <param name="bits">The symbol bits.</param>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BitParser.#cctor">
            <summary>
            Initializes the <see cref="T:Infragistics.Controls.Barcodes.BitParser"/> class.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.FormatInformation">
            <summary>
            Describes the Format Information decoding.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.FormatInformation.#cctor">
            <summary>
            Initializes the <see cref="T:Infragistics.Controls.Barcodes.FormatInformation"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.FormatInformation.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Barcodes.FormatInformation"/> class.
            </summary>
            <param name="formatInfoBits">The format info bits.</param>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.RecognizingFinderPattern">
            <summary>
            Describes the logic for recognizing the finder pattern of the QRCode symbol.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.RecognizingFinderPattern.#ctor(System.Byte[][])">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Barcodes.RecognizingFinderPattern"/> class.
            </summary>
            <param name="pixels">The pixels.</param>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.RecognizingFinderPattern.LocateFinderPatterns">
            <summary>
            Locates the finder patterns in a series of three for a symbol.
            Module widths horizontal and vertical in each finder pattern form a dark-light-dark-light-dark
            sequence the relative widths of each elemetn of which are in the ratios 1:1:3:1:1. The 
            tolerance for each of these widths is 0.5.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.RecognizingFinderPattern.IsPatternFinder(System.Int32[])">
            <summary>
            Determines whether the pattern sequence has ratios 1:1:3:1:1 with no more than 0.5 tolerance.
            </summary>
            <param name="sequence">The sequence.</param>
            <returns>
            	<c>true</c> if [is pattern finder] [the specified sequence]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.RecognizingPattern">
            <summary>
            Base class for the finder of the patterns - alignment and finder patterns. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.RecognizingPattern.White">
            <summary>
            Specifies White pixel.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.RecognizingPattern.Black">
            <summary>
            Specifies Black pixel
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.RecognizingPattern.#ctor(System.Byte[][])">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Barcodes.RecognizingPattern"/> class.
            </summary>
            <param name="pixels">The pixels.</param>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.RecognizingPattern.GetHorizontalSequenceByCenter(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets the horizontal BWBWB sequence by center Black point.
            </summary>
            <param name="startCol">The start col.</param>
            <param name="centerRow">The center row.</param>
            <param name="maxCount">The max count.</param>
            <param name="endCol">The end col of the sequence.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.RecognizingPattern.GetVerticalSequenceByCenter(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets the vertical BWBWB sequence by center Black point.
            </summary>
            <param name="startRow">The start row.</param>
            <param name="centerCol">The center col.</param>
            <param name="maxCount">The max count.</param>
            <param name="endRow">The end row of the sequence.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.RecognizingPattern.GetCenterPoint(System.Int32[],System.Int32)">
            <summary>
            Gets the center point of BWBWB sequence.
            </summary>
            <param name="sequence">The sequence.</param>
            <param name="endColIndex">End index of the col.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.RecognizingPattern.IsWidthInRange(System.Int32,System.Single,System.Single)">
            <summary>
            Determines whether the specified width is within the specified [min, max] range.
            </summary>
            <param name="width">The width.</param>
            <param name="min">The min.</param>
            <param name="max">The max.</param>
            <returns>
            	<c>true</c> if [is width in range] [the specified width]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.RoyalMailDecoder">
            <summary>
            Describes the logic for decoding a RoyalMail symbology.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.RoyalMailDecoder.#cctor">
            <summary>
            Initializes the <see cref="T:Infragistics.Controls.Barcodes.RoyalMailDecoder"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.TwoDBarcodeDecoder.Decode(System.Byte[][])">
            <summary>
            Decodes the specified pixels.
            </summary>
            <param name="pixels">The pixels.</param>
            <returns>A list of decoded data strings. </returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.TwoDBarcodeDecoder.InjectProperties(Infragistics.Controls.Barcodes.BarcodeZone)">
            <summary>
            Sets the minimum size of a barcode symbol.
            Used for the complex linear symbologies - GS1DataBarStacked and Postal ones.
            </summary>
            <param name="scanningZone">The zone we are scanning the barcode in.</param>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.TwoDBarcodeDecoder.GetZones(System.Boolean)">
            <summary>
            Gets the barcode zones of the two dimensional symbols.
            </summary>
            <param name="isImageZoomed">if set to <c>true</c> the image data we are detecting is zoomed.</param>
            <returns>A list of the barcode zones.</returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.TwoDBarcodeDecoder.GetSymbolBits(Infragistics.Controls.Barcodes.PerspectiveTransformation,System.Int32,System.Int32,System.Byte[][])">
            <summary>
            Gets the symbol bits by the pixel using the transform.
            </summary>
            <param name="transform">The transform.</param>
            <param name="xDimension">The x dimension.</param>
            <param name="yDimension">The y dimension.</param>
            <param name="pixels">The pixels.</param>
            <returns>A bit matrix of dimension [rowsNumber][colsNumber], i.e. [yDimension][xDimension]. </returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.TwoDBarcodeDecoder.FixOutsideImagePoints(System.Single[],System.Byte[][])">
            <summary>
            Fixes points which are transformed outside the image. It's enought to check only the end points.
            </summary>
            <param name="points">The points.</param>
            <param name="pixels">The pixels matrix.</param>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.TwoDBarcodeDecoderService">
            <summary>
            A service used for decoding the pixels data per specified two dimensional symbologies.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.TwoDBarcodeDecoderService.#ctor(Infragistics.Controls.Barcodes.Symbology,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Barcodes.TwoDBarcodeDecoderService"/> class.
            </summary>
            <param name="symbologyTypes">The symbology types.</param>
            <param name="maxNumberOfSymbolsToRead">The max number of symbols to read.</param>
            <param name="isImageZoomed">if set to <c>true</c> the image data we are detecting is zoomed.</param>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.TwoDBarcodeDecoderService.Decode(System.Byte[][])">
            <summary>
            Decodes the specified array of pixels.
            </summary>
            <param name="pixels">The pixels.</param>
            <returns>A list of the DecodedData information.</returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.TwoDBarcodeDecoderService.DecodeBySymbology(Infragistics.Controls.Barcodes.TwoDBarcodeDecoder,System.Byte[][],Infragistics.Controls.Barcodes.Symbology,System.Collections.Generic.List{Infragistics.Controls.Barcodes.DecodedData}@)">
            <summary>
            Decodes the pixels sequence by symbology and returns the number of the overall found symbols.
            </summary>
            <param name="decoder">The decoder.</param>
            <param name="pixels">The pixels.</param>
            <param name="symbologyType">Type of the symbology.</param>
            <param name="results">The results.</param>
            <returns>The number of the overall found symbols</returns>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.UpcADecoder">
            <summary>
            Describes the UPC-A symbology logic for decoding.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.UpcADecoder.CheckData(System.String,System.String)">
            <summary>
            Checks if the data is properly decoded for the specified symbology.
            </summary>
            <param name="data">The data string.</param>
            <param name="charCodeSets">The character code sets of the decoded data string.</param>
            <returns>
            The verified data for the decoded symbology or empty string if the data is not verified.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.UpcADecoder.ShouldLookForFinalPattern(System.Int32)">
            <summary>
            Determine if the found bars and spaces number proper number before the final pattern.
            </summary>
            <param name="barsAndSpacesCount">The number of the bars and spaces counted from the first bar of the symbology.</param>
            <returns>
            A bool value indicating if the number is proper for finding the final pattern.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.UpcADecoder.ShouldLookForMiddlePattern(System.Int32)">
            <summary>
            Determine if the found bars and spaces are proper number before the middle pattern.
            </summary>
            <param name="barsAndSpacesCount">The number of the bars and spaces counted from the first bar of the symbology.</param>
            <returns>
            A bool value indicating if the number is proper for finding the middle pattern.
            </returns>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.UpcEDecoder">
            <summary>
            Describes the UPC-E symbology logic for decoding.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.UpcEDecoder.#cctor">
            <summary>
            Initializes the <see cref="T:Infragistics.Controls.Barcodes.UpcEDecoder"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.UpcEDecoder.CheckData(System.String,System.String)">
            <summary>
            Checks if the data is properly decoded for the specified symbology.
            </summary>
            <param name="data">The data string.</param>
            <param name="charCodeSets">The character code sets of the decoded data string.</param>
            <returns>
            The verified data for the decoded symbology or empty string if the data is not verified.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.UpcEDecoder.ShouldLookForFinalPattern(System.Int32)">
            <summary>
            Determine if the found bars and spaces number proper number before the final pattern.
            </summary>
            <param name="barsAndSpacesCount">The number of the bars and spaces counted from the first bar of the symbology.</param>
            <returns>
            A bool value indicating if the number is proper for finding the final pattern.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.UpcEDecoder.ShouldLookForMiddlePattern(System.Int32)">
            <summary>
            Determine if the found bars and spaces are proper number before the middle pattern.
            The UpcE symbology does not have a middle pattern.
            </summary>
            <param name="barsAndSpacesCount">The number of the bars and spaces counted from the first bar of the symbology.</param>
            <returns>
            A bool value indicating if the number is proper for finding the middle pattern.
            </returns>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.BarcodeZone">
            <summary>
            A rectangle zone the barcode symbol is positioned at.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BarcodeZone.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Barcodes.BarcodeZone"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BarcodeZone.#ctor(Infragistics.Controls.Barcodes.PointInt,Infragistics.Controls.Barcodes.PointInt,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Barcodes.BarcodeZone"/> struct.
            </summary>
            <param name="start">The left top point of the region.</param>
            <param name="end">The right bottom point of the region.</param>
            <param name="isImageZoomed">if set to <c>true</c> the image that corresponds to this zone is zoomed.</param>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BarcodeZone.#ctor(Infragistics.Controls.Barcodes.PointInt,Infragistics.Controls.Barcodes.PointInt,Infragistics.Controls.Barcodes.SymbolOrientation,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Barcodes.BarcodeZone"/> struct.
            </summary>
            <param name="start">The left top point of the region.</param>
            <param name="end">The right bottom point of the region.</param>
            <param name="scanLine">The scan line.</param>
            <param name="isImageZoomed">if set to <c>true</c> the image that corresponds to this zone is zoomed.</param>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BarcodeZone.#ctor(Infragistics.Controls.Barcodes.PointInt,Infragistics.Controls.Barcodes.PointInt,Infragistics.Controls.Barcodes.PointInt,Infragistics.Controls.Barcodes.PointInt,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Barcodes.BarcodeZone"/> struct.
            </summary>
            <param name="leftTop">The left top point of the region.</param>
            <param name="rightTop">The right top of the region.</param>
            <param name="rightBottom">The right bottom of the region.</param>
            <param name="leftBottom">The left bottom of the region.</param>
            <param name="isImageZoomed">if set to <c>true</c> the image that corresponds to this zone is zoomed.</param>
        </member>
        <member name="P:Infragistics.Controls.Barcodes.BarcodeZone.LeftTopPoint">
            <summary>
            Gets or sets the left top (start for linear symbologies) point, positionted at the left top corner of the region.
            </summary>
            <value>The left top point of the barcode zone.</value>
        </member>
        <member name="P:Infragistics.Controls.Barcodes.BarcodeZone.RightBottomPoint">
            <summary>
            Gets or sets the right bottom (end for linear symbologies) point, positioned at the right bottom corner of the region.
            </summary>
            <value>The right bottom point of the barcode zone.</value>
        </member>
        <member name="P:Infragistics.Controls.Barcodes.BarcodeZone.RightTopPoint">
            <summary>
            Gets or sets the right top point of the region.
            </summary>
            <value>The right top point of the barcode zone.</value>
        </member>
        <member name="P:Infragistics.Controls.Barcodes.BarcodeZone.LeftBottomPoint">
            <summary>
            Gets or sets the left bottom point of the region.
            </summary>
            <value>The end point.</value>
        </member>
        <member name="P:Infragistics.Controls.Barcodes.BarcodeZone.ScanOrientation">
            <summary>
            Gets or sets the orientation which the scanning is processed at.
            </summary>
            <value>The scan line orientation.</value>
        </member>
        <member name="P:Infragistics.Controls.Barcodes.BarcodeZone.IsImageZoomed">
            <summary>
            Gets or sets a value indicating whether this instance of barcode zone is detected in 
            a zoomed image or not. Used for proper zone detection in the algorithm.
            </summary>
            <value>
            	<c>true</c> if this instance is image zoomed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BarcodeZone.GetWidth">
            <summary>
            Gets the width of the zone.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BarcodeZone.GetHeight">
            <summary>
            Gets the height of the zone
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BarcodeZone.DifferenceOf(Infragistics.Controls.Barcodes.BarcodeZone)">
            <summary>
            Gets the relative complement (set-theoretic difference) of one zone (A) to another (B).
            B\A={x is from B; x is not from A}
            </summary>
            <param name="zone">The zone A.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BarcodeZone.IsLeftOverlapped(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Determines whether the left side of the first zone is overrlapped by the second zone.
            Used for IsTopOverlapped by y axis. 
            </summary>
            <param name="firstZoneStart">The first zone start.</param>
            <param name="firstZoneEnd">The first zone end.</param>
            <param name="secondZoneStart">The second zone start.</param>
            <param name="secondZoneEnd">The second zone end.</param>
            <returns>
            	<c>true</c> if [is left overlapped] [the specified first zone start]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BarcodeZone.IsRightOverlapped(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Determines whether the right side of the first zone is overlapped by the second zone
            Used for IsBottomOverlapped by y axis.
            </summary>
            <param name="firstZoneStart">The first zone start.</param>
            <param name="firstZoneEnd">The first zone end.</param>
            <param name="secondZoneStart">The second zone start.</param>
            <param name="secondZoneEnd">The second zone end.</param>
            <returns>
            	<c>true</c> if [is right overlapped] [the specified first zone start]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BarcodeZone.IsInside(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Determines whether the second zone is inside the specified first zone.
            </summary>
            <param name="firstZoneStart">The first zone start.</param>
            <param name="firstZoneEnd">The first zone end.</param>
            <param name="secondZoneStart">The second zone start.</param>
            <param name="secondZoneEnd">The second zone end.</param>
            <returns>
            	<c>true</c> if the specified first zone start is inside; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BarcodeZone.GetRowByIndex(System.Byte[][],System.Collections.Generic.List{Infragistics.Controls.Barcodes.PointInt}@,System.Int32)">
            <summary>
            Gets the row bytes by an image index of the row.
            </summary>
            <param name="vals">The image pixels values.</param>
            <param name="debugPoints">The debug red points that should be filled.</param>
            <param name="rowIndex">Index of the row in the whole image, not in the zone only.</param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.BasicPattern">
            <summary>
            Describes a finder pattern settings.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BasicPattern.#ctor(Infragistics.Controls.Barcodes.PointFloat,Infragistics.Controls.Barcodes.PointFloat,Infragistics.Controls.Barcodes.PointFloat,Infragistics.Controls.Barcodes.PointFloat)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Barcodes.BasicPattern"/> class.
            </summary>
            <param name="topLeft">The top left point.</param>
            <param name="topRight">The top right point.</param>
            <param name="bottomLeft">The bottom left point.</param>
            <param name="bottomRight">The bottom right point.</param>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.DecodedData">
            <summary>
            Describes the data that is decoded.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.DecodedData.#ctor(System.String,Infragistics.Controls.Barcodes.Symbology)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Barcodes.DecodedData"/> struct.
            Used for 1D symbologies decoding.
            </summary>
            <param name="data">The data of the decoded pattern.</param>
            <param name="symbology">The symbology of the decoded pattern\\\s.</param>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.DecodedData.#ctor(System.String,Infragistics.Controls.Barcodes.Symbology,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Barcodes.DecodedData"/> struct.
            Used for 1D symbologies decoding.
            </summary>
            <param name="data">The data of the decoded pattern.</param>
            <param name="symbology">The symbology of the decoded pattern.</param>
            <param name="startIndex">The start index of the decoded pattern.</param>
            <param name="lastIndex">The last index of the decoded pattern.</param>
            <param name="isReversed">if set to <c>true</c> the decoded patterns is reversed.</param>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.DecodedData.#ctor(System.String,Infragistics.Controls.Barcodes.Symbology,Infragistics.Controls.Barcodes.BarcodeZone)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Barcodes.DecodedData"/> struct.
            Used when 2D symbologies are decoded.
            </summary>
            <param name="data">The data.</param>
            <param name="symbology">The symbology.</param>
            <param name="zone">The zone of the decoded symbol. </param>
        </member>
        <member name="P:Infragistics.Controls.Barcodes.DecodedData.Data">
            <summary>
            Gets or sets the decoded data string.
            </summary>
            <value>The data.</value>
        </member>
        <member name="P:Infragistics.Controls.Barcodes.DecodedData.Symbology">
            <summary>
            Gets or sets the decoded symbology.
            </summary>
            <value>The symbology.</value>
        </member>
        <member name="P:Infragistics.Controls.Barcodes.DecodedData.StartIndex">
            <summary>
            Gets or sets the start index of the found symbology pattern in the pixels array.
            Used to detect the exact zone, holding the whole barcode symbol.
            Used only for linear symbologies.
            </summary>
            <value>The start indexes.</value>
        </member>
        <member name="P:Infragistics.Controls.Barcodes.DecodedData.LastIndex">
            <summary>
            Gets or sets the last index of the found symbology pattern in the pixels array.
            Used to detect the exact zone, holding the whole barcode symbol.
            Used only for linear symbologies.
            </summary>
            <value>The last indexes.</value>
        </member>
        <member name="P:Infragistics.Controls.Barcodes.DecodedData.IsReversed">
            <summary>
            Gets or sets a value indicating whether this value is recognized in reversed pattern.
            Used for linear symbologies.
            </summary>
            <value>
            	<c>true</c> if this instance is reversed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Infragistics.Controls.Barcodes.DecodedData.Zone">
            <summary>
            Gets or sets the barcode zones holding the symbol.
            Used for two dimensional symbologies.
            </summary>
            <value>The zones.</value>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.Character">
            <summary>
            Describes the data character information.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Character.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Barcodes.Character"/> class used for the data characters in the GS1 DataBar logic.
            </summary>
            <param name="dataValue">The data value.</param>
            <param name="checksum">The checksum.</param>
            <param name="firstIndex">The first index of the segment.</param>
            <param name="lastIndex">The last index of the segment.</param>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.ExpandedSegment">
            <summary>
            Describes a GS1 Data Bar Expanded Segment = data character + finder pattern + data character.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.ExpandedSegment.#ctor(Infragistics.Controls.Barcodes.Character,Infragistics.Controls.Barcodes.Gs1DataBarFinderPattern,Infragistics.Controls.Barcodes.Character)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Barcodes.ExpandedSegment"/> class.
            </summary>
            <param name="left">The left data character.</param>
            <param name="finderPattern">The finder pattern.</param>
            <param name="right">The right data character.</param>
        </member>
        <member name="P:Infragistics.Controls.Barcodes.ExpandedSegment.LeftCharacter">
            <summary>
            Gets or sets the left data character.
            </summary>
            <value>The left data character.</value>
        </member>
        <member name="P:Infragistics.Controls.Barcodes.ExpandedSegment.FinderPattern">
            <summary>
            Gets or sets the finder pattern of the segment.
            </summary>
            <value>The finder pattern.</value>
        </member>
        <member name="P:Infragistics.Controls.Barcodes.ExpandedSegment.RightCharater">
            <summary>
            Gets or sets the right data charater.
            </summary>
            <value>The right data charater.</value>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.Gs1DataBarFinderPattern">
            <summary>
            A helper class, describing the finder pattern of the GS1 DataBar pair.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Gs1DataBarFinderPattern.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Barcodes.Gs1DataBarFinderPattern"/> class.
            </summary>
            <param name="parityIndex">The parity index.</param>
            <param name="first">The first index of the pattern in the specified pixels array.</param>
            <param name="last">The last index of the pattern in the specified pixels array.</param>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Gs1DataBarFinderPattern.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Barcodes.Gs1DataBarFinderPattern"/> class.
            Used by the Expanded version of the GS1 DataBar barcode symbology.
            </summary>
            <param name="parityIndex">Index of the parity.</param>
            <param name="first">The first.</param>
            <param name="last">The last.</param>
            <param name="isOdd">if set to <c>true</c> [is odd].</param>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.Segment">
            <summary>
            Helper class, describing a GS1 DataBar pair of two data characters and a finder pattern, 
            i.e. data char - finder pattern - data char;
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Segment.#ctor(System.Int32,System.Int32,Infragistics.Controls.Barcodes.Gs1DataBarFinderPattern,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Barcodes.Segment"/> class.
            </summary>
            <param name="dataValue">The data value.</param>
            <param name="checksum">The checksum.</param>
            <param name="finderPattern">The finder pattern.</param>
            <param name="pairFirstIndex">First index of the segment.</param>
            <param name="pairLastIndex">Last index of the segment.</param>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.MailResult">
            <summary>
            Describes the Mail symbologies result.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.MailResult.#ctor(System.String,Infragistics.Controls.Barcodes.PointInt,Infragistics.Controls.Barcodes.PointInt,Infragistics.Controls.Barcodes.PointInt,Infragistics.Controls.Barcodes.PointInt)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Barcodes.MailResult"/> class.
            </summary>
            <param name="data">The data encoded in the symbol.</param>
            <param name="topLeft">The top left symbol point.</param>
            <param name="topRight">The top right symbol point.</param>
            <param name="bottomLeft">The bottom left symbol point.</param>
            <param name="bottomRight">The bottom right symbol point.</param>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.Pdf417FinderPatterns">
            <summary>
            Describes the start and stop patterns of a PDF 417 symbol.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Pdf417FinderPatterns.#ctor(Infragistics.Controls.Barcodes.BasicPattern,Infragistics.Controls.Barcodes.BasicPattern)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Barcodes.Pdf417FinderPatterns"/> class.
            </summary>
            <param name="startPattern">The start pattern.</param>
            <param name="stopPattern">The stop pattern.</param>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.Pdf417Result">
            <summary>
            Describes a PDF417 result object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.Pdf417Result.#ctor(System.String,Infragistics.Controls.Barcodes.Pdf417ReaderErrorCorrectionLevel)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Barcodes.Pdf417Result"/> class.
            </summary>
            <param name="data">The data.</param>
            <param name="level">The level.</param>
        </member>
        <member name="P:Infragistics.Controls.Barcodes.Pdf417Result.Data">
            <summary>
            Gets or sets the data of the decoded PDF417 symbol.
            </summary>
            <value>The data.</value>
        </member>
        <member name="P:Infragistics.Controls.Barcodes.Pdf417Result.ErrorCorrectionLevel">
            <summary>
            Gets or sets the error correction level of the PDF417 symbol.
            </summary>
            <value>The error correction level.</value>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.PointFloat">
            <summary>
            Describes a simple Point object with float coordinates.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.PointFloat.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Barcodes.PointFloat"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.PointFloat.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Barcodes.PointFloat"/> class.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
        </member>
        <member name="P:Infragistics.Controls.Barcodes.PointFloat.X">
            <summary>
            Gets or sets the X coordinate of the point.
            </summary>
            <value>The x1.</value>
        </member>
        <member name="P:Infragistics.Controls.Barcodes.PointFloat.Y">
            <summary>
            Gets or sets the Y coordinate of the point.
            </summary>
            <value>The Y.</value>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.PointFloat.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
            	<c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.PointFloat.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.PointFloat.Distance(Infragistics.Controls.Barcodes.PointFloat)">
            <summary>
            Calculates a distance between the center of the current findern pattern and the specified one.
            </summary>
            <param name="point">The finder pattern.</param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.PointInt">
            <summary>
            Describes a simple Point object with int coordinates.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.PointInt.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Barcodes.PointInt"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.PointInt.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Barcodes.PointInt"/> class.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
        </member>
        <member name="P:Infragistics.Controls.Barcodes.PointInt.X">
            <summary>
            Gets or sets the X coordinate of the point.
            </summary>
            <value>The x1.</value>
        </member>
        <member name="P:Infragistics.Controls.Barcodes.PointInt.Y">
            <summary>
            Gets or sets the Y coordinate of the point.
            </summary>
            <value>The Y.</value>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.PointInt.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
            	<c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.PointInt.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.FinderPattern">
            <summary>
            Describes a QRCode finder pattern. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.FinderPattern.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Barcodes.FinderPattern"/> class.
            </summary>
            <param name="centerX">The center X.</param>
            <param name="centerY">The center Y.</param>
            <param name="moduleWidth">Width of the module.</param>
        </member>
        <member name="P:Infragistics.Controls.Barcodes.FinderPattern.Center">
            <summary>
            Gets or sets the center point of the pattern.
            </summary>
            <value>The center.</value>
        </member>
        <member name="P:Infragistics.Controls.Barcodes.FinderPattern.ModuleWidth">
            <summary>
            Gets or sets the width of the module based on the pattern width.
            </summary>
            <value>The width of the modules.</value>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.FinderPattern.Distance(Infragistics.Controls.Barcodes.FinderPattern)">
            <summary>
            Calculates a distance between the center of the current findern pattern and the specified one.
            </summary>
            <param name="pattern">The finder pattern.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.FinderPattern.Compare(Infragistics.Controls.Barcodes.FinderPattern)">
            <summary>
            Compares the difference of the specified pattern with the current one by their modules width.
            If -1, then the specified pattern is smaller than the current one.
            If 1, then the specified pattern is bigger than the current one.
            If 0 - the patterns are equal size.
            </summary>
            <param name="pattern">The pattern.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.FinderPattern.CalculateCrossProduct(Infragistics.Controls.Barcodes.FinderPattern,Infragistics.Controls.Barcodes.FinderPattern,Infragistics.Controls.Barcodes.FinderPattern)">
            <summary>
            Calculates the cross product BC x BA between the vectors from the centers of three finder patterns.
            </summary>
            <param name="patternA">The pattern A.</param>
            <param name="patternB">The pattern B.</param>
            <param name="patternC">The pattern C.</param>
            <returns>Returns the z component of the cross product.</returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.FinderPattern.IsEqualTo(Infragistics.Controls.Barcodes.FinderPattern)">
            <summary>
            Determines if the current pattern has nearly the same center or nearly the same size with the specified one.
            </summary>
            <param name="pattern">The pattern we are comparing with.</param>
            <returns>
            	<c>true</c> if [is equal to] [the specified pattern]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.QRCodeResult">
            <summary>
            Describes the decoded symbol characteristics. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.QRCodeResult.#ctor(System.String,Infragistics.Controls.Barcodes.ReaderQRCodeErrorCorrectionLevel,Infragistics.Controls.Barcodes.ReaderSizeVersion)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Barcodes.QRCodeResult"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Barcodes.QRCodeResult.Data">
            <summary>
            Gets or sets the data of the decoded QR Code symbol.
            </summary>
            <value>The data.</value>
        </member>
        <member name="P:Infragistics.Controls.Barcodes.QRCodeResult.ErrorCorrectionLevel">
            <summary>
            Gets or sets the error correction level of the decoded QR Code symbol.
            </summary>
            <value>The error correction level.</value>
        </member>
        <member name="P:Infragistics.Controls.Barcodes.QRCodeResult.SizeVersion">
            <summary>
            Gets or sets the size version of the decoded QR Code symbol.
            </summary>
            <value>The size version.</value>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.SymbolFinderPatterns">
            <summary>
            Describes a symbol finder patterns. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.SymbolFinderPatterns.#ctor(Infragistics.Controls.Barcodes.FinderPattern,Infragistics.Controls.Barcodes.FinderPattern,Infragistics.Controls.Barcodes.FinderPattern)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Barcodes.SymbolFinderPatterns"/> class.
            </summary>
            <param name="topLeft">The top left finder pattern.</param>
            <param name="topRight">The top right finder pattern.</param>
            <param name="bottomLeft">The bottom left finder pattern.</param>
        </member>
        <member name="P:Infragistics.Controls.Barcodes.SymbolFinderPatterns.TopLeft">
            <summary>
            Gets the top left finder pattern of a symbol.
            </summary>
            <value>The top left.</value>
        </member>
        <member name="P:Infragistics.Controls.Barcodes.SymbolFinderPatterns.TopRight">
            <summary>
            Gets the top right finder pattern of a symbol.
            </summary>
            <value>The top right.</value>
        </member>
        <member name="P:Infragistics.Controls.Barcodes.SymbolFinderPatterns.BottomLeft">
            <summary>
            Gets the bottom left finder pattern of a symbol.
            </summary>
            <value>The bottom left.</value>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.Pdf417ReaderErrorCorrectionLevel">
            <summary>
            The possible values for the PDF417 Error Correction Level.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.Pdf417ReaderErrorCorrectionLevel.Level0">
            <summary>
            Error Correction Level 0 has 2 codewords
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.Pdf417ReaderErrorCorrectionLevel.Level1">
            <summary>
            Error Correction Level 1 has 4 codewords
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.Pdf417ReaderErrorCorrectionLevel.Level2">
            <summary>
            Error Correction Level 2 has 8 codewords
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.Pdf417ReaderErrorCorrectionLevel.Level3">
            <summary>
            Error Correction Level 3 has 16 codewords
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.Pdf417ReaderErrorCorrectionLevel.Level4">
            <summary>
            Error Correction Level 4 has 32 codewords
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.Pdf417ReaderErrorCorrectionLevel.Level5">
            <summary>
            Error Correction Level 5 has 64 codewords
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.Pdf417ReaderErrorCorrectionLevel.Level6">
            <summary>
            Error Correction Level 6 has 128 codewords
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.Pdf417ReaderErrorCorrectionLevel.Level7">
            <summary>
            Error Correction Level 7 has 256 codewords
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.Pdf417ReaderErrorCorrectionLevel.Level8">
            <summary>
            Error Correction Level 8 has 512 codewords
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.Pdf417ReaderTextSubmode">
            <summary>
            Text Compaction sub-modes: each contains 30 characters including the latch and shift characters.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.Pdf417ReaderTextSubmode.Alpha">
            <summary>
            The default compaction mode - include uppercase alphabetic characters
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.Pdf417ReaderTextSubmode.Lower">
            <summary>
            Lower submode - include lowercase alphabetic characters
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.Pdf417ReaderTextSubmode.Mixed">
            <summary>
            Mixed - include numeric and some punctuations characters
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.Pdf417ReaderTextSubmode.Punctuation">
            <summary>
            Punctuation - include punctuation characters
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.Pdf417ReaderTextSubmode.PunctuationShift">
            <summary>
            Shift to punctuation sub mode.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.ReaderSizeVersion">
            <summary>
            Size of the symblol represented in terms of its position in the sequence of 
            permissible sizes from 21x21 modules (Version 1) to 177x177 modules (Version 40)
            for the QR Code symbols.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ReaderSizeVersion.Undefined">
            <summary>
            If set, the XamQRCodeBarcode set internally the smallest version that will 
            accommodate the data.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ReaderSizeVersion.Version1">
            <summary>
            Version1 defines size of 21x21 modules for the symbol.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ReaderSizeVersion.Version2">
            <summary>
            Version2 defines size of 25x25 modules for the symbol.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ReaderSizeVersion.Version3">
            <summary>
            Version3 defines size of 29x29 modules for the symbol.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ReaderSizeVersion.Version4">
            <summary>
            Version4 defines size of 33x33 modules for the symbol.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ReaderSizeVersion.Version5">
            <summary>
            Version5 defines size of 37x37 modules for the symbol.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ReaderSizeVersion.Version6">
            <summary>
            Version6 defines size of 41x41 modules for the symbol.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ReaderSizeVersion.Version7">
            <summary>
            Version7 defines size of 45x45 modules for the symbol.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ReaderSizeVersion.Version8">
            <summary>
            Version8 defines size of 49x49 modules for the symbol.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ReaderSizeVersion.Version9">
            <summary>
            Version9 defines size of 53x53 modules for the symbol.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ReaderSizeVersion.Version10">
            <summary>
            Version10 defines size of 57x57 modules for the symbol.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ReaderSizeVersion.Version11">
            <summary>
            Version11 defines size of 61x61 modules for the symbol.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ReaderSizeVersion.Version12">
            <summary>
            Version12 defines size of 65x65 modules for the symbol.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ReaderSizeVersion.Version13">
            <summary>
            Version13 defines size of 69x69 modules for the symbol.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ReaderSizeVersion.Version14">
            <summary>
            Version14 defines size of 73x73 modules for the symbol.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ReaderSizeVersion.Version15">
            <summary>
            Version15 defines size of 77x77 modules for the symbol.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ReaderSizeVersion.Version16">
            <summary>
            Version16 defines size of 81x81 modules for the symbol.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ReaderSizeVersion.Version17">
            <summary>
            Version17 defines size of 85x85 modules for the symbol.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ReaderSizeVersion.Version18">
            <summary>
            Version18 defines size of 89x89 modules for the symbol.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ReaderSizeVersion.Version19">
            <summary>
            Version19 defines size of 93x93 modules for the symbol.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ReaderSizeVersion.Version20">
            <summary>
            Version20 defines size of 97x97 modules for the symbol.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ReaderSizeVersion.Version21">
            <summary>
            Version21 defines size of 101x101 modules for the symbol.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ReaderSizeVersion.Version22">
            <summary>
            Version22 defines size of 105x105 modules for the symbol.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ReaderSizeVersion.Version23">
            <summary>
            Version23 defines size of 109x109 modules for the symbol.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ReaderSizeVersion.Version24">
            <summary>
            Version24 defines size of 113x113 modules for the symbol.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ReaderSizeVersion.Version25">
            <summary>
            Version25 defines size of 117x117 modules for the symbol.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ReaderSizeVersion.Version26">
            <summary>
            Version26 defines size of 121x121 modules for the symbol.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ReaderSizeVersion.Version27">
            <summary>
            Version27 defines size of 125x125 modules for the symbol.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ReaderSizeVersion.Version28">
            <summary>
            Version28 defines size of 129x129 modules for the symbol.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ReaderSizeVersion.Version29">
            <summary>
            Version29 defines size of 133x133 modules for the symbol.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ReaderSizeVersion.Version30">
            <summary>
            Version30 defines size of 137x137 modules for the symbol.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ReaderSizeVersion.Version31">
            <summary>
            Version31 defines size of 141x141 modules for the symbol.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ReaderSizeVersion.Version32">
            <summary>
            Version32 defines size of 145x145 modules for the symbol.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ReaderSizeVersion.Version33">
            <summary>
            Version33 defines size of 149x149 modules for the symbol.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ReaderSizeVersion.Version34">
            <summary>
            Version34 defines size of 153x153 modules for the symbol.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ReaderSizeVersion.Version35">
            <summary>
            Version35 defines size of 157x157 modules for the symbol.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ReaderSizeVersion.Version36">
            <summary>
            Version36 defines size of 161x161 modules for the symbol.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ReaderSizeVersion.Version37">
            <summary>
            Version37 defines size of 165x165 modules for the symbol.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ReaderSizeVersion.Version38">
            <summary>
            Version38 defines size of 169x169 modules for the symbol.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ReaderSizeVersion.Version39">
            <summary>
            Version39 defines size of 173x173 modules for the symbol.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ReaderSizeVersion.Version40">
            <summary>
            Version33 defines size of 177x177 modules for the symbol.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.ReaderEncodingMode">
            <summary>
            Specifies the encoding mode for compacting the data for the QR Code symbol. The modes are based on the
            character values and assignments associated with the default ECI (ECI 000003 representing the ISO/IEC 8859-1
            character set).
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ReaderEncodingMode.Undefined">
            <summary>
            When Undefined encoding mode is set, the XamQRCodeBarcode internally switches between modes as necessary 
            in order to achieve the most efficient conversion of data into a binary string.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ReaderEncodingMode.Numeric">
            <summary>
            Numeric mode encodes data from decimal digit set (0-9). Normally 3 data characters
            are represented by 10 bits.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ReaderEncodingMode.Alphanumeric">
            <summary>
            Alphanumerc mode encodes data from a set of 45 characters (digits 0-9, 
            upper case letters A-Z, nine other characters: space, $ % * + _ . / : ).
            Normally two input characters are represented by 11 bits.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ReaderEncodingMode.Byte">
            <summary>
            In Byte mode the data is encoded at 8 bits per character.
            The character set of the Byte encoding mode is byte data (by default it is ISO/IEC 8859-1 character set). 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ReaderEncodingMode.Kanji">
            <summary>
            The Kanji mode efficiently encodes Kanji characters in accordance with the Shift JIS system based on
            JIS X 0208. Each two-byte character value is compactedd to a 13-bit binary codeword.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.ReaderQRCodeErrorCorrectionLevel">
            <summary>
            QRCodeErrorCorrectionLevel defines the four level of Reed-Solomon error correction for the QR Code symbol.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ReaderQRCodeErrorCorrectionLevel.Low">
            <summary>
            Low error correction level allows recovery of 7% of the symbol codewords.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ReaderQRCodeErrorCorrectionLevel.Medium">
            <summary>
            Medium error correction level allows recovery of 15% of the symbol codewords.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ReaderQRCodeErrorCorrectionLevel.Quartil">
            <summary>
            Quartil error correction level allows recovery of 25% of the symbol codewords.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ReaderQRCodeErrorCorrectionLevel.High">
            <summary>
            High error correction level allows recovery of 30% of the symbol codewords.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.Symbology">
            <summary>
            Specifies the Symbology of the barcode symbol.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.Symbology.Unspecified">
            <summary>
            Used when a Symbology is not specified.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.Symbology.Code39">
            <summary>
            Specifies the Code39 barcode symbology.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.Symbology.Code39Ext">
            <summary>
            Specifies the Code39 Extended (known also as Code39 Full ASCII) barcode symbology.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.Symbology.Code128">
            <summary>
            Specifies the Code128 barcode symbology.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.Symbology.Ean13">
            <summary>
            Specifies the EAN-13 barcode symbology.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.Symbology.Ean8">
            <summary>
            Specifies the EAN-8 barcode symbology.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.Symbology.UpcA">
            <summary>
            Specifies the UPC-A barcode symbology.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.Symbology.UpcE">
            <summary>
            Specifies the UPC-E barcode symbology.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.Symbology.EanUpc">
            <summary>
            Specifies all symbologies from the EanUpc family which can be recognized.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.Symbology.Interleaved2Of5">
            <summary>
            Specifies the Interleaved 2 of 5 barcode symbology.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.Symbology.QRCode">
            <summary>
            Specifies the QR Code barcode symbology.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.Symbology.Linear">
            <summary>
            Specifies all linear barcode symbologies which can be recognized.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.Symbology.All">
            <summary>
            Specifies a set of all barcode symbologies which can be recognized.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.SymbolOrientation">
            <summary>
            Describe the orientation of the scanning line for the linear barcode symbols.
            Used for better performance.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.SymbolOrientation.Unspecified">
            <summary>
            Defines that the barcode symbol orientation is not specified.
            The scanning will be performed by all orientation.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.SymbolOrientation.Horizontal">
            <summary>
            Defines a horizontally oriented scanning.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.SymbolOrientation.Vertical">
            <summary>
            Defines a vertically oriented scanning.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.ReaderDecodeArgs">
            <summary>
            Provides data for DecodeComplete event handler.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.ReaderDecodeArgs.#ctor(System.String,Infragistics.Controls.Barcodes.Symbology,System.Boolean,System.Windows.Media.Imaging.BitmapSource)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Barcodes.ReaderDecodeArgs"/> class.
            </summary>
            <param name="value">The value of the decoded barcode symbol.</param>
            <param name="symbology">The symbology of the decoded barcode symbol.</param>
            <param name="symbolFound">if set to <c>true</c> [a barcode symbol is found].</param>
            <param name="filteredImage">The filtered image with the specified zones of the found barcode symbols.</param>
        </member>
        <member name="P:Infragistics.Controls.Barcodes.ReaderDecodeArgs.Value">
            <summary>
            Gets the decoded value string of the recognized barcode symbol.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Infragistics.Controls.Barcodes.ReaderDecodeArgs.Symbology">
            <summary>
            Gets the decoded symbology of the recognized barcode symbol.
            </summary>
            <value>The symbology.</value>
        </member>
        <member name="P:Infragistics.Controls.Barcodes.ReaderDecodeArgs.SymbolFound">
            <summary>
            Gets a value indicating whether a barcode symbol found is recognized in the image or not.
            </summary>
            <value><c>true</c> if [symbol found]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Infragistics.Controls.Barcodes.ReaderDecodeArgs.FilteredImage">
            <summary>
            Gets the filtered image object after the decoding, displaying the 
            recognized barcode symbols zones. 
            </summary>
            <value>The filtered image.</value>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.BarcodeRecognition">
            <summary>
            Helper class for image processing and shape recognition.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BarcodeRecognition.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Barcodes.BarcodeRecognition"/> class.
            </summary>
            <param name="isZoomed">if set to <c>true</c> the image pixels are zoomed.</param>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.BarcodeRecognition.OriginalMinSymbolSize">
            <summary>
            Used to save the MinSymbolSize set by the user.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.BarcodeRecognition.MinZoneSize">
            <summary>
            Specifies the min zone widht/height for zone detection. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.BarcodeRecognition.ScanDataValue">
            <summary>
            A list of the recognized data symbology values. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.BarcodeRecognition.ScanDataSymbology">
            <summary>
            A list of the recognized data symbology types.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Barcodes.BarcodeRecognition.NumberOfReadSymbols">
            <summary>
            Gets the number of the already read symbols.
            </summary>
            <value>The number of read symbols.</value>
        </member>
        <member name="P:Infragistics.Controls.Barcodes.BarcodeRecognition.Width">
            <summary>
            Gets the width of the pixels matrix.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Infragistics.Controls.Barcodes.BarcodeRecognition.Height">
            <summary>
            Gets the height of the pixel matrix.
            </summary>
            <value>The height.</value>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.BarcodeRecognition.Luminances">
            <summary>
            A matrix, holding the luminance value for every pixel.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.BarcodeRecognition.SymbologyTypes">
            <summary>
            The requested symbologies for scanning.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.BarcodeRecognition.MaxNumberOfSymbolsToRead">
            <summary>
            The maximum number of symbols the reader should look for. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BarcodeRecognition.FindBarcode(Infragistics.Controls.Barcodes.BarcodeZone)">
            <summary>
            Finds a barcode symbology in the specified zone. The result is used when 2d symbologies are scan
            to stop the zones iteration as the whole image pixels are passed and parsed.
            </summary>
            <param name="zone">The zone.</param>
            <returns>A value determining should the recognition algorithm continue.</returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BarcodeRecognition.RecognizeBarcodeZones2(System.Byte[][],Infragistics.Controls.Barcodes.Symbology,Infragistics.Controls.Barcodes.SymbolOrientation,System.Int32,System.Int32)">
            <summary>
            Decodes the barcode symbols and recognizes the barcode zones in the specified matrix of pixels.
            </summary>
            <param name="luminances">The luminances.</param>
            <param name="symbologyTypes">The symbology types.</param>
            <param name="scanOrientation">The scan orientation.</param>
            <param name="maxNumberOfSymbolsToRead">The max number of symbols to read.</param>
            <param name="minSymbolSize">Minimum size of a barcode symbol.</param>
            <returns>An ImageData object of the recognized barcode symbols.</returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BarcodeRecognition.ClearProperties">
            <summary>
            Clears the properies values.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.BarcodeRecognition.SetImagePixel(System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            Sets the image pixel at the specified row and column with the specified color.
            </summary>
            <param name="row">The row.</param>
            <param name="col">The colymn.</param>
            <param name="c">The c.</param>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.ComplexLinearBarcodesRecognition">
            <summary>
            Describes the linear barcodes symbologies which need more than one scanned row for recogition :
            Symbology.Gs1DataBarStacked and Symbology.Postal
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.ImageProcessing">
            <summary>
            Describes the image processing filters and procedures we apply. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ImageProcessing.White">
            <summary>
            Describe a White pixel.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Barcodes.ImageProcessing.Black">
            <summary>
            Describe a Black pixel.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.ImageProcessing.GetImageInfo(System.Windows.Media.Imaging.WriteableBitmap,System.Boolean)">
            <summary>
            Gets the image information from the specified WriteableBitmap object.
            </summary>
            <param name="bitmap">The bitmap.</param>
            <param name="tryHarder">if set to <c>true</c> the image will be zoomed for better recognition.</param>
            <returns>An array of the luminance values for the pixels.</returns>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.ImageProcessing.BiCubicKernel(System.Double)">
            <summary>
            Bicubic kernel. The function implements bicubic kernel W(x) as described on
            <a href="http://en.wikipedia.org/wiki/Bicubic_interpolation#Bicubic_convolution_algorithm">Wikipedia</a>
            (coefficient <b>a</b> is set to <b>-0.5</b>).
            </summary> 
            <param name="x">X value.</param> 
            <returns>Bicubic cooefficient.</returns>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.LinearBarcodeRecognition">
            <summary>
            Helper class describing the linear barcode recognition.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.LinearBarcodeRecognition.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Barcodes.LinearBarcodeRecognition"/> class.
            </summary>
            <param name="isZoomed">if set to <c>true</c> the image pixels are zoomed for better recognition.</param>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.LinearBarcodeRecognition.FindBarcode(Infragistics.Controls.Barcodes.BarcodeZone)">
            <summary>
            Finds a barcode symbology in the specified zone. The result is used when 2d symbologies are scan
            to stop the zones iteration as the whole image pixels are passed and parsed.
            </summary>
            <param name="zone">The zone.</param>
            <returns>
            A value determining should the recognition algorithm continue.
            </returns>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.TwoDBarcodeRecognition">
            <summary>
            Descrbes the two dimensional symbology recognition.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.TwoDBarcodeRecognition.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Barcodes.TwoDBarcodeRecognition"/> class.
            </summary>
            <param name="isZoomed">if set to <c>true</c> the image pixels are zoomed.</param>
        </member>
        <member name="M:Infragistics.Controls.Barcodes.TwoDBarcodeRecognition.FindBarcode(Infragistics.Controls.Barcodes.BarcodeZone)">
            <summary>
            Finds a barcode symbology in the specified zone. The result is used when 2d symbologies are scan
            to stop the zones iteration as the whole image pixels are passed and parsed.
            </summary>
            <param name="zone">The zone.</param>
            <returns>
            A value determining should the recognition algorithm continue.
            </returns>
        </member>
        <member name="T:Infragistics.Controls.Barcodes.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Barcodes.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Barcodes.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
    </members>
</doc>
