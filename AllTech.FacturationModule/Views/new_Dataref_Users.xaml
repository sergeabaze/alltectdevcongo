<Window x:Class="AllTech.FacturationModule.Views.new_Dataref_Users"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
         xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
         xmlns:boxValidation="clr-namespace:AllTech.FrameWork.UIControl;assembly=AllTech.FrameWork"
        xmlns:localVisible="clr-namespace:AllTech.FrameWork.Converter;assembly=AllTech.FrameWork"
        xmlns:imgConverter="clr-namespace:AllTech.FrameWork.Converter;assembly=AllTech.FrameWork"
        xmlns:ig="http://schemas.infragistics.com/xaml"
        xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives"
        xmlns:igFramework="clr-namespace:Infragistics.Samples.Framework;assembly=Infragistics.Samples.Framework"
        Height="600" Width="981.97"   WindowStartupLocation="Manual"  WindowStyle="None">
    <Window.Resources >
        <localVisible:BoolVisibilityConverter x:Key="visibled"/>
        <localVisible:MenuBoolVisibilityConverter x:Key="Newvisible"/>
        <imgConverter:BinaryImageConverter x:Key="convertimg"/>
        <DataTemplate x:Key="listBoxTemplate">
            <TextBlock Text="{Binding LibelleVue}"/>
        </DataTemplate>
        <DataTemplate x:Key="listBoxTemplateUseDetail">
            <Grid >
                <Grid.RowDefinitions >
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="20"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions >
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="30"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Row="0" Grid.Column="0" Text="Lecture" Foreground="Green" FontSize="11" ToolTip="droit de consultation données" Margin="0,0"/>
                <CheckBox  IsEnabled="{Binding IsEnableAllVue}"  IsChecked="{Binding Lecture, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Grid.Row="0" Grid.Column="1" Margin="3,2"/>
                <TextBlock Grid.Row="0" Grid.Column="2" Text="Ecriture" ToolTip="droit de création ou de modification des données"  Margin="10,2"/>
                <CheckBox  Grid.Row="0" Grid.Column="3"  IsEnabled="{Binding IsEnableAllVue}" IsChecked="{Binding Ecriture, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  Margin="3,2"/>
                <TextBlock Grid.Row="0" Grid.Column="4" Text="Suppression" ToolTip="droit de suppression des données" Margin="10,2"/>
                <CheckBox  Grid.Row="0" Grid.Column="5" IsEnabled="{Binding IsEnableAllVue}"  IsChecked="{Binding Suppression, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  Margin="3,2"/>

                <TextBlock Grid.Row="1" Grid.Column="0" Text="Super" ToolTip="droits supérieurs" Margin="0,5"/>
                <CheckBox  Grid.Row="1" Grid.Column="1"   IsEnabled="{Binding IsEnableSuperVue}"  IsChecked="{Binding Super, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  Margin="3,5"/>
                <TextBlock Grid.Row="1" Grid.Column="2" Text="Impression" ToolTip="droit d'impressionUsergrid  données" Margin="0,5"/>
                <CheckBox  Grid.Row="1" Grid.Column="3" IsEnabled="{Binding IsEnableAllVue}" IsChecked="{Binding Impression, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  Margin="3,5"/>
                <TextBlock Grid.Row="1" Grid.Column="4" Text="Validation" ToolTip="droit de modifications des statuts des factures " Margin="0,5"/>
                <CheckBox  Grid.Row="1" Grid.Column="5" IsEnabled="{Binding IsEnableAllVue}" IsChecked="{Binding Validation, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  Margin="3,5"/>

                <TextBlock Grid.Row="2" Grid.Column="0" Text="site global" ToolTip="droits sur d'uatres sites" Margin="0,5"/>
                <CheckBox  Grid.Row="2" Grid.Column="1" IsEnabled="{Binding IsEnableUserGlobalSiteVue}" IsChecked="{Binding Testeur, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  Margin="3,5"/>
                <TextBlock Grid.Row="2" Grid.Column="2" Text="Proprietaire"  ToolTip=" super droits au responsable de l'application" Margin="0,5"/>
                <CheckBox  Grid.Row="2" Grid.Column="3" IsEnabled="{Binding IsEnableVue}"  IsChecked="{Binding Proprietaire, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  Margin="3,5"/>
                <TextBlock Grid.Row="2" Grid.Column="4" Text="Edition" ToolTip="droit  modification des données"  Margin="0,5"/>
                <CheckBox  Grid.Row="2" Grid.Column="5" IsEnabled="{Binding IsEnableAllVue}" IsChecked="{Binding Edition, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  Margin="3,5"/>

                <TextBlock Grid.Row="3" Grid.Column="0" Text="Execution" ToolTip="droit exécution des import/export" Margin="0,2"/>
                <CheckBox  Grid.Row="3" Grid.Column="1" IsEnabled="{Binding IsEnableExecuteVue}" IsChecked="{Binding Execution, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  Margin="3,2"/>

            </Grid>
        </DataTemplate>
    </Window.Resources>
    <Grid x:Name="LayoutRoot" Width="auto" Height="auto">
        <GroupBox Header="Interface Utilisateurs et profiles"  FontSize="12"   Margin="9,7,13.97,12" Style="{DynamicResource GroupBoxStyle1}">
            <TabControl >
                <TabItem Header="utilisateurs">
                    <DockPanel >
                        <Border DockPanel.Dock="Top">
                            <ToolBarTray >
                                <ToolBar Width="auto" >
                                    <Button Background="Transparent" 
                                    Command="{Binding NewCommand}" Width="30" Height="30" ToolTip="Nouveau">
                                        <Image Source="{StaticResource new}" />
                                    </Button>
                                    <Button Background="Transparent"   ToolTip="Sauvegarder" Command="{Binding SaveCommand}" 
                                     Width="30" Height="30" TabIndex="6">
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Cursor" Value="Arrow"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=IsBusy}" Value="True">
                                                        <Setter Property="Cursor" Value="Wait"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                        <Image Source="{StaticResource save}" >
                                            <Image.Style >
                                                <Style TargetType="Image">
                                                    <Style.Triggers >
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Opacity" Value="0.5"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Image.Style>
                                        </Image>
                                    </Button>
                                    <Button Background="Transparent"  ToolTip="Supprimer " Width="30" Height="30"  
                                   
                                    Command="{Binding DeleteCommand}"  TabIndex="7">
                                        <Button.Style >
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Cursor" Value="Arrow"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=IsBusy}" Value="True">
                                                        <Setter Property="Cursor" Value="Wait"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>

                                        <Image Source="{StaticResource delete}">
                                            <Image.Style >
                                                <Style TargetType="Image">
                                                    <Style.Triggers >
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Opacity" Value="0.5"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Image.Style>
                                        </Image>


                                    </Button>
                                    <Separator />
                                    <TextBox Width="180" BorderBrush="Blue" BorderThickness="1" 
                                      KeyUp="search_KeyUp "
                             Text="{Binding Filtertexte, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBlock Width="30" Height="20" >
                        <TextBlock.Background >
                            <ImageBrush ImageSource="{StaticResource loupe_petite}"/>
                        </TextBlock.Background>
                                    </TextBlock>

                                    <Separator />
                                    <Button ToolTip=" fermer la fenêtre"  HorizontalAlignment="Right" Width="30" Height="30" Click="Button_Click">
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Cursor" Value="Arrow"/>
                                            </Style>
                                        </Button.Style>
                                        <Button.Background>
                                            <ImageBrush ImageSource="{StaticResource cancel}" />
                                        </Button.Background>
                                    </Button>
                                </ToolBar>
                            </ToolBarTray>
                        </Border>

                        <Border DockPanel.Dock="Bottom" >
                              <Grid Height="auto">
                                <Grid.RowDefinitions >
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                   
                                </Grid.RowDefinitions>
                                  
                                <Border Grid.Row="0" BorderThickness="0" BorderBrush="#FF02BBFF" Height="210" Width="auto">
                                    <Grid >
                                        <Grid.RowDefinitions >
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions >
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="100"/>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>

                                        <Border Grid.Row="0" Grid.Column="0" Grid.RowSpan="4" HorizontalAlignment="Left" Width="149" Margin="8,9,0,0" 
                                                Height="110" Background="#FF5B5B65"  VerticalAlignment="Top"  >
                                            <Border.BitmapEffect>
                                                <DropShadowBitmapEffect Color="#FFA9A9A9" Direction="316" ShadowDepth="7" Softness="0.075"/>
                                            </Border.BitmapEffect>
                                            <Image Width="Auto" Height="Auto" 
                                           Source="{Binding UserSelected.Photo, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                                           Stretch="Fill" StretchDirection="DownOnly" HorizontalAlignment="Stretch" VerticalAlignment="Top"/>
                                        </Border>
                                        <TextBlock Foreground="Green"  Grid.Row="0" Grid.Column="1" FontWeight="Bold"  Text="Nom: " TextWrapping="Wrap" Margin="10,5,0,0" FontSize="13"   HorizontalAlignment="Left" VerticalAlignment="Top" Width="52"/>
                                        <TextBox  Grid.Row="0" Grid.Column="2" IsEnabled="{Binding IsfieldEnabled}" MaxWidth="220" Width="auto" MinWidth="180" BorderBrush="Blue" 
                                                  TabIndex="0" Text="{Binding UserSelected.Nom, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,0" Height="25"  />

                                        <TextBlock Text="Prenom: " Grid.Row="1" Grid.Column="1"  FontWeight="Bold"  Foreground="Green"   TextWrapping="Wrap" Margin="10,5,0,0" FontSize="13"  HorizontalAlignment="Left" VerticalAlignment="Top" Width="57.867"/>
                                        <TextBox Grid.Row="1" Grid.Column="2"  IsEnabled="{Binding IsfieldEnabled}" BorderBrush="Blue"  MaxWidth="220" Width="auto" MinWidth="180" Height="25" TabIndex="1" Text="{Binding UserSelected.Prenom, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,0"/>

                                        <TextBlock Grid.Row="2" Grid.Column="1" Foreground="Green" FontWeight="Bold"   Text="Function: " TextWrapping="Wrap" Margin="10,5,0,0" FontSize="13"  HorizontalAlignment="Left" VerticalAlignment="Top" Width="64"/>
                                        <TextBox Grid.Row="2" Grid.Column="2" IsEnabled="{Binding IsfieldEnabled}" BorderBrush="Blue"  MaxWidth="220" Width="auto" MinWidth="180" Height="25" TabIndex="2" Text="{Binding UserSelected.Fonction, UpdateSourceTrigger=PropertyChanged}"  Margin="0,0,0,0"/>

                                        <TextBlock Grid.Row="3" Grid.Column="1" Foreground="Green" FontWeight="Bold"    Text="Profile: " TextWrapping="Wrap" Margin="10,5,0,0" FontSize="13"  HorizontalAlignment="Left" VerticalAlignment="Top" Width="52.867"/>
                                        <ComboBox Grid.Row="3" Grid.Column="2" IsEnabled="{Binding IsfieldEnabled}"  TabIndex="5" ItemsSource="{Binding ProfileList}"  MaxWidth="188" Width="auto" MinWidth="80" BorderBrush="Blue"
                                                   DisplayMemberPath="Libelle" IsEditable="True" Height="25" x:Name="cmbprofile"
                                                   SelectedItem="{Binding ProfileSelected}"  SelectedValuePath="IdProfile" SelectedIndex="{Binding IndexeProfile}"
                                                    Margin="0,0,0,0">

                                        </ComboBox>

                                        <CheckBox Grid.Row="4" Grid.Column="2" IsChecked="{Binding CheckingTemporaire}"  IsEnabled="{Binding CheckTemporaireEnabled}"    FontSize="13" 
                                                  Content="Temporaire" Margin="0,0,0,0" Foreground="Green" FontWeight="Bold"  />

                                        <TextBlock Grid.Row="0" Grid.Column="4" Visibility="{Binding BtnInitVisible,Converter={StaticResource visibled}}"
                                            Text="Loggin: " Foreground="Green"   TextWrapping="Wrap" Margin="0,5,0,0" FontSize="13" 
                                           HorizontalAlignment="Left" VerticalAlignment="Top" Width="50"/>
                                        <TextBox Grid.Row="0" Grid.Column="5"    Background="White" MaxWidth="200" MinWidth="180"   Width="auto" Height="auto" MaxHeight="25"  IsEnabled="{Binding IsfieldEnabled}" Margin="0,0"
                                                   Text="{Binding UserSelected.Loggin, UpdateSourceTrigger=PropertyChanged}"  HorizontalAlignment="Left"  Grid.ColumnSpan="2"
                                                     />

                                        <Button Command="{Binding InitPassCommand}"   Height="25"
                                                CommandParameter="{Binding IsChecked,  ElementName=choice ,Path=value}" 
                                         Width="auto" MinWidth="120" Content="Initialiser motpasse" Margin="0,0,0,0" Grid.Row="1" Grid.Column="5" />
                                        <Button Content="Vérouiller Compte"  HorizontalAlignment="Left" MaxWidth="120" Width="auto" MinWidth="100"  Margin="0,0,0,0" Command="{Binding LockPassCommand}"
                                          Height="21" Grid.Row="2" Grid.Column="5" />

                                        <TextBlock Text="Photo: " Foreground="Green"   TextWrapping="Wrap" Margin="0,0,0,0" FontSize="12" 
                                           HorizontalAlignment="Left" VerticalAlignment="Top" Width="52.867" Grid.Row="3" Grid.Column="4"/>
                                        <Button Content="..." Width="40" Height="25" Margin="0,0,0,0" HorizontalAlignment="Left"  Click="btnadPhoto_Click" x:Name="btnadPhoto" Grid.Row="3" Grid.Column="5" />

                                        <Border Background="Gray"   Margin="0,0,0,0"  MaxWidth="188" Width="auto" MinWidth="100" Height="52" Grid.Row="5" Grid.Column="5" Grid.ColumnSpan="3"  >
                                            <Grid >
                                                <Grid.RowDefinitions >
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions >
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Foreground="Green"  Text="Date début" Grid.Row="0" Grid.Column="0"/>
                                                <TextBlock Foreground="Green"  Text="Date Fin" Grid.Row="0" Grid.Column="1"/>
                                                <DatePicker SelectedDate="{Binding StartDate, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Grid.Row="1" Margin="6,2,0,9" Width="80" />
                                                <DatePicker SelectedDate="{Binding EndDate, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  Grid.Column="1" Margin="3,1,0,10" Width="80" Grid.Row="1" />
                                            </Grid>
                                        </Border>
                                    </Grid>
                                </Border>
                                   

                                <Border BorderThickness="1" BorderBrush="#FF02BBFF" Grid.Row="1"  Margin="0,0,0,0" Grid.RowSpan="4" >
                                    <Grid >
                                        <Grid.RowDefinitions >
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="auto"/>
                                            <RowDefinition Height="auto" />
                                        </Grid.RowDefinitions>
                                        <StackPanel Grid.Row=" 0" Orientation="Horizontal"    >
                                            <Button Content="Utilisateurs actifs" Margin="20,0,3,0" Width="100" Height="25" Grid.RowSpan="2" HorizontalAlignment="Left" 
                                              Command="{Binding RefreshValideCommand}"    Visibility="{Binding BtnInitVisible,Converter={StaticResource visibled}}"/>
                                            <Button Content="Utilisateurs Désactivés" Margin="0,0,0,0" Height="25" Width="120" Grid.RowSpan="2" HorizontalAlignment="Left" 
                                         Command="{Binding RefreshLockCommand}"   Visibility="{Binding BtnInitVisible,Converter={StaticResource visibled}}"/>
                                            <ProgressBar Margin="20,0,0,0" Width=" 116"  Style="{StaticResource CustomProgressBarStyle}" 
                                         Height="15" IsIndeterminate="{Binding IsBusy}" 
                                             Visibility="{Binding Path=ProgressBarVisibility, Converter={StaticResource visibled}}" Grid.RowSpan="2" />

                                        </StackPanel>
                                        <ig:XamGrid x:Name="userGrid" Grid.Row="1"  ItemsSource="{Binding Path=Users}"  RowHeight="25"
                                           MouseDoubleClick="userGrid_MouseDoubleClick"   MinWidth="300" Height="170" Margin="0,5,0,0"
                                                     RowHover="Row" HeaderRowHeight="25" AutoGenerateColumns="False" >
                                            <ig:XamGrid.ColumnResizingSettings >
                                                <ig:ColumnResizingSettings AllowColumnResizing="Immediate" >
                                                </ig:ColumnResizingSettings>
                                            </ig:XamGrid.ColumnResizingSettings>
                                            <ig:XamGrid.RowSelectorSettings>
                                                <ig:RowSelectorSettings x:Name="rowSelectorSettings"  />
                                            </ig:XamGrid.RowSelectorSettings>
                                            <ig:XamGrid.Columns >
                                                <ig:TextColumn Key="Nom" Width="250" >
                                                    <ig:TextColumn.HeaderTemplate >
                                                        <DataTemplate >
                                                            <TextBlock Text="Nom" />
                                                        </DataTemplate>
                                                    </ig:TextColumn.HeaderTemplate>
                                                </ig:TextColumn>

                                                <ig:TextColumn Key="Prenom" Width="250" >
                                                    <ig:TextColumn.HeaderTemplate >
                                                        <DataTemplate >
                                                            <TextBlock Text="Prénom" />
                                                        </DataTemplate>
                                                    </ig:TextColumn.HeaderTemplate>
                                                </ig:TextColumn>

                                                <ig:TextColumn Key="Fonction" Width="220" >
                                                    <ig:TextColumn.HeaderTemplate >
                                                        <DataTemplate >
                                                            <TextBlock Text="fonction" />
                                                        </DataTemplate>
                                                    </ig:TextColumn.HeaderTemplate>
                                                </ig:TextColumn>
                                                <ig:TextColumn Key="Profile.Libelle" Width="230" >
                                                    <ig:TextColumn.HeaderTemplate >
                                                        <DataTemplate >
                                                            <TextBlock Text="Profile" />
                                                        </DataTemplate>
                                                    </ig:TextColumn.HeaderTemplate>
                                                </ig:TextColumn>
                                            </ig:XamGrid.Columns>
                                            <ig:XamGrid.SelectionSettings>
                                                <ig:SelectionSettings CellClickAction="SelectRow"  CellSelection="Multiple"  RowSelection="Single" ></ig:SelectionSettings>
                                            </ig:XamGrid.SelectionSettings>
                                            <ig:XamGrid.SortingSettings>
                                                <ig:SortingSettings AllowSorting="True"></ig:SortingSettings>
                                            </ig:XamGrid.SortingSettings>
                                        </ig:XamGrid>


                                        <Border Background="White" Grid.Row="2" VerticalAlignment="Top" Margin="0,0,0,0">
                                            <StatusBar>
                                                <StatusBarItem >
                                                    <StackPanel Orientation="Horizontal" >
                                                        <Label Content="Total des Utilisateurs :" Foreground="Blue" FontWeight="Bold" Margin="0,2" />
                                                        <TextBox Text="{Binding TotalUstilisateurs}" Margin="10,0 " Width="50" IsReadOnly="True"   />
                                                    </StackPanel>
                                                </StatusBarItem>
                                                <StatusBarItem>
                                                    <TextBlock Text="{Binding Liseteselectionner}" Width="200" Margin="10,0" Visibility="{Binding BtnInitVisible,Converter={StaticResource visibled}}" />
                                                </StatusBarItem>
                                            </StatusBar>
                                        </Border>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Border>
                    </DockPanel>
                </TabItem>

                <TabItem Header="Vues Utilisateurs" Visibility="{Binding Path=IsUserProfileVisible, Converter={StaticResource Newvisible}}"  >
                    <Grid >
                        <Grid.RowDefinitions >
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>

                        <ToolBarTray Grid.Row="0" >
                            <ToolBar Width="auto" >
                                <Button ToolTip=" fermer la fenêtre"  HorizontalAlignment="Right" Width="30" Height="30" Click="Button_Click">
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="Cursor" Value="Arrow"/>
                                        </Style>
                                    </Button.Style>
                                    <Button.Background>
                                        <ImageBrush ImageSource="{StaticResource cancel}" />
                                    </Button.Background>
                                </Button>
                            </ToolBar>
                        </ToolBarTray>
                        <Border Grid.Row="1">
                            <Grid>
                                <Grid.RowDefinitions >
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions >
                                    <ColumnDefinition Width="402*"/>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>

                                <Border  Grid.Row="0">
                                    <Grid>
                                        <Grid.RowDefinitions >
                                            <RowDefinition Height="auto"/>
                                            <RowDefinition Height="auto"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions >
                                            <ColumnDefinition Width="auto"/>
                                            <ColumnDefinition Width="auto"/>
                                        </Grid.ColumnDefinitions>

                                        <TextBlock Text="Liste des utilisateurs :" Grid.Row="0" FontWeight="Bold"  Grid.Column="0" Foreground="Green"  />
                                        <ComboBox  Grid.Row="0" Grid.Column="1"  Margin="10,0"
                                                   DisplayMemberPath="Nom"
                                                    SelectedItem="{Binding UserdroitSelected}"
                                                   ItemsSource="{Binding Users}" Width="150"/>
                                    </Grid>
                                </Border>
                                <Border Grid.Row="1" Grid.Column="0" Margin="0,20">
                                    <DockPanel >
                                        <Border DockPanel.Dock="Top" >
                                            <Grid >
                                                <Grid.RowDefinitions >
                                                    <RowDefinition Height=" auto"/>
                                                    <RowDefinition Height=" auto"/>
                                                    <RowDefinition Height=" auto"/>
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions >
                                                    <ColumnDefinition Width="128"/>
                                                    <ColumnDefinition Width="239"/>
                                                    <ColumnDefinition Width="31*" />
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Text="Liste des vues :" FontWeight="Bold" Foreground="Green" Margin="0,0,31,0" />
                                                <ComboBox Grid.Column="1" Width="150" ItemsSource="{Binding ListVuewNotChild}" HorizontalAlignment="Left"
                                                            SelectedItem="{Binding VueSelected}" DisplayMemberPath="Libelle" Margin="10,0,45,0" />

                                                <TextBlock Text="Liste des sous vues :" Width="130" FontWeight="Bold"  Grid.Row="1" Grid.Column="0" Foreground="Green"   
                                                           Visibility="{Binding IsSousVueCmbVisible,Converter={StaticResource visibled}}" Margin="0,0,0,0" />
                                                <ComboBox  Grid.Row="1" Grid.Column="1" Width="150" ItemsSource="{Binding NewlisteSousVues}"
                                                            SelectedItem="{Binding NewSouVueSelected}" DisplayMemberPath="Libelle" Margin="10,5"
                                                             Visibility="{Binding IsSousVueCmbVisible,Converter={StaticResource visibled}}"  HorizontalAlignment="Left"/>
                                                <StackPanel Orientation="Horizontal" Grid.Row="2" Margin="5,5,36,5">
                                                    <Button  ToolTip="Ajouter une vue à ce utilisateur" Width="30" Height="30" Margin="5,0" Background="Transparent" Command="{Binding AddVueCommand}" >
                                                        <Button.Style>
                                                            <Style TargetType="{x:Type Button}">
                                                                <Setter Property="Cursor" Value="Arrow"/>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Path=IsBusy}" Value="True">
                                                                        <Setter Property="Cursor" Value="Wait"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Button.Style>
                                                        <Image Source="{StaticResource new_add}" >
                                                            <Image.Style >
                                                                <Style TargetType="Image">
                                                                    <Style.Triggers >
                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                            <Setter Property="Opacity" Value="0.5"/>
                                                                        </Trigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </Image.Style>
                                                        </Image>
                                                    </Button>

                                                </StackPanel>
                                            </Grid>
                                        </Border>
                                        <GroupBox Header="Vues d'un utilisateur"  Width="400" HorizontalAlignment="Left" DockPanel.Dock="Bottom"  >
                                            <DockPanel >

                                                <Border DockPanel.Dock="Bottom" >
                                                    <Grid>
                                                        <Grid.RowDefinitions >
                                                            <RowDefinition Height="auto"/>
                                                            <RowDefinition Height="auto"/>
                                                        </Grid.RowDefinitions>
                                                        <DataGrid  Grid.Row="0"  AutoGenerateColumns="False" ItemsSource="{Binding Path=ListeVuesUsers}"
                                                             IsReadOnly="True"   ScrollViewer.VerticalScrollBarVisibility="Auto" 
                                                                 AlternatingRowBackground="Gainsboro"  Background="LightGray" RowBackground="LightYellow" 
                                                             Height="140" SelectedItem="{Binding VueUserSelected}">
                                                            <DataGrid.Resources >
                                                                <Style x:Key="CenterCellStyle" TargetType="{x:Type DataGridCell}">
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                                                                <Grid Background="{TemplateBinding Background}">
                                                                                    <ContentPresenter HorizontalAlignment="Center" 
                                                                        VerticalAlignment="Center"/>
                                                                                </Grid>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Style.Triggers>
                                                                        <Trigger Property="IsSelected" Value="True">
                                                                            <Setter Property="Background" Value="Green"   />
                                                                            <Setter Property="BorderBrush" Value="Blue"  />
                                                                            <Setter Property="Foreground"  Value="White"   />

                                                                        </Trigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                                <Style TargetType="{x:Type DataGridColumnHeader}" x:Key="styleEntete">
                                                                    <Setter Property="HorizontalAlignment" Value="Center"/>
                                                                    <Setter Property="FontSize"   Value="13" />
                                                                    <Setter Property="FontWeight"  Value="Bold"  />
                                                                    <Setter Property="Foreground"  Value="Green"     />

                                                                </Style>
                                                            </DataGrid.Resources>
                                                            <DataGrid.Columns >
                                                                <DataGridTextColumn Header="Libelle Vues" Width="200" Binding="{Binding LibelleVue}" CellStyle="{StaticResource CenterCellStyle}"></DataGridTextColumn>
                                                                <DataGridTextColumn Header="Statut" Width="110" Binding="{Binding Statut}" CellStyle="{StaticResource CenterCellStyle}"></DataGridTextColumn>
                                                                <DataGridTemplateColumn Header="..">
                                                                    <DataGridTemplateColumn.CellTemplate >
                                                                        <DataTemplate >
                                                                            <Button  Width="25" Height="20" Cursor="Hand" ToolTip="Supprimer"   Command="{Binding DataContext.DeleteVueCommand, RelativeSource={RelativeSource AncestorType={x:Type  DataGrid}}}"
                                                                                 CommandParameter="{Binding VueUserSelected}">
                                                                                <Image Source="{StaticResource new_delete}" >
                                                                                    <Image.Style >
                                                                                        <Style TargetType="Image">
                                                                                            <Style.Triggers >
                                                                                                <Trigger Property="IsEnabled" Value="False">
                                                                                                    <Setter Property="Opacity" Value="0.5"/>
                                                                                                </Trigger>
                                                                                            </Style.Triggers>
                                                                                        </Style>
                                                                                    </Image.Style>
                                                                                </Image>
                                                                            </Button>
                                                                        </DataTemplate>
                                                                    </DataGridTemplateColumn.CellTemplate>
                                                                </DataGridTemplateColumn>

                                                                <DataGridTemplateColumn Header="..">
                                                                    <DataGridTemplateColumn.CellTemplate >
                                                                        <DataTemplate >
                                                                            <Button  Width="25" Height="20" Cursor="Hand" ToolTip="Annuler Operation"   
                                                                                     Command="{Binding DataContext.CancelVueCommand, RelativeSource={RelativeSource AncestorType={x:Type  DataGrid}}}"
                                                                                 CommandParameter="{Binding VueUserSelected}">
                                                                                <Image Source="{StaticResource cancel}" >
                                                                                    <Image.Style >
                                                                                        <Style TargetType="Image">
                                                                                            <Style.Triggers >
                                                                                                <Trigger Property="IsEnabled" Value="False">
                                                                                                    <Setter Property="Opacity" Value="0.5"/>
                                                                                                </Trigger>
                                                                                            </Style.Triggers>
                                                                                        </Style>
                                                                                    </Image.Style>
                                                                                </Image>
                                                                            </Button>
                                                                        </DataTemplate>
                                                                    </DataGridTemplateColumn.CellTemplate>
                                                                </DataGridTemplateColumn>

                                                            </DataGrid.Columns>
                                                        </DataGrid>
                                                        <DataGrid Grid.Row="1" Height="120" Margin="0,10" Background="#D8D8EB" 
                                                                   ItemsSource="{Binding ListeSousVues}" AutoGenerateColumns="False" 
                                                                   SelectedItem="{Binding SousvueSelected}">
                                                            <DataGrid.Resources >

                                                                <Style x:Key="CenterCellStyle" TargetType="{x:Type DataGridCell}">
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                                                                <Grid Background="{TemplateBinding Background}">
                                                                                    <ContentPresenter HorizontalAlignment="Center" 
                                                                        VerticalAlignment="Center"/>
                                                                                </Grid>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Style.Triggers>
                                                                        <Trigger Property="IsSelected" Value="True">
                                                                            <Setter Property="Background" Value="Black"     />
                                                                            <Setter Property="BorderBrush" Value="Blue"  />
                                                                            <Setter Property="Foreground"  Value="White"   />

                                                                        </Trigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                                <Style TargetType="{x:Type DataGridColumnHeader}" x:Key="styleEntete">
                                                                    <Setter Property="HorizontalAlignment" Value="Center"/>
                                                                    <Setter Property="FontSize"   Value="13" />
                                                                    <Setter Property="FontWeight"  Value="Bold"  />
                                                                    <Setter Property="Foreground"  Value="Green"     />

                                                                </Style>

                                                            </DataGrid.Resources>

                                                            <DataGrid.Columns >
                                                                <DataGridCheckBoxColumn Header="" Binding="{Binding IsCheckvue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                                                        IsReadOnly="False" CellStyle="{StaticResource CenterCellStyle}" />
                                                                <DataGridTemplateColumn Header="Libelle sous vue" Width="180">
                                                                    <DataGridTemplateColumn.CellTemplate >
                                                                        <DataTemplate >
                                                                            <Label Content="{Binding LibelleSouVue}" Background="{Binding BackGround}" Foreground="Green" />
                                                                        </DataTemplate>
                                                                    </DataGridTemplateColumn.CellTemplate>
                                                                </DataGridTemplateColumn>
                                                                <DataGridTextColumn Header="Statut" Width="110" Binding="{Binding Statut}" CellStyle="{StaticResource CenterCellStyle}"></DataGridTextColumn>
                                                                <DataGridTemplateColumn Header="..">
                                                                    <DataGridTemplateColumn.CellTemplate >
                                                                        <DataTemplate >
                                                                            <Button  Width="25" Height="20" Cursor="Hand"   
                                                                                     Command="{Binding DataContext.DeleteVueCommand, RelativeSource={RelativeSource AncestorType={x:Type  DataGrid}}}"
                                                                                 CommandParameter="{Binding VueUserSelected}">
                                                                                <Image Source="{StaticResource new_delete}" >
                                                                                    <Image.Style >
                                                                                        <Style TargetType="Image">
                                                                                            <Style.Triggers >
                                                                                                <Trigger Property="IsEnabled" Value="False">
                                                                                                    <Setter Property="Opacity" Value="0.5"/>
                                                                                                </Trigger>
                                                                                            </Style.Triggers>
                                                                                        </Style>
                                                                                    </Image.Style>
                                                                                </Image>
                                                                            </Button>
                                                                        </DataTemplate>
                                                                    </DataGridTemplateColumn.CellTemplate>
                                                                </DataGridTemplateColumn>
                                                                <DataGridTemplateColumn Header="..">
                                                                    <DataGridTemplateColumn.CellTemplate >
                                                                        <DataTemplate >
                                                                            <Button  Width="25" Height="20" Cursor="Hand" ToolTip="Annuler Operation"   Command="{Binding DataContext.CancelVueCommand, RelativeSource={RelativeSource AncestorType={x:Type  DataGrid}}}"
                                                                                 CommandParameter="{Binding VueUserSelected}">
                                                                                <Image Source="{StaticResource cancel}" >
                                                                                    <Image.Style >
                                                                                        <Style TargetType="Image">
                                                                                            <Style.Triggers >
                                                                                                <Trigger Property="IsEnabled" Value="False">
                                                                                                    <Setter Property="Opacity" Value="0.5"/>
                                                                                                </Trigger>
                                                                                            </Style.Triggers>
                                                                                        </Style>
                                                                                    </Image.Style>
                                                                                </Image>
                                                                            </Button>
                                                                        </DataTemplate>
                                                                    </DataGridTemplateColumn.CellTemplate>
                                                                </DataGridTemplateColumn>
                                                            </DataGrid.Columns>

                                                        </DataGrid>
                                                    </Grid>
                                                </Border>
                                            </DockPanel>

                                        </GroupBox>



                                    </DockPanel>

                                </Border>
                                <GroupBox Header="Liste des droits d'une vue"  Width="500" HorizontalAlignment="Right"   Margin="5,20" Grid.Row="1" Grid.Column="2">
                                    <DockPanel >
                                        <Border DockPanel.Dock="Top" >
                                            <Button Background="Transparent"   ToolTip="Sauvegarder le droit sélectionné" Command="{Binding UpdateVueCommand}"  HorizontalAlignment="Left" 
                                                
                                               Width="30" Height="30" TabIndex="6">
                                                <Button.Style>
                                                    <Style TargetType="{x:Type Button}">
                                                        <Setter Property="Cursor" Value="Arrow"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Path=IsBusy}" Value="True">
                                                                <Setter Property="Cursor" Value="Wait"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                                <Image Source="{StaticResource save}" >
                                                    <Image.Style >
                                                        <Style TargetType="Image">
                                                            <Style.Triggers >
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" Value="0.5"/>
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Image.Style>
                                                </Image>
                                            </Button>
                                        </Border>
                                        <ListBox  DockPanel.Dock="Bottom" VerticalAlignment="Top"   ItemsSource="{Binding DroitUserItem}" SelectedItem="{Binding DroitUserSelected}"
                                              ItemTemplate="{StaticResource listBoxTemplateUseDetail}" Height="200">

                                        </ListBox>
                                    </DockPanel>

                                </GroupBox>
                            </Grid>
                        </Border>
                    </Grid>
                </TabItem>

                
                <TabItem Header="Profiles" Visibility="{Binding Path=IsProfileVisible, Converter={StaticResource Newvisible}}" >
                    <Grid >
                        <Grid.RowDefinitions >
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>

                        </Grid.RowDefinitions>

                        <ToolBarTray Grid.Row="0" >
                            <ToolBar Width="auto" >
                                <Button ToolTip=" fermer la fenêtre"  HorizontalAlignment="Right" Width="30" Height="30" Click="Button_Click">
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="Cursor" Value="Arrow"/>
                                        </Style>
                                    </Button.Style>
                                    <Button.Background>
                                        <ImageBrush ImageSource="{StaticResource cancel}" />
                                    </Button.Background>
                                </Button>
                            </ToolBar>
                        </ToolBarTray>
                        <Border Grid.Row="1">
                            <Grid>
                                <Grid.RowDefinitions >
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions >
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>

                                <Border Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="1">
                                    <StackPanel Orientation="Horizontal" >
                                        <Label Content="Listes Profiles :" Foreground="Green" FontWeight="Bold"  Margin="10,0" />
                                        <ComboBox   HorizontalAlignment="Left" Margin="25,0"
                                                   DisplayMemberPath="Libelle" 
                                                    SelectedItem="{Binding ProfileDroitSelected}"
                                                   ItemsSource="{Binding ProfileList}" Width="150"/>
                                    </StackPanel>
                                </Border>

                                <Border Grid.Row="1" Grid.Column="0">
                                    <Grid>
                                        <Grid.RowDefinitions >
                                            <RowDefinition Height="auto"/>
                                            <RowDefinition Height="auto"/>
                                            <RowDefinition Height="auto"/>
                                            <RowDefinition Height="auto"/>
                                            <RowDefinition Height="auto"/>
                                        </Grid.RowDefinitions>

                                        <Grid.ColumnDefinitions >
                                            <ColumnDefinition Width="116"/>
                                            <ColumnDefinition Width="316"/>
                                        </Grid.ColumnDefinitions>

                                        <TextBlock Text="Liste Vues :" FontWeight="Bold" Foreground="Green" HorizontalAlignment="Left" Margin="10,10"  />
                                        <ComboBox Grid.Column="1" Width="150" ItemsSource="{Binding ListProfileVuewNotChild}"
                                                   DisplayMemberPath="Libelle" HorizontalAlignment="Left" Margin="25,10,0,0"
                                                   SelectedItem="{Binding VueProfileSelected}"/>

                                        <TextBlock Text="Liste sous Vues:" FontWeight="Bold" Grid.Row="1" Foreground="Green"   Margin="10,0"
                                                   HorizontalAlignment="Left" Visibility="{Binding IsSousVueProfileCmbVisible,Converter={StaticResource visibled}}" />
                                        <ComboBox Grid.Row="1" Grid.Column="1" Width="150" ItemsSource="{Binding NewlisteprofileSousVues}"
                                                   DisplayMemberPath="Libelle" HorizontalAlignment="Left" Margin="25,5,0,0"
                                                   SelectedItem="{Binding SouVueProfileSelected}"  Visibility="{Binding IsSousVueProfileCmbVisible,Converter={StaticResource visibled}}"/>

                                        <DockPanel Grid.Row="3" Grid.ColumnSpan="2">

                                            <Button DockPanel.Dock="Top"  HorizontalAlignment="Left" ToolTip="Ajouter une vue au profile" Width="30" Height="30" Margin="5,0" Background="Transparent" Command="{Binding AddVueProfileCommand}" >
                                                <Button.Style>
                                                    <Style TargetType="{x:Type Button}">
                                                        <Setter Property="Cursor" Value="Arrow"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Path=IsBusy}" Value="True">
                                                                <Setter Property="Cursor" Value="Wait"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                                <Image Source="{StaticResource new_add}" >
                                                    <Image.Style >
                                                        <Style TargetType="Image">
                                                            <Style.Triggers >
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" Value="0.5"/>
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Image.Style>
                                                </Image>
                                            </Button>
                                            <GroupBox Header="Vues d'un Profile"   HorizontalAlignment="Left" DockPanel.Dock="Bottom"  Width="430" >
                                                <Grid >
                                                    <Grid.RowDefinitions >
                                                        <RowDefinition Height="auto"/>
                                                        <RowDefinition Height="auto"/>
                                                    </Grid.RowDefinitions>
                                                    <DataGrid Grid.Row="0"  AutoGenerateColumns="False" ItemsSource="{Binding Path=ListeVuesProfile}"
                                                             IsReadOnly="True"   ScrollViewer.VerticalScrollBarVisibility="Auto"  Height="150"
                                                                 AlternatingRowBackground="Gainsboro"  SelectedItem="{Binding VueProfileDroitSelected}">
                                                        <DataGrid.Columns >
                                                            <DataGridTextColumn Header="Libelle Vues" Width="250" Binding="{Binding LibelleVue}"></DataGridTextColumn>
                                                            <DataGridTemplateColumn Header="..">
                                                                <DataGridTemplateColumn.CellTemplate >
                                                                    <DataTemplate >
                                                                        <Button  Width="25" Height="20" Cursor="Hand"   Command="{Binding DataContext.DeleteVueProfileCommand, RelativeSource={RelativeSource AncestorType={x:Type  DataGrid}}}"
                                                                                 CommandParameter="{Binding VueProfileDroitSelected}">
                                                                            <Image Source="{StaticResource new_delete}" >
                                                                                <Image.Style >
                                                                                    <Style TargetType="Image">
                                                                                        <Style.Triggers >
                                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                                <Setter Property="Opacity" Value="0.5"/>
                                                                                            </Trigger>
                                                                                        </Style.Triggers>
                                                                                    </Style>
                                                                                </Image.Style>
                                                                            </Image>
                                                                        </Button>
                                                                    </DataTemplate>
                                                                </DataGridTemplateColumn.CellTemplate>
                                                            </DataGridTemplateColumn>
                                                            <DataGridTemplateColumn Header="..">
                                                                <DataGridTemplateColumn.CellTemplate >
                                                                    <DataTemplate >
                                                                        <Button  Width="25" Height="20" Cursor="Hand" ToolTip="Annuler"   Command="{Binding DataContext.CancelVueProfileCommand, RelativeSource={RelativeSource AncestorType={x:Type  DataGrid}}}"
                                                                                 CommandParameter="{Binding VueProfileDroitSelected}">
                                                                            <Image Source="{StaticResource cancel}" >
                                                                                <Image.Style >
                                                                                    <Style TargetType="Image">
                                                                                        <Style.Triggers >
                                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                                <Setter Property="Opacity" Value="0.5"/>
                                                                                            </Trigger>
                                                                                        </Style.Triggers>
                                                                                    </Style>
                                                                                </Image.Style>
                                                                            </Image>
                                                                        </Button>
                                                                    </DataTemplate>
                                                                </DataGridTemplateColumn.CellTemplate>
                                                            </DataGridTemplateColumn>
                                                        </DataGrid.Columns>

                                                    </DataGrid>

                                                    <DataGrid  Grid.Row="1"  Background="#D8D8EB"  Height="130" Margin="0,10"
                                                                   ItemsSource="{Binding ListeProfileSousVues}" AutoGenerateColumns="False" 
                                                                   SelectedItem="{Binding SouVueProfileDroitSelected}">
                                                        <DataGrid.Columns >
                                                            <DataGridCheckBoxColumn Header="" Binding="{Binding IsCheckvue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="False" />
                                                            <DataGridTemplateColumn Header="Libelle sous vue" Width="200">
                                                                <DataGridTemplateColumn.CellTemplate >
                                                                    <DataTemplate >
                                                                        <Label Content="{Binding LibelleSouVue}" Background="{Binding BackGround}" Foreground="Green" />
                                                                    </DataTemplate>
                                                                </DataGridTemplateColumn.CellTemplate>
                                                            </DataGridTemplateColumn>
                                                            <DataGridTemplateColumn Header="..">
                                                                <DataGridTemplateColumn.CellTemplate >
                                                                    <DataTemplate >
                                                                        <Button  Width="25" Height="20" Cursor="Hand"   Command="{Binding DataContext.DeleteVueProfileCommand, RelativeSource={RelativeSource AncestorType={x:Type  DataGrid}}}"
                                                                                 CommandParameter="{Binding VueProfileDroitSelected}">
                                                                            <Image Source="{StaticResource new_delete}" >
                                                                                <Image.Style >
                                                                                    <Style TargetType="Image">
                                                                                        <Style.Triggers >
                                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                                <Setter Property="Opacity" Value="0.5"/>
                                                                                            </Trigger>
                                                                                        </Style.Triggers>
                                                                                    </Style>
                                                                                </Image.Style>
                                                                            </Image>
                                                                        </Button>
                                                                    </DataTemplate>
                                                                </DataGridTemplateColumn.CellTemplate>
                                                            </DataGridTemplateColumn>
                                                            <DataGridTemplateColumn Header="..">
                                                                <DataGridTemplateColumn.CellTemplate >
                                                                    <DataTemplate >
                                                                        <Button  Width="25" Height="20" Cursor="Hand" ToolTip="Annuler"   
                                                                                 Command="{Binding DataContext.CancelVueProfileCommand, RelativeSource={RelativeSource AncestorType={x:Type  DataGrid}}}"
                                                                                 CommandParameter="{Binding VueProfileDroitSelected}">
                                                                            <Image Source="{StaticResource cancel}" >
                                                                                <Image.Style >
                                                                                    <Style TargetType="Image">
                                                                                        <Style.Triggers >
                                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                                <Setter Property="Opacity" Value="0.5"/>
                                                                                            </Trigger>
                                                                                        </Style.Triggers>
                                                                                    </Style>
                                                                                </Image.Style>
                                                                            </Image>
                                                                        </Button>
                                                                    </DataTemplate>
                                                                </DataGridTemplateColumn.CellTemplate>
                                                            </DataGridTemplateColumn>
                                                        </DataGrid.Columns>

                                                    </DataGrid>
                                                </Grid>
                                            </GroupBox>

                                        </DockPanel>
                                        <DockPanel Grid.Row="4" Grid.ColumnSpan="2">


                                        </DockPanel>

                                    </Grid>
                                </Border>
                                <Border   Grid.Row="1" Grid.RowSpan="2" Grid.Column="1"></Border>
                                <GroupBox  Header="Liste des droits d'une vue" Grid.Row="1" Grid.Column="2" Margin="10,0,0,0" HorizontalAlignment="Left" Width="502">
                                    <DockPanel >

                                        <Button Background="Transparent" DockPanel.Dock="Top"    ToolTip="sauvegarder le droit appliquer à cette vue" Command="{Binding UpdateDroitProfileCommand}"  HorizontalAlignment="Left" 
                                               
                                               Width="30" Height="30" TabIndex="6">
                                            <Button.Style>
                                                <Style TargetType="{x:Type Button}">
                                                    <Setter Property="Cursor" Value="Arrow"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Path=IsBusy}" Value="True">
                                                            <Setter Property="Cursor" Value="Wait"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                            <Image Source="{StaticResource save}" >
                                                <Image.Style >
                                                    <Style TargetType="Image">
                                                        <Style.Triggers >
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Opacity" Value="0.5"/>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                        </Button>
                                        <ListBox DockPanel.Dock="Bottom"  Width="450" ItemsSource="{Binding DroitprofileItem}"
                                                  SelectedItem="{Binding DroitProfileItemSelect}" ItemTemplate="{StaticResource listBoxTemplateUseDetail}">

                                        </ListBox>
                                    </DockPanel>

                                </GroupBox>

                            </Grid>
                        </Border>

                    </Grid>
                </TabItem>
            
            </TabControl>
        </GroupBox>
    </Grid>
</Window>
