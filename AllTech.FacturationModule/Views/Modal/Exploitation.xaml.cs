using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Shapes;
using AllTech.FrameWork.Utils;
using AllTech.FrameWork.Model;

namespace AllTech.FacturationModule.Views.Modal
{
    /// <summary>
    /// Interaction logic for Exploitation.xaml
    /// </summary>
    public partial class Exploitation : Window
    {
        ExploitataionViewModel localViewModel;
        public ClientModel currentClient;

        public Exploitation(ClientModel client)
        {
            InitializeComponent();
            ExploitataionViewModel viewModel = new ExploitataionViewModel(this, client);
            localViewModel = viewModel;
            this.DataContext = viewModel;
        }

        private void Button_Click(object sender, RoutedEventArgs e)
        {
            if (UserInterfaceUtilities.ValidateVisualTree(this) == true)
            {
                this.DialogResult = true;
            }
        }

        private void lstExploit_MouseDoubleClick(object sender, System.Windows.Input.MouseButtonEventArgs e)
        {
            

            this.localViewModel.ExploitSelected = DetailView.SelectedItem  as ExploitationFactureModel;
        }

        private void Window_Loaded(object sender, RoutedEventArgs e)
        {
           // localViewModel.CurrentClient = currentClient;
        }

        private void cmCmptTiers_SelectionChanged(object sender, EventArgs e)
        {
            CompteAnalytiqueModel compte = cmCmptTiers.SelectedItem as CompteAnalytiqueModel;
            if (compte !=null )
                localViewModel.CompteSelected = compte;
            int i = 0;
            if (localViewModel.CompteAnalytiquesList != null)
            {
                if (localViewModel.ExploitSelected !=null && localViewModel.ExploitSelected.IdCompteTiers != null)
                {
                    foreach (CompteAnalytiqueModel cpt in localViewModel.CompteAnalytiquesList)
                    {
                        if (cpt.IdCompteAnalytique == localViewModel.ExploitSelected.IdCompteTiers)
                        {
                            cmCmptTiers.SelectedIndex = i;
                            break;
                        }
                        i++;
                    }
                }
            }
        }

      
    }
}
