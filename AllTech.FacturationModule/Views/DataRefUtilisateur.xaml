<UserControl x:Class="AllTech.FacturationModule.Views.DataRefUtilisateur"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
              xmlns:boxValidation="clr-namespace:AllTech.FrameWork.UIControl;assembly=AllTech.FrameWork"
               xmlns:Commands="clr-namespace:Microsoft.Practices.Prism.Commands;assembly=Microsoft.Practices.Prism"
              xmlns:localVisible="clr-namespace:AllTech.FrameWork.Converter;assembly=AllTech.FrameWork"
               xmlns:imgConverter="clr-namespace:AllTech.FrameWork.Converter;assembly=AllTech.FrameWork"
              xmlns:ig="http://schemas.infragistics.com/xaml"
               xmlns:expand="clr-namespace:WpfMyexpander;assembly=WpfMyexpander"
                xmlns:localView="clr-namespace:AllTech.FacturationModule.Views.Modal"
               xmlns:igOB="http://infragistics.com/OutlookBar"
              xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives"
              xmlns:controls="clr-namespace:Infragistics.Samples.Shared.Controls;assembly=Infragistics.Samples.Shared"
              xmlns:igFramework="clr-namespace:Infragistics.Samples.Framework;assembly=Infragistics.Samples.Framework"
             mc:Ignorable="d" 
               Width="auto"    Background="Transparent" SizeChanged="UserControl_SizeChanged">
    <UserControl.Resources >
        <localVisible:BoolVisibilityConverter x:Key="visibled"/>
        <localVisible:MenuBoolVisibilityConverter x:Key="Newvisible"/>
        <imgConverter:BinaryImageConverter x:Key="convertimg"/>
        <DataTemplate x:Key="listBoxTemplate">
            <TextBlock Text="{Binding LibelleVue}"/>
        </DataTemplate>
        <DataTemplate x:Key="listBoxTemplateUseDetail">
            <Grid >
                <Grid.RowDefinitions >
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="50"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions >
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="30"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Row="0" Grid.Column="0" Text="Lecture" Foreground="Green" FontSize="11" ToolTip="droit de consultation données" Margin="0,0"/>
                <CheckBox  IsEnabled="{Binding IsEnableAllVue}"  IsChecked="{Binding Lecture, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Grid.Row="0" Grid.Column="1" Margin="3,0"/>
                <TextBlock Grid.Row="0" Grid.Column="2" Text="Ecriture" ToolTip="droit de création ou de modification des données"  Margin="10,2"/>
                <CheckBox  Grid.Row="0" Grid.Column="3"  IsEnabled="{Binding IsEnableAllVue}" IsChecked="{Binding Ecriture, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  Margin="3,0"/>
                <TextBlock Grid.Row="0" Grid.Column="4" Text="Suppression" ToolTip="droit de suppression des données" Margin="10,2"/>
                <CheckBox  Grid.Row="0" Grid.Column="5" IsEnabled="{Binding IsEnableAllVue}"  IsChecked="{Binding Suppression, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  Margin="3,2"/>

                <TextBlock Grid.Row="1" Grid.Column="0" Text="Super" ToolTip="droits supérieurs" Margin="0,5"/>
                <CheckBox  Grid.Row="1" Grid.Column="1"   IsEnabled="{Binding IsEnableSuperVue}"  IsChecked="{Binding Super, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  Margin="3,5"/>
                <TextBlock Grid.Row="1" Grid.Column="2" Text="Impression" ToolTip="droit d'impressionUsergrid  données" Margin="0,5"/>
                <CheckBox  Grid.Row="1" Grid.Column="3" IsEnabled="{Binding IsEnableAllVue}" IsChecked="{Binding Impression, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  Margin="3,5"/>
                <TextBlock Grid.Row="1" Grid.Column="4" Text="Validation" ToolTip="droit de modifications des statuts des factures " Margin="0,5"/>
                <CheckBox  Grid.Row="1" Grid.Column="5" IsEnabled="{Binding IsEnableAllVue}" IsChecked="{Binding Validation, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  Margin="3,5"/>

                <TextBlock Grid.Row="2" Grid.Column="0" Text="site global" ToolTip="droits sur d'uatres sites" Margin="0,5"/>
                <CheckBox  Grid.Row="2" Grid.Column="1" IsEnabled="{Binding IsEnableUserGlobalSiteVue}" IsChecked="{Binding Testeur, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  Margin="3,5"/>
                <TextBlock Grid.Row="2" Grid.Column="2" Text="Proprietaire"  ToolTip=" super droits au responsable de l'application" Margin="0,5"/>
                <CheckBox  Grid.Row="2" Grid.Column="3" IsEnabled="{Binding IsEnableVue}"  IsChecked="{Binding Proprietaire, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  Margin="3,5"/>
                <TextBlock Grid.Row="2" Grid.Column="4" Text="Edition" ToolTip="droit  modification des données"  Margin="0,5"/>
                <CheckBox  Grid.Row="2" Grid.Column="5" IsEnabled="{Binding IsEnableAllVue}" IsChecked="{Binding Edition, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  Margin="3,5"/>

                <TextBlock Grid.Row="3" Grid.Column="0" Text="Execution" ToolTip="droit exécution des import/export" Margin="0,2"/>
                <CheckBox  Grid.Row="3" Grid.Column="1" IsEnabled="{Binding IsEnableExecuteVue}" IsChecked="{Binding Execution, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  Margin="3,2"/>
                <TextBlock Grid.Row="3" Grid.Column="2" Text="Developpeur" ToolTip="droit developpeur" Margin="0,2"/>
                <CheckBox  Grid.Row="3" Grid.Column="3" IsEnabled="{Binding IsEnableSuperVue}" IsChecked="{Binding Developpeur, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  Margin="3,2"/>

                <TextBlock Grid.Row="3" Grid.Column="4" Text="Mark up" ToolTip="droit mar up" Margin="0,2"/>
                <CheckBox  Grid.Row="3" Grid.Column="5" IsEnabled="{Binding IsEnableExecuteVue}" IsChecked="{Binding Marge, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  Margin="3,2"/>

                <TextBlock Grid.Row="4" Grid.Column="0" Text="Import Db" ToolTip="droits Import/restore" Margin="0,5"/>
                <CheckBox  Grid.Row="4" Grid.Column="1"   IsEnabled="{Binding IsEnableExecuteVue}"  IsChecked="{Binding ImportDb, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  Margin="3,5"/>
                <TextBlock Grid.Row="4" Grid.Column="2" Text="Export Db" ToolTip="droits Import/restore" Margin="0,5"/>
                <CheckBox  Grid.Row="4" Grid.Column="3"   IsEnabled="{Binding IsEnableExecuteVue}"  IsChecked="{Binding ExportDB, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  Margin="3,5"/>

                <TextBlock Grid.Row="5" Grid.Column="0" Text="View archive " ToolTip="droits view archive" Margin="0,5"/>
                <CheckBox  Grid.Row="5" Grid.Column="1"   IsEnabled="{Binding IsEnableExecuteVue}"  IsChecked="{Binding ArchiveView, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  Margin="3,5"/>
                <TextBlock Grid.Row="5" Grid.Column="2" Text="Execute archive " ToolTip="droits execute archive" Margin="0,5"/>
                <CheckBox  Grid.Row="5" Grid.Column="3"   IsEnabled="{Binding IsEnableExecuteVue}"  IsChecked="{Binding ArchiveExecute, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  Margin="3,5"/>

            </Grid>
        </DataTemplate>
    </UserControl.Resources>
    <Grid x:Name="LayoutRoot" Width="auto" Height="auto">

        <GroupBox Header="Liste Des Utilisateurs"  FontSize="12"   Margin="0,0,0,0" Style="{DynamicResource GroupBoxStyle1}">
            <TabControl Height="auto">
                <TabItem Header="Utilisateurs">
                    <DockPanel Height="auto">
                        <Border DockPanel.Dock="Top">
                            <ToolBarTray >
                                <ToolBar x:Name="toolbarMain" Width="auto" >
                                    <Button Background="Transparent" 
                                    Commands:Click.Command="{Binding NewUserCommand}" Width="30" Height="30" ToolTip="Nouveau">
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Cursor" Value="Arrow"/>

                                            </Style>
                                        </Button.Style>
                                        <Image Source="{StaticResource new}" />
                                    </Button>
                                    <Separator/>
                                   
                                    <Button Background="Transparent"  ToolTip="Supprimer " Width="30" Height="30"  
                                   
                                    Commands:Click.Command="{Binding DeleteUserActiveCommand}"  TabIndex="7">
                                        <Button.Style >
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Cursor" Value="Arrow"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=IsBusy}" Value="True">
                                                        <Setter Property="Cursor" Value="Wait"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>

                                        <Image Source="{StaticResource delete}">
                                            <Image.Style >
                                                <Style TargetType="Image">
                                                    <Style.Triggers >
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Opacity" Value="0.5"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Image.Style>
                                        </Image>


                                    </Button>
                                   
                                  
                                   


                                </ToolBar>
                            </ToolBarTray>
                        </Border>

                        <Border DockPanel.Dock="Bottom" >
                            <Grid Height="auto">
                                <Grid.RowDefinitions >
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <!--<controls:OptionsPanel Grid.Row="0" HeaderText="Detail information utilisateur" IsMovable="False" Margin="0,0,0,9">
                                    <Grid >
                                        <Grid.RowDefinitions >
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions >
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="auto"/>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />

                                        </Grid.ColumnDefinitions>

                                        <Border Grid.Row="0" Grid.Column="0" Grid.RowSpan="4" HorizontalAlignment="Left" MinWidth="80" MinHeight="80" MaxWidth="149" Width="auto" Margin="8,9,0,0" 
                                                Height="110" Background="#FF5B5B65"  VerticalAlignment="Top"  >
                                            <Border.BitmapEffect>
                                                <DropShadowBitmapEffect Color="#FFA9A9A9" Direction="316" ShadowDepth="7" Softness="0.075"/>
                                            </Border.BitmapEffect>
                                            <Image Width="Auto" Height="Auto" 
                                           Source="{Binding UserSelected.Photo, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                                           Stretch="Fill" StretchDirection="DownOnly" HorizontalAlignment="Stretch" VerticalAlignment="Top"/>
                                        </Border>
                                        <TextBlock Foreground="Green"  Grid.Row="0" Grid.Column="1" FontWeight="Bold"  Text="Nom: " TextWrapping="Wrap" Margin="10,5,0,0" FontSize="13"   HorizontalAlignment="Left" VerticalAlignment="Top" Width="52"/>
                                        <TextBox  Grid.Row="0" Grid.Column="2" IsEnabled="{Binding IsfieldEnabled}" MaxWidth="220" Width="auto" MinWidth="180" BorderBrush="Black" 
                                                  TabIndex="0" Text="{Binding UserSelected.Nom, UpdateSourceTrigger=PropertyChanged}" Margin="0,3,0,0" Height="20"  />

                                        <TextBlock Text="Prenom: " Grid.Row="1" Grid.Column="1"  FontWeight="Bold"  Foreground="Green"   TextWrapping="Wrap" Margin="10,5,0,0" FontSize="13"  HorizontalAlignment="Left" VerticalAlignment="Top" Width="57.867"/>
                                        <TextBox Grid.Row="1" Grid.Column="2"  IsEnabled="{Binding IsfieldEnabled}" BorderBrush="Black"  MaxWidth="220" Width="auto" MinWidth="180" Height="20" TabIndex="1" Text="{Binding UserSelected.Prenom, UpdateSourceTrigger=PropertyChanged}" Margin="0,3,0,0"/>

                                        <TextBlock Grid.Row="2" Grid.Column="1" Foreground="Green" FontWeight="Bold"   Text="Function: " TextWrapping="Wrap" Margin="10,5,0,0" FontSize="13"  HorizontalAlignment="Left" VerticalAlignment="Top" Width="64"/>
                                        <TextBox Grid.Row="2" Grid.Column="2" VerticalAlignment="Top" IsEnabled="{Binding IsfieldEnabled}" BorderBrush="Black"  MaxWidth="220" Width="auto" MinWidth="180" Height="20" TabIndex="2" Text="{Binding UserSelected.Fonction, UpdateSourceTrigger=PropertyChanged}"  Margin="0,3,0,0"/>

                                        <TextBlock Grid.Row="3" Margin="0,0"   Grid.Column="1" Foreground="Green" FontWeight="Bold"     Text="Profile: " TextWrapping="Wrap"  FontSize="13"  HorizontalAlignment="Left" VerticalAlignment="Top" Width="52.867"/>
                                        <ig:XamComboEditor Grid.Row="3" Grid.Column="2" IsEnabled="{Binding IsfieldEnabled}"  TabIndex="5" ItemsSource="{Binding ProfileList}"  MaxWidth="188" Width="auto" MinWidth="80" BorderBrush="Black"
                                                   DisplayMemberPath="Libelle" IsEditable="True" Height="20" x:Name="cmbprofile"
                                                   SelectedItem="{Binding ProfileSelected}"  SelectedIndex="{Binding IndexeProfile}"
                                                    Margin="0,0,0,0" SelectionChanged="cmbprofile_SelectionChanged">

                                        </ig:XamComboEditor>

                                        <CheckBox Grid.Row="1" Grid.Column="6" IsChecked="{Binding CheckingTemporaire}"  IsEnabled="{Binding CheckTemporaireEnabled}"    FontSize="13" 
                                                  Content="Compte Temporaire" Margin="10,0,0,0" Foreground="Green" FontWeight="Bold"  />

                                        <TextBlock Grid.Row="0" Grid.Column="3" Visibility="{Binding BtnInitVisible,Converter={StaticResource visibled}}"
                                            Text="Loggin: " Foreground="Green" FontWeight="Bold"    TextWrapping="Wrap" Margin="10,5,0,0" FontSize="13" 
                                           HorizontalAlignment="Left" VerticalAlignment="Top" Width="50"/>
                                        <TextBox Grid.Row="0" Grid.Column="5"    Background="White" MaxWidth="200" MinWidth="180"   Width="auto" Height="auto" MaxHeight="20"  IsEnabled="{Binding IsfieldEnabled}" Margin="0,0"
                                                   Text="{Binding UserSelected.Loggin, UpdateSourceTrigger=PropertyChanged}"  HorizontalAlignment="Left"  Grid.ColumnSpan="2"
                                                     />

                                        <Button Command="{Binding InitPassCommand}"   Height="20"
                                                CommandParameter="{Binding IsChecked,  ElementName=choice ,Path=value}" 
                                         Width="auto" MinWidth="120" MaxWidth="120" Content="Initialiser motpasse" Margin="0,0,0,0" Grid.Row="1" Grid.Column="5" HorizontalAlignment="Left" />
                                        <Button Content="Vérouiller Compte"  HorizontalAlignment="Left" MaxWidth="120" Width="auto" MinWidth="100"  Margin="0,0,0,0" Command="{Binding LockPassCommand}"
                                          Height="20" Grid.Row="2" Grid.Column="5" />

                                        <TextBlock Text="Photo: " Foreground="Green" FontWeight="Bold"   TextWrapping="Wrap" Margin="10,0,0,0" FontSize="12" 
                                           HorizontalAlignment="Left" VerticalAlignment="Top" Width="52.867" Grid.Row="3" Grid.Column="3"/>
                                        <Button Content="..." Width="40" Height="20" Margin="0,0,0,0" HorizontalAlignment="Left"  Click="btnadPhoto_Click" x:Name="btnadPhoto" Grid.Row="3" Grid.Column="5" />

                                        <Border Background="#17808080"  Visibility="{Binding BordeprofileVisible, Converter={StaticResource visibled}}" 
                                                Margin="10,0,0,0"  MaxWidth="220" Width="auto" MinWidth="100" Height="52" Grid.Row="2" Grid.Column="6"  Grid.RowSpan="2" >
                                            <Grid >
                                                <Grid.RowDefinitions >
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions >
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Foreground="Black"  Text="Date début" Grid.Row="0" Grid.Column="0"/>
                                                <TextBlock Foreground="Black"  Text="Date Fin" Grid.Row="0" Grid.Column="1"/>
                                                <DatePicker SelectedDate="{Binding StartDate, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Grid.Row="1" Margin="6,2,0,9" Width="80" />
                                                <DatePicker SelectedDate="{Binding EndDate, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  Grid.Column="1" Margin="3,1,0,10" Width="80" Grid.Row="1" />
                                            </Grid>
                                        </Border>
                                    </Grid>
                                </controls:OptionsPanel >-->
                                <DockPanel Grid.Row="2"  >
                                    <igOB:XamOutlookBar  x:Name="optionrechechName"  Theme="IGTheme"  VerticalSplitterLocation="Left"
                                HorizontalAlignment="Left" VerticalAlignment="Stretch" IsMinimized="False"
                                  Width="auto"   MinimizedWidth="35">
                                        <igOB:XamOutlookBar.Groups>
                                            <igOB:OutlookBarGroup Header="Recherches">
                                                <StackPanel Orientation="Horizontal" VerticalAlignment="Top">
                                                    <Button  ToolTip="Rechercher " Command="{Binding SearchByNameCommand}"
                                                     Grid.Row="0"
                                                  Width="25" Height="25" TabIndex="13">
                                                        <Button.Style>
                                                            <Style TargetType="{x:Type Button}">
                                                                <Setter Property="Cursor" Value="Arrow"/>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Path=IsBusy}" Value="True">
                                                                        <Setter Property="Cursor" Value="Wait"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Button.Style>
                                                        <Image Source="{StaticResource loupe_petite}">
                                                            <Image.Style >
                                                                <Style TargetType="Image">
                                                                    <Style.Triggers >
                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                            <Setter Property="Opacity" Value="0.5"/>
                                                                        </Trigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </Image.Style>
                                                        </Image>
                                                    </Button>
                                                    <TextBox x:Name="txtNomRecherche" Width="auto" FontSize="13" MinWidth="80" MaxWidth="200" Height="25"  BorderBrush="Blue" BorderThickness="1" 
                                            
                                         Text="{Binding Filtertexte, UpdateSourceTrigger=PropertyChanged}" />

                                                    <Button x:Name="btnCancelnom"  Width="20" Height="25" Background="Transparent"
                                                 Visibility="{Binding IsvisibleBtnCancel,Converter={StaticResource visibled}}"
                                                        Click="btnCancelnom_Click">

                                                        <Button.Style>
                                                            <Style TargetType="{x:Type Button}"/>
                                                        </Button.Style>
                                                        <Image Source="{StaticResource newCancel}" Stretch="Fill" Width="15" Height="15">
                                                            <Image.Style >
                                                                <Style TargetType="Image">
                                                                    <Style.Triggers >
                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                            <Setter Property="Opacity" Value="0.5"/>
                                                                        </Trigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </Image.Style>
                                                        </Image>
                                                    </Button>
                                                </StackPanel>
                                            </igOB:OutlookBarGroup>
                                        </igOB:XamOutlookBar.Groups>
                                    </igOB:XamOutlookBar>
                                 
                                    
                                    <Border BorderThickness="1"  DockPanel.Dock="Right"  Margin="0,0,0,0">
                                        <Grid >
                                            <Grid.RowDefinitions >
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto" />
                                            </Grid.RowDefinitions>
                                            <StackPanel Grid.Row=" 0" Orientation="Horizontal"    >
                                                <Button Content="Utilisateurs actifs" Margin="20,0,3,0" Width="100" Height="20" Grid.RowSpan="2" HorizontalAlignment="Left" 
                                              Command="{Binding RefreshValideCommand}"    Visibility="{Binding BtnInitVisible,Converter={StaticResource visibled}}"/>
                                                <Button Content="Utilisateurs Désactivés" Margin="0,0,0,0" Height="20" Width="120" Grid.RowSpan="2" HorizontalAlignment="Center" 
                                         Command="{Binding RefreshLockCommand}"   Visibility="{Binding BtnInitVisible,Converter={StaticResource visibled}}"/>
                                                <ProgressBar Margin="20,0,0,0" Width=" 116"  Style="{StaticResource CustomProgressBarStyle}" 
                                         Height="15" IsIndeterminate="{Binding IsBusy}" 
                                             Visibility="{Binding Path=ProgressBarVisibility, Converter={StaticResource visibled}}" Grid.RowSpan="2" />

                                            </StackPanel>
                                            <ig:XamGrid x:Name="userGrid" Grid.Row="1"   ItemsSource="{Binding Path=Users}"  RowHeight="25"
                                           MouseDoubleClick="userGrid_MouseDoubleClick"  Height="auto" MinHeight="150" Margin="5,5,0,0"
                                                     RowHover="Row" HeaderRowHeight="25" HeaderTextHorizontalAlignment="Center" 
                                                        Width="auto" MinWidth="500" AutoGenerateColumns="False"  HorizontalAlignment="Left"
                                                            ActiveItem="{Binding UserActiv, Mode=TwoWay}">
                                                <ig:XamGrid.ColumnResizingSettings >
                                                    <ig:ColumnResizingSettings AllowColumnResizing="Immediate" >
                                                    </ig:ColumnResizingSettings>
                                                </ig:XamGrid.ColumnResizingSettings>
                                                <ig:XamGrid.RowSelectorSettings>
                                                    <ig:RowSelectorSettings x:Name="rowSelectorSettings"  />
                                                </ig:XamGrid.RowSelectorSettings>
                                                <ig:XamGrid.Columns >
                                                    <ig:TextColumn Key="Nom" Width="200"  >
                                                        <ig:TextColumn.HeaderTemplate >
                                                            <DataTemplate >
                                                                <TextBlock Text="Nom" />
                                                            </DataTemplate>
                                                        </ig:TextColumn.HeaderTemplate>
                                                    </ig:TextColumn>

                                                    <ig:TextColumn Key="Prenom" Width="auto" >
                                                        <ig:TextColumn.HeaderTemplate >
                                                            <DataTemplate >
                                                                <TextBlock Text="Prénom" />
                                                            </DataTemplate>
                                                        </ig:TextColumn.HeaderTemplate>
                                                    </ig:TextColumn>

                                                    <ig:TextColumn Key="Loggin" Width="auto" >
                                                        <ig:TextColumn.HeaderTemplate >
                                                            <DataTemplate >
                                                                <TextBlock Text="Loggin" />
                                                            </DataTemplate>
                                                        </ig:TextColumn.HeaderTemplate>
                                                    </ig:TextColumn>
                                                    <ig:TextColumn Key="Profile.Libelle" Width="auto" >
                                                        <ig:TextColumn.HeaderTemplate >
                                                            <DataTemplate >
                                                                <TextBlock Text="Profile" />
                                                            </DataTemplate>
                                                        </ig:TextColumn.HeaderTemplate>
                                                    </ig:TextColumn>
                                                </ig:XamGrid.Columns>
                                                <ig:XamGrid.SelectionSettings>
                                                    <ig:SelectionSettings CellClickAction="SelectRow"  CellSelection="Multiple"  RowSelection="Single" ></ig:SelectionSettings>
                                                </ig:XamGrid.SelectionSettings>
                                                <ig:XamGrid.SortingSettings>
                                                    <ig:SortingSettings AllowSorting="True"></ig:SortingSettings>
                                                </ig:XamGrid.SortingSettings>
                                                <ig:XamGrid.PagerSettings >
                                                    <ig:PagerSettings AllowPaging="Bottom" PageSize="30"   />
                                                </ig:XamGrid.PagerSettings>
                                            </ig:XamGrid>


                                         
                                            
                                            
                                        </Grid>
                                    </Border>
                                </DockPanel>

                               
                            </Grid>
                        </Border>
                    </DockPanel>
                </TabItem>

                <TabItem Header="Profiles" Visibility="{Binding Path=IsProfileVisible, Converter={StaticResource Newvisible}}" >
                    <localView:UserProfile/>
                   
                </TabItem>

                <TabItem Header="Vues Utilisateurs" Visibility="{Binding Path=IsUserProfileVisible, Converter={StaticResource Newvisible}}"  >
                    <localView:UsersProfileViews/>
                    <!--<Grid>
                    <TabControl>
                        <TabItem Header="Liste vues">
                            <Grid>
                                <Grid.RowDefinitions >
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                        <controls:OptionsPanel Grid.Row="0" Grid.Column="0" HeaderText="Utilisateurs" Width="auto">
                                            <Grid>
                                                <Grid.RowDefinitions >
                                                    <RowDefinition Height="auto"/>
                                                    <RowDefinition Height="auto"/>
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions >
                                                    <ColumnDefinition Width="auto"/>
                                                    <ColumnDefinition Width="auto"/>
                                                </Grid.ColumnDefinitions>

                                                <TextBlock Text="Liste des utilisateurs" Grid.Row="0" FontWeight="Bold"  Grid.Column="0" Foreground="Black"  />
                                                <ComboBox  Grid.Row="0" Grid.Column="1"  Margin="10,0"
                                                   DisplayMemberPath="Nom"
                                                    SelectedItem="{Binding UserdroitSelected}"
                                                   ItemsSource="{Binding Users}" Width="150"/>
                                                    <GroupBox Header="Droits et vues profil utilisateur" Grid.Row="1" Grid.ColumnSpan="2">
                                                        <Grid >
                                                            <Grid.RowDefinitions >
                                                                <RowDefinition Height=" auto"/>
                                                                <RowDefinition Height=" auto"/>
                                                                <RowDefinition Height=" auto"/>
                                                            </Grid.RowDefinitions>
                                                            <Grid.ColumnDefinitions >
                                                                <ColumnDefinition Width="97"/>
                                                                <ColumnDefinition Width="auto"/>
                                                            </Grid.ColumnDefinitions>
                                                            <TextBlock Text="Liste des vues" FontWeight="Bold" Foreground="Black" Height="28" VerticalAlignment="Top" />
                                                            <ComboBox  Grid.Row="0" Grid.Column="1" Width="180" ItemsSource="{Binding ListVuewNotChild}"
                                                            SelectedItem="{Binding VueSelected}" DisplayMemberPath="Libelle" Margin="3"/>

                                                            <TextBlock Text="Liste des sous vues" FontWeight="Bold"  Grid.Row="1" Grid.Column="0" Foreground="Black"   
                                                           Visibility="{Binding IsSousVueCmbVisible,Converter={StaticResource visibled}}" />
                                                            <ComboBox  Grid.Row="1" Grid.Column="2" Width="180" ItemsSource="{Binding NewlisteSousVues}"
                                                            SelectedItem="{Binding NewSouVueSelected}" DisplayMemberPath="Libelle" Margin="3"
                                                             Visibility="{Binding IsSousVueCmbVisible,Converter={StaticResource visibled}}" />
                                                            <StackPanel Orientation="Horizontal" Grid.Row="2" Margin="5">
                                                                <Button  ToolTip="Ajouter" Width="50" Height="30" Margin="5,0" Background="Transparent" Commands:Click.Command="{Binding AddVueCommand}" >
                                                                    <Button.Style>
                                                                        <Style TargetType="{x:Type Button}">
                                                                            <Setter Property="Cursor" Value="Arrow"/>
                                                                            <Style.Triggers>
                                                                                <DataTrigger Binding="{Binding Path=IsBusy}" Value="True">
                                                                                    <Setter Property="Cursor" Value="Wait"/>
                                                                                </DataTrigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </Button.Style>
                                                                    <Image Source="{StaticResource new_add}" >
                                                                        <Image.Style >
                                                                            <Style TargetType="Image">
                                                                                <Style.Triggers >
                                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                                        <Setter Property="Opacity" Value="0.5"/>
                                                                                    </Trigger>
                                                                                </Style.Triggers>
                                                                            </Style>
                                                                        </Image.Style>
                                                                    </Image>
                                                                </Button>

                                                            </StackPanel>
                                                        </Grid>
                                                    </GroupBox> 
                                            </Grid>
                                </controls:OptionsPanel >

                                    <controls:OptionsPanel Grid.Row="0" Grid.Column="1" IsMovable="False" x:Name="groupuservues" >
                                        <Grid>
                                            <Grid.RowDefinitions >
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                            </Grid.RowDefinitions>
                                            <DataGrid x:Name="profileVuesGrid"  Grid.Row="0" Grid.Column="0"  AutoGenerateColumns="False" ItemsSource="{Binding Path=ListeVuesUsers}"
                                                             IsReadOnly="True"   ScrollViewer.VerticalScrollBarVisibility="Auto"  Margin="3"
                                                                 AlternatingRowBackground="Gainsboro"  Background="LightGray" RowBackground="LightYellow" 
                                                             Height="auto"  MinHeight="50" SelectedItem="{Binding VueUserSelected}" MouseDown="profileVuesGrid_MouseDown">
                                                <DataGrid.Resources >
                                                    <Style x:Key="CenterCellStyle" TargetType="{x:Type DataGridCell}">
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type DataGridCell}">
                                                                    <Grid Background="{TemplateBinding Background}">
                                                                        <ContentPresenter HorizontalAlignment="Center" 
                                                                        VerticalAlignment="Center"/>
                                                                    </Grid>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Style.Triggers>
                                                            <Trigger Property="IsSelected" Value="True">
                                                                <Setter Property="Background" Value="Green"   />
                                                                <Setter Property="BorderBrush" Value="Blue"  />
                                                                <Setter Property="Foreground"  Value="White"   />

                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                    <Style TargetType="{x:Type DataGridColumnHeader}" x:Key="styleEntete">
                                                        <Setter Property="HorizontalAlignment" Value="Center"/>
                                                        <Setter Property="FontSize"   Value="13" />
                                                        <Setter Property="FontWeight"  Value="Bold"  />
                                                        <Setter Property="Foreground"  Value="Green"     />

                                                    </Style>
                                                </DataGrid.Resources>
                                                <DataGrid.Columns >
                                                    <DataGridTextColumn Header="Libelle Vues" Width="200" Binding="{Binding LibelleVue}" CellStyle="{StaticResource CenterCellStyle}"></DataGridTextColumn>
                                                    <DataGridTextColumn Header="Statut" Width="110" Binding="{Binding Statut}" CellStyle="{StaticResource CenterCellStyle}"></DataGridTextColumn>
                                                    <DataGridTemplateColumn Header="..">
                                                        <DataGridTemplateColumn.CellTemplate >
                                                            <DataTemplate >
                                                                <Button  Width="25" Height="20" Cursor="Hand" ToolTip="Supprimer"   Command="{Binding DataContext.DeleteVueCommand, RelativeSource={RelativeSource AncestorType={x:Type  DataGrid}}}"
                                                                                 CommandParameter="{Binding VueUserSelected}">
                                                                    <Image Source="{StaticResource new_delete}" >
                                                                        <Image.Style >
                                                                            <Style TargetType="Image">
                                                                                <Style.Triggers >
                                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                                        <Setter Property="Opacity" Value="0.5"/>
                                                                                    </Trigger>
                                                                                </Style.Triggers>
                                                                            </Style>
                                                                        </Image.Style>
                                                                    </Image>
                                                                </Button>
                                                            </DataTemplate>
                                                        </DataGridTemplateColumn.CellTemplate>
                                                    </DataGridTemplateColumn>

                                                    <DataGridTemplateColumn Header="..">
                                                        <DataGridTemplateColumn.CellTemplate >
                                                            <DataTemplate >
                                                                <Button  Width="25" Height="20" Cursor="Hand" ToolTip="Annuler Operation"   Command="{Binding DataContext.CancelVueCommand, RelativeSource={RelativeSource AncestorType={x:Type  DataGrid}}}"
                                                                                 CommandParameter="{Binding VueUserSelected}">
                                                                    <Image Source="{StaticResource cancel}" >
                                                                        <Image.Style >
                                                                            <Style TargetType="Image">
                                                                                <Style.Triggers >
                                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                                        <Setter Property="Opacity" Value="0.5"/>
                                                                                    </Trigger>
                                                                                </Style.Triggers>
                                                                            </Style>
                                                                        </Image.Style>
                                                                    </Image>
                                                                </Button>
                                                            </DataTemplate>
                                                        </DataGridTemplateColumn.CellTemplate>
                                                    </DataGridTemplateColumn>

                                                </DataGrid.Columns>
                                            </DataGrid>
                                            <DataGrid x:Name="profileSousVuesGrid" Grid.Row="1" Grid.Column="0" Height="auto" MinHeight="70" Margin="3,3" Background="#D8D8EB" 
                                                                   ItemsSource="{Binding ListeSousVues}" AutoGenerateColumns="False"  
                                                                   SelectedItem="{Binding SousvueSelected}">
                                                <DataGrid.Resources >

                                                    <Style x:Key="CenterCellStyle" TargetType="{x:Type DataGridCell}">
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type DataGridCell}">
                                                                    <Grid Background="{TemplateBinding Background}">
                                                                        <ContentPresenter HorizontalAlignment="Center" 
                                                                        VerticalAlignment="Center"/>
                                                                    </Grid>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Style.Triggers>
                                                            <Trigger Property="IsSelected" Value="True">
                                                                <Setter Property="Background" Value="Black"     />
                                                                <Setter Property="BorderBrush" Value="Blue"  />
                                                                <Setter Property="Foreground"  Value="White"   />

                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                    <Style TargetType="{x:Type DataGridColumnHeader}" x:Key="styleEntete">
                                                        <Setter Property="HorizontalAlignment" Value="Center"/>
                                                        <Setter Property="FontSize"   Value="13" />
                                                        <Setter Property="FontWeight"  Value="Bold"  />
                                                        <Setter Property="Foreground"  Value="Green"     />

                                                    </Style>

                                                </DataGrid.Resources>

                                                <DataGrid.Columns >
                                                    <DataGridCheckBoxColumn Header="" Binding="{Binding IsCheckvue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="False" CellStyle="{StaticResource CenterCellStyle}" />
                                                    <DataGridTemplateColumn Header="Libelle sous vue" Width="180">
                                                        <DataGridTemplateColumn.CellTemplate >
                                                            <DataTemplate >
                                                                <Label Content="{Binding LibelleSouVue}" Background="{Binding BackGround}" Foreground="Green" />
                                                            </DataTemplate>
                                                        </DataGridTemplateColumn.CellTemplate>
                                                    </DataGridTemplateColumn>
                                                    <DataGridTextColumn Header="Statut" Width="110" Binding="{Binding Statut}" CellStyle="{StaticResource CenterCellStyle}"></DataGridTextColumn>
                                                    <DataGridTemplateColumn Header="..">
                                                        <DataGridTemplateColumn.CellTemplate >
                                                            <DataTemplate >
                                                                <Button  Width="25" Height="20" Cursor="Hand"   Command="{Binding DataContext.DeleteVueCommand, RelativeSource={RelativeSource AncestorType={x:Type  DataGrid}}}"
                                                                                 CommandParameter="{Binding VueUserSelected}">
                                                                    <Image Source="{StaticResource new_delete}" >
                                                                        <Image.Style >
                                                                            <Style TargetType="Image">
                                                                                <Style.Triggers >
                                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                                        <Setter Property="Opacity" Value="0.5"/>
                                                                                    </Trigger>
                                                                                </Style.Triggers>
                                                                            </Style>
                                                                        </Image.Style>
                                                                    </Image>
                                                                </Button>
                                                            </DataTemplate>
                                                        </DataGridTemplateColumn.CellTemplate>
                                                    </DataGridTemplateColumn>
                                                    <DataGridTemplateColumn Header="..">
                                                        <DataGridTemplateColumn.CellTemplate >
                                                            <DataTemplate >
                                                                <Button  Width="25" Height="20" Cursor="Hand" ToolTip="Annuler Operation"   Command="{Binding DataContext.CancelVueCommand, RelativeSource={RelativeSource AncestorType={x:Type  DataGrid}}}"
                                                                                 CommandParameter="{Binding VueUserSelected}">
                                                                    <Image Source="{StaticResource cancel}" >
                                                                        <Image.Style >
                                                                            <Style TargetType="Image">
                                                                                <Style.Triggers >
                                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                                        <Setter Property="Opacity" Value="0.5"/>
                                                                                    </Trigger>
                                                                                </Style.Triggers>
                                                                            </Style>
                                                                        </Image.Style>
                                                                    </Image>
                                                                </Button>
                                                            </DataTemplate>
                                                        </DataGridTemplateColumn.CellTemplate>
                                                    </DataGridTemplateColumn>
                                                </DataGrid.Columns>

                                            </DataGrid>
                                        </Grid>
                                    </controls:OptionsPanel>

                                       
                            </Grid>
                        </TabItem>

                        <TabItem Header="Validation Droits" x:Name="tabitemUserdroits">
                            <controls:OptionsPanel x:Name="optionProfilUsersDroit" VerticalAlignment="Top" HeaderText="Liste des droits"  IsMovable="False"   Height="auto"  Margin="0,0,0,0" Grid.RowSpan="2">
                                <DockPanel >
                                    <Border DockPanel.Dock="Top" >
                                        <Button Background="Transparent"   ToolTip="Sauvegarder" Commands:Click.Command="{Binding UpdateVueCommand}"  HorizontalAlignment="Left" 
                                                
                                               Width="30" Height="30" TabIndex="6">
                                            <Button.Style>
                                                <Style TargetType="{x:Type Button}">
                                                    <Setter Property="Cursor" Value="Arrow"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Path=IsBusy}" Value="True">
                                                            <Setter Property="Cursor" Value="Wait"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                            <Image Source="{StaticResource save}" >
                                                <Image.Style >
                                                    <Style TargetType="Image">
                                                        <Style.Triggers >
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Opacity" Value="0.5"/>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                        </Button>
                                    </Border>
                                    <ListBox x:Name="lstbOxProfiledroits"  DockPanel.Dock="Bottom"  Width="auto"   ItemsSource="{Binding DroitUserItem}" SelectedItem="{Binding DroitUserSelected}"
                                              ItemTemplate="{StaticResource listBoxTemplateUseDetail}" Height="auto" MinHeight="100">

                                    </ListBox>
                                </DockPanel>
                            </controls:OptionsPanel>
                        </TabItem>
               
                  </TabControl>
                    </Grid>-->
                </TabItem>
            </TabControl>
        </GroupBox>


    </Grid>
</UserControl>
