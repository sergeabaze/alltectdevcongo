<UserControl x:Class="AllTech.FacturationModule.Views.Parameters"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
              xmlns:Commands="clr-namespace:Microsoft.Practices.Prism.Commands;assembly=Microsoft.Practices.Prism"
              xmlns:localVisible="clr-namespace:AllTech.FrameWork.Converter;assembly=AllTech.FrameWork"
               xmlns:expand="clr-namespace:WpfMyexpander;assembly=WpfMyexpander"
                xmlns:controls="clr-namespace:Infragistics.Samples.Shared.Controls;assembly=Infragistics.Samples.Shared"
             xmlns:ig="http://schemas.infragistics.com/xaml"
           
             mc:Ignorable="d" 
            Height="auto" MinHeight="600" d:DesignWidth="1000" Background="Transparent"  >
    <UserControl.Resources >
        <localVisible:BoolVisibilityConverter x:Key="visibled"/>
    </UserControl.Resources>
    <Grid x:Name="LayoutRoot"  Width="auto" Height="auto" Background="Transparent" >
        <GroupBox Header="Parametres"  FontSize="12"   Margin="0,7,13.97,10.207" Style="{DynamicResource GroupBoxStyle1}"  >
            <DockPanel >
                    <ToolBarTray DockPanel.Dock="Top">
                        <ToolBar x:Name="toolbMain" Width="auto" >
                            <Button  ToolTip="Delete Product" Width="30" Height="30" 
                                    Commands:Click.Command="{Binding DeleteCommand}" >
                                <Button.Style >
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="Cursor" Value="Arrow"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsBusy}" Value="True">
                                                <Setter Property="Cursor" Value="Wait"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                                    <Image Source="{StaticResource delete}" />
                            </Button>
                          
                            <Separator />
                            <Button Background="Transparent"  ToolTip="fermer Formulaire"  Width="40" Height="30" Commands:Click.Command="{Binding CloseCommand}" Click="Button_Click">
                                    <Image Source="{StaticResource cancel}" />
                            </Button>
                        </ToolBar>
                    </ToolBarTray>
                <TabControl DockPanel.Dock="Bottom">
                    <TabItem Header="Prametrage Base de données" x:Name="tabItemBd" >
                        <Grid>
                            <Grid.RowDefinitions >
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                              
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Nom serveur : " Margin="10,10,10,32" Grid.RowSpan="2"   Foreground="Green" FontWeight="Bold"/>
                            <TextBlock Text="Port:" Grid.Column="2" Margin="10,10,0,4" Height="18"  Foreground="Green" FontWeight="Bold"/>
                            <TextBlock Text="Nom compte : " Grid.Row="1" Height="22" Margin="10,11,170,9" Grid.ColumnSpan="2" Foreground="Green" FontWeight="Bold" />
                            <TextBlock Text="Mot Pass : " Grid.Row="2" Grid.ColumnSpan="2" Margin="8,0,172,0" Foreground="Green" FontWeight="Bold" />
                            <TextBlock Text="Base donnés :" Grid.Row="1" Grid.Column="2" Height="23" Margin="0,12,0,7" Foreground="Green" FontWeight="Bold" />
                            <TextBox Text="{Binding CurrentParametres.Nomserveur, UpdateSourceTrigger=PropertyChanged}"  Width="180" Grid.Column="1"  Margin="0,12,0,40" Grid.RowSpan="2" />
                            <TextBox IsReadOnly="True"  HorizontalAlignment="Left" Text="{Binding CurrentParametres.Port, UpdateSourceTrigger=PropertyChanged}" Width="100" Grid.Row="0" Grid.Column="3" Margin="0,10,0,0"/>
                            <TextBox Text="{Binding CurrentParametres.Utilisateur, UpdateSourceTrigger=PropertyChanged}" Width="177" Grid.Row="1" Grid.Column="1" Margin="0,10,3,10"/>
                            <TextBox Text="{Binding CurrentParametres.Motpasse, UpdateSourceTrigger=PropertyChanged}" Width="173" Grid.Row="2" Grid.Column="1" Margin="0,0,7,0" />
                            <TextBox Text="{Binding CurrentParametres.NomBd, UpdateSourceTrigger=PropertyChanged}" Width="176" Grid.Row="1" Grid.Column="3" Margin="0,13,212,7" Grid.ColumnSpan="2" />
                            <StackPanel Orientation="Horizontal" Grid.Row="4" Grid.ColumnSpan="4">
                                <Button Margin="50,5"  ToolTip="Save " Commands:Click.Command="{Binding SaveCommand}" Width="30" Height="30">
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="Cursor" Value="Arrow"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=IsBusy}" Value="True">
                                                    <Setter Property="Cursor" Value="Wait"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                    <Button.Background>
                                        <ImageBrush ImageSource="{StaticResource save}" />
                                    </Button.Background>
                                </Button>
                            </StackPanel>
                        </Grid>
                    </TabItem>
                    <TabItem Header="Parametres Application" x:Name="tabItemDatas" Visibility="{Binding Path=VisibleParemetres, Converter={StaticResource visibled}}">
                        <Grid >
                            <Grid.RowDefinitions >
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Grid.ColumnDefinitions >
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="69*" />
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                     
                        
                            <Label Content="Langue par défaut" Grid.Row="3" Grid.Column="3" Height="26" Margin="5,0,0,0" Foreground="Green"  FontWeight="Bold"/>

                            <StackPanel Orientation="Horizontal" Grid.Row="3" Grid.Column="4" Grid.ColumnSpan="2">
                                <ig:XamComboEditor x:Name="cmbLangues" Width="170" Height="25"
                                                                    ItemsSource="{Binding Displaylangues}" SelectedIndex="{Binding IndexLangue}"
                                                                    DisplayMemberPath="Label" SelectionChanged="cmbLangues_SelectionChanged">

                                </ig:XamComboEditor>
                                <Button Margin="0,5"  ToolTip="Save defaul language" HorizontalAlignment="Left" Commands:Click.Command="{Binding AddDefaultLanguageCommand}" Width="25" Height="20">
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="Cursor" Value="Arrow"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=IsBusy}" Value="True">
                                                    <Setter Property="Cursor" Value="Wait"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                    <Button.Background>
                                        <ImageBrush ImageSource="{StaticResource save}" />
                                    </Button.Background>
                                </Button>
                            </StackPanel>
                            <Label Content="Chemin log :" Grid.Row="4" Grid.Column="3" Height="23" Margin="0,0,0,0" Foreground="Green"  FontWeight="Bold"/>

                            <TextBox Grid.Row="4" Grid.Column="4" Text="{Binding CurrentParametres.PathLog, UpdateSourceTrigger=PropertyChanged}" Height="25" Width="200"/>
                            <StackPanel Grid.Row="4" Grid.Column="5" Orientation="Horizontal"  >
                                <Button Content="..."  Height="25" Width="20" x:Name="btn_logFile" Click="btn_logFile_Click" />
                                <Button   Height="25" Width="25" ToolTip="Modifier chemin du log" Command="{Binding AddpathLogFilepCommand}">
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="Cursor" Value="Arrow"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=IsBusy}" Value="True">
                                                    <Setter Property="Cursor" Value="Wait"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                    <Button.Background>
                                        <ImageBrush ImageSource="{StaticResource save}" />
                                    </Button.Background>
                                </Button>

                            </StackPanel>

                            <Label Content="Jour limite clôture compta:" Grid.Row="7" Grid.Column="3" HorizontalAlignment="Right" Height="23" Margin="0,0,0,0" Foreground="Green"  FontWeight="Bold"/>
                            <StackPanel Grid.Row="7" Grid.Column="4" HorizontalAlignment="Left" Orientation="Horizontal"  IsEnabled="{Binding EnableLimitJourFacturation}">
                                
                                <!--<ig:XamComboEditor x:Name="cmbJourLimite" Width="100" Height="25"
                                                                    ItemsSource="{Binding ListeJourLimite}" SelectedItem="{Binding JourlimiteSelect, Mode=TwoWay}"
                                               SelectedIndex="{Binding IndexLimiteJour}"
                                                                    DisplayMemberPath="NbreJour"   >

                                </ig:XamComboEditor>-->
                                <TextBox x:Name="txtLimiteJours" Text="{Binding IntLimiteJourfacturation, UpdateSourceTrigger=PropertyChanged}" Height="25" Width="30" />
                                <Button Margin="0,5"  Grid.Row="10" Grid.Column="5" ToolTip="Jour limite du mois de facturation "  HorizontalAlignment="Left" 
                                                Commands:Click.Command="{Binding AddDefaultJourLimiteCommand}" Width="25" Height="20">
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="Cursor" Value="Arrow"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=IsBusy}" Value="True">
                                                    <Setter Property="Cursor" Value="Wait"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                    <Button.Background>
                                        <ImageBrush ImageSource="{StaticResource save}" />
                                    </Button.Background>
                                </Button>
                            </StackPanel>
                           
                            
                            <Label Content="Mot de passe Par Défaul :" Grid.Row="3" Height="23" Margin="5,9,0,10" Foreground="Green"  FontWeight="Bold"/>
                            <TextBox Grid.Row="3" MaxWidth="200" Text="{Binding CurrentParametres.DeaultPassword, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay }" 
                                                 Grid.Column="1" Width="198" Margin="2,6,0,10" Height="26" />
                            <Button Margin="0,5"  Grid.Row="3" Grid.Column="2" ToolTip="Save " Commands:Click.Command="{Binding AddPasswordCommand}" Width="25" Height="20">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="Cursor" Value="Arrow"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsBusy}" Value="True">
                                                <Setter Property="Cursor" Value="Wait"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                                <Button.Background>
                                    <ImageBrush ImageSource="{StaticResource save}" />
                                </Button.Background>
                            </Button>

                            <Label Content="Pagination Historique :" Grid.Row="4" Height="23" Margin="5,9,0,10" Foreground="Green"  FontWeight="Bold" />
                            <TextBox Grid.Row="4" Text="{Binding CurrentParametres.PaginationHtrc, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay }" 
                                                 Grid.Column="1" Width="198" Margin="2,6,0,10" Height="26" />
                            <Button Margin="0,5"  Grid.Row="4" Grid.Column="2" ToolTip="Modifier Pagination " Commands:Click.Command="{Binding AddPaginationCommand}" Width="25" Height="20">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="Cursor" Value="Arrow"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsBusy}" Value="True">
                                                <Setter Property="Cursor" Value="Wait"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                                <Button.Background>
                                    <ImageBrush ImageSource="{StaticResource save}" />
                                </Button.Background>
                            </Button>
                            
                            <Label Content="Chemin Import :" Grid.Row="5" Height="23" Margin="5,9,0,10" Foreground="Green"  FontWeight="Bold"/>
                            <TextBox Grid.Row="5" Grid.Column="1"  Height="25 " Text="{Binding CurrentParametres.CheminFichierPath, UpdateSourceTrigger=PropertyChanged}"/>
                            <Button x:Name="btnpathLog" Content="..." Grid.Row="5" Grid.Column="2" Height="25"   Width="20" Click="btnpathLog_Click"/>
                            <Button Margin="0,5"  Grid.Row="5" Grid.Column="3" ToolTip="Modifier Pagination "  HorizontalAlignment="Left" 
                                                Commands:Click.Command="{Binding AddPathCommand}" Width="25" Height="20">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="Cursor" Value="Arrow"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsBusy}" Value="True">
                                                <Setter Property="Cursor" Value="Wait"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                                <Button.Background>
                                    <ImageBrush ImageSource="{StaticResource save}" />
                                </Button.Background>
                            </Button>
                            <Label Content="Chemin Export :" Grid.Row="6" Height="23" Margin="5,9,0,10" Foreground="Green"  FontWeight="Bold"/>
                            <TextBox Grid.Row="6" Grid.Column="1"  Height="25 " 
                                                 Text="{Binding CurrentParametres.PathBackUpLog, UpdateSourceTrigger=PropertyChanged}"/>
                            <Button x:Name="btnPathBackUp" Content="..." Grid.Row="6" Grid.Column="2" Height="25" Width="20" Click="btnPathBackUp_Click"  />
                            <Button Margin="0,5"  Grid.Row="6" Grid.Column="3" ToolTip="Modifier Pagination "  HorizontalAlignment="Left" 
                                                Commands:Click.Command="{Binding AddPathBackLockCommand}" Width="25" Height="20">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="Cursor" Value="Arrow"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsBusy}" Value="True">
                                                <Setter Property="Cursor" Value="Wait"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                                <Button.Background>
                                    <ImageBrush ImageSource="{StaticResource save}" />
                                </Button.Background>
                            </Button>
                            <Label Content="Mail de :" Grid.Row="7" Height="23" Margin="5,9,0,10" Foreground="Green"  FontWeight="Bold"/>
                            <TextBox Grid.Row="7" Grid.Column="1"  Height="25 " 
                                                 Text="{Binding CurrentParametres.MailFrom, UpdateSourceTrigger=PropertyChanged}"/>
                            <Button Margin="0,5"  Grid.Row="7" Grid.Column="2" ToolTip="Adresse mail d'origine "  HorizontalAlignment="Left" 
                                                Commands:Click.Command="{Binding AddmailFromCommand}" Width="25" Height="20">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="Cursor" Value="Arrow"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsBusy}" Value="True">
                                                <Setter Property="Cursor" Value="Wait"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                                <Button.Background>
                                    <ImageBrush ImageSource="{StaticResource save}" />
                                </Button.Background>
                            </Button>

                            <Label Content="Mail à :" Grid.Row="8" Height="23" Margin="5,9,0,10" Foreground="Green"  FontWeight="Bold"/>
                            <TextBox Grid.Row="8" Grid.Column="1"  Height="25 "  Grid.ColumnSpan="2"
                                                 Text="{Binding CurrentParametres.MailTo, UpdateSourceTrigger=PropertyChanged}"/>
                            <Button Margin="0,5"  Grid.Row="8" Grid.Column="3" ToolTip="adresse mail destination "  HorizontalAlignment="Left" 
                                                Commands:Click.Command="{Binding AddMailToCommand}" Width="25" Height="20">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="Cursor" Value="Arrow"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsBusy}" Value="True">
                                                <Setter Property="Cursor" Value="Wait"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                                <Button.Background>
                                    <ImageBrush ImageSource="{StaticResource save}" />
                                </Button.Background>
                            </Button>

                            <Label Content="Port smtp :" Grid.Row="10" Height="23" Margin="5,9,0,10" Foreground="Green"  FontWeight="Bold"/>
                            <TextBox Grid.Row="10" Grid.Column="1"  Height="25 " 
                                                 Text="{Binding CurrentParametres.PortSmtp, UpdateSourceTrigger=PropertyChanged}"/>
                            <Button Margin="0,5"  Grid.Row="10" Grid.Column="2" ToolTip="Adresse serveur Smtp "  HorizontalAlignment="Left" 
                                                Commands:Click.Command="{Binding AddPortSmtpCommand}" Width="25" Height="20">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="Cursor" Value="Arrow"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsBusy}" Value="True">
                                                <Setter Property="Cursor" Value="Wait"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                                <Button.Background>
                                    <ImageBrush ImageSource="{StaticResource save}" />
                                </Button.Background>
                            </Button>
                            
                            <Label  Content="Nom fichier Export" Foreground="Green" FontWeight="Bold" Grid.Row="11" />
                            <TextBox Grid.Row="11" Grid.Column="1"  Height="25 " 
                                                 Text="{Binding CurrentParametres.NomFichierExport, UpdateSourceTrigger=PropertyChanged}"/>
                            <Button Margin="0,5"  Grid.Row="11" Grid.Column="2" ToolTip="Adresse serveur Smtp "  HorizontalAlignment="Left" 
                                                Commands:Click.Command="{Binding AddDefaulExportDBCommand}" Width="25" Height="20">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="Cursor" Value="Arrow"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsBusy}" Value="True">
                                                <Setter Property="Cursor" Value="Wait"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                                <Button.Background>
                                    <ImageBrush ImageSource="{StaticResource save}" />
                                </Button.Background>
                            </Button>






                            <Label Content="Serveur smtp :" Grid.Row="9" Height="23" Margin="5,9,0,10" Foreground="Green"  FontWeight="Bold"/>
                            <TextBox Grid.Row="9" Grid.Column="1"  Height="25 " 
                                                 Text="{Binding CurrentParametres.Smtp, UpdateSourceTrigger=PropertyChanged}"/>
                            <Button Margin="0,5"  Grid.Row="9" Grid.Column="2" ToolTip="Adresse serveur Smtp "  HorizontalAlignment="Left" 
                                                Commands:Click.Command="{Binding AddSmtpCommand}" Width="25" Height="20">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="Cursor" Value="Arrow"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsBusy}" Value="True">
                                                <Setter Property="Cursor" Value="Wait"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                                <Button.Background>
                                    <ImageBrush ImageSource="{StaticResource save}" />
                                </Button.Background>
                            </Button>

                            <Label Content="loggin smtp :" Grid.Row="9" Grid.Column="3" Height="23"  Foreground="Green"  FontWeight="Bold"/>
                            <TextBox Grid.Row="9" Grid.Column="4"  Height="25 " 
                                                 Text="{Binding CurrentParametres.LogginSmtp, UpdateSourceTrigger=PropertyChanged}"/>
                            <Button Margin="0,5"  Grid.Row="9" Grid.Column="5" ToolTip="Loggin Smtp "  HorizontalAlignment="Left" 
                                                Commands:Click.Command="{Binding AddLogginStmpCommand}" Width="25" Height="20">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="Cursor" Value="Arrow"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsBusy}" Value="True">
                                                <Setter Property="Cursor" Value="Wait"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                                <Button.Background>
                                    <ImageBrush ImageSource="{StaticResource save}" />
                                </Button.Background>
                            </Button>


                            <Label Content="Password smtp :" Grid.Row="10" Grid.Column="3" Height="23"  Foreground="Green"  FontWeight="Bold"/>
                            <TextBox Grid.Row="10" Grid.Column="4"  Height="25 " 
                                                 Text="{Binding CurrentParametres.PasswordSmtp, UpdateSourceTrigger=PropertyChanged}"/>
                            <Button Margin="0,5"  Grid.Row="10" Grid.Column="5" ToolTip="Pasword Smtp "  HorizontalAlignment="Left" 
                                                Commands:Click.Command="{Binding AddPassWordSmtpCommand}" Width="25" Height="20">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="Cursor" Value="Arrow"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsBusy}" Value="True">
                                                <Setter Property="Cursor" Value="Wait"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                                <Button.Background>
                                    <ImageBrush ImageSource="{StaticResource save}" />
                                </Button.Background>
                            </Button>

                        </Grid>
                    </TabItem>
                </TabControl>
                
              
                    <!--<Grid Background="Transparent" >
                        
                                </controls:OptionsPanel>
                                <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Visible" Visibility="{Binding Path=VisibleParemetres, Converter={StaticResource visibled}}">
                                    <controls:OptionsPanel IsMovable="False" Margin="0">
                                    <expand:AnimatedExpander Header=" Application Parameters" Width="auto" MinWidth="750" Grid.Row="1" Margin="0,0,0,0" 
                                                           HorizontalAlignment="Center"  >
                                   
                                   
                                </expand:AnimatedExpander>
                                    </controls:OptionsPanel>
                                </ScrollViewer>
                               

                            </Grid>
                        </Border>
                    </Grid>-->
               
            </DockPanel>
        </GroupBox>
        
    </Grid>
</UserControl>
