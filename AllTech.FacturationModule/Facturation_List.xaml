<UserControl x:Class="AllTech.FacturationModule.Views.Facturation_List"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
			 xmlns:Commands="clr-namespace:Microsoft.Practices.Prism.Commands;assembly=Microsoft.Practices.Prism"
			  xmlns:localVisible="clr-namespace:AllTech.FrameWork.Converter;assembly=AllTech.FrameWork"
			 xmlns:tri="clr-namespace:AllTech.FrameWork.Utils;assembly=AllTech.FrameWork"
			 xmlns:controls="clr-namespace:AllTech.FrameWork.Utils;assembly=AllTech.FrameWork"
			 xmlns:boutonSplit="clr-namespace:Wpf.Controls;assembly=Wpf.SplitButton"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
              xmlns:ig="http://schemas.infragistics.com/xaml"
             xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives"
			 mc:Ignorable="d" 
			  Height="auto" d:DesignWidth="1080" SizeChanged="UserControl_SizeChanged">
    <UserControl.Resources >
        <localVisible:BoolVisibilityConverter x:Key="visibled"/>
        <localVisible:DateConverter x:Key="convertDate"/>
        <localVisible:BackgroundConverter  x:Key="convertBack"/>
        <localVisible:BinaryImageConverter x:Key="convertimg"/>
        <!--<tri:SortableListView />-->
        <Style x:Key="myItemStyle" TargetType="{x:Type ListViewItem}">
            <Setter Property="Background">
                <Setter.Value>
                    <Binding RelativeSource="{RelativeSource Self}" 
               Converter="{StaticResource convertBack}"/>
                </Setter.Value>

            </Setter>
            <Setter Property="Height" Value="25"/>
            <!--<EventSetter Event="Mouse.MouseEnter" Handler="Show_PopupToolTip"  />
            <EventSetter Event="Mouse.MouseLeave" Handler="Hide_PopupToolTip"/>-->

        </Style>
    </UserControl.Resources>
    <Grid x:Name="LayoutRoot" Width="Auto" Height="auto"  >
        <GroupBox Header="Historique Des Factures"  FontSize="12"   Margin="9,7,13.97,10.207" Style="{DynamicResource GroupBoxStyle1}">
            <DockPanel>
                <Border DockPanel.Dock="Top">
                    <ToolBarTray >
                        <ToolBar x:Name="toolbarMain" Width="auto"  MinWidth="1050" >
                            <Grid >
                                <Grid.RowDefinitions >
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Border Grid.Row="0" >
                                    <StackPanel Orientation="Horizontal" >
                                        <Button  Background="Transparent"   Commands:Click.Command="{Binding NewCommand}" Width="30" Height="30" ToolTip="New Product" HorizontalAlignment="Left" >
                                            <Button.Style>
                                                <Style TargetType="{x:Type Button}">
                                                    <Setter Property="Cursor" Value="Arrow"/>

                                                </Style>
                                            </Button.Style>
                                            <Image Source="{StaticResource new}">
                                                <Image.Style >
                                                    <Style TargetType="Image">
                                                        <Style.Triggers >
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Opacity" Value="0.5"/>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                        </Button>
                                        <Separator />
                                        <Button Background="Transparent"  ToolTip="fermer Formulaire"  Width="40" Height="30" Commands:Click.Command="{Binding CloseCommand}"
									 >
                                            <Button.Style>
                                                <Style TargetType="{x:Type Button}">
                                                    <Setter Property="Cursor" Value="Arrow"/>

                                                </Style>
                                            </Button.Style>
                                            <Image Source="{StaticResource cancel}">
                                                <Image.Style >
                                                    <Style TargetType="Image">
                                                        <Style.Triggers >
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Opacity" Value="0.5"/>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                        </Button>
                                            <Separator />
                                        <Label Content="Liste de sites " FontWeight="Bold"  Margin="10,2" Height="25" Visibility="{Binding CmbStevisible,Converter={StaticResource visibled}}"/>
                                        <ComboBox  Width="180" Height="25" ItemsSource="{Binding SocieteListe}" Margin=" 0,0"
                                        Visibility="{Binding CmbStevisible,Converter={StaticResource visibled}}"
                                        DisplayMemberPath="Ville" SelectedItem="{Binding CurrentSociete}"/>
                                    </StackPanel>
                                </Border>

                                <StackPanel Orientation="Horizontal" Grid.Row="1" Margin="0,3">
                                    <Border Grid.Row="1" Background="White" Width="250" Height="100" BorderBrush="Green"  BorderThickness="3" CornerRadius="5" Margin="0,0" >
                                        <Grid >
                                            <Grid.RowDefinitions >
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                            </Grid.RowDefinitions>
                                            <Border Grid.Row="0">
                                                <TextBlock Text="Filtres" Foreground="White"  FontWeight="Bold" FontSize="12"  HorizontalAlignment="Center"  />
                                                <Border.Background>
                                                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                        <GradientStop Color="Black" Offset="0" />
                                                        <GradientStop Color="#FF59A050" Offset="0.355" />
                                                    </LinearGradientBrush>
                                                </Border.Background>
                                            </Border>
                                            <Canvas Grid.Row="1">
                                                <Canvas.Background>
                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                        <GradientStop Color="#FF9EDCFA" Offset="0"/>
                                                        <GradientStop Color="#FF2B87C2" Offset="0.5"/>
                                                        <GradientStop Color="#FF015994" Offset="0.5"/>
                                                        <GradientStop Color="#FF2676A7" Offset="0.9"/>
                                                        <GradientStop Color="#FF77AAC5" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Canvas.Background>
                                                <boutonSplit:SplitButton Canvas.Left="10"  Width="70" Height="70" 
													  Click="mnFacture_Click" x:Name="mnFacture" ToolTip="Filtre par facture"
													 Mode="{Binding ElementName=modeSelector, Path=SelectedItem}" 
													 Placement="{Binding ElementName=placementSelector, Path=SelectedItem}" >
                                                    <boutonSplit:SplitButton.Content >
                                                        <StackPanel Orientation="Vertical" >
                                                            <Image Source="{StaticResource newfiltres}" Width="50" Stretch="Fill"  Height="40"/>
                                                            <TextBlock TextTrimming="CharacterEllipsis"
																	   HorizontalAlignment="Center" 
																		VerticalAlignment="Top" 
																		TextAlignment="Center"
																	   Text="Facture"
																		
																	   TextWrapping="Wrap" />
                                                        </StackPanel>
                                                    </boutonSplit:SplitButton.Content>

                                                </boutonSplit:SplitButton>

                                                <boutonSplit:SplitButton Canvas.Left="90"  Width="70" Height="70"   
													 Mode="{Binding ElementName=modeSelector, Path=SelectedItem}" 
																	   x:Name="mnClient" Click="mnClient_Click"
													 Placement="{Binding ElementName=placementSelector, Path=SelectedItem}" >
                                                    <boutonSplit:SplitButton.Content >
                                                        <StackPanel Orientation="Vertical" >
                                                            <Image Source="{StaticResource newfiltres}" Stretch="Fill"  Width="50" Height="40"/>
                                                            <TextBlock TextTrimming="CharacterEllipsis"
																	   HorizontalAlignment="Center" 
																		VerticalAlignment="Top" 
																		TextAlignment="Center"
																	   Text="Client"
																		
																	   TextWrapping="Wrap" />
                                                        </StackPanel>
                                                    </boutonSplit:SplitButton.Content>

                                                </boutonSplit:SplitButton>

                                                <boutonSplit:SplitButton Canvas.Left="170"  Width="70" Height="70"   
													 Mode="{Binding ElementName=modeSelector, Path=SelectedItem}" 
																		  Click="mnDate_Click" x:Name="mnDate"
													 Placement="{Binding ElementName=placementSelector, Path=SelectedItem}" >
                                                    <boutonSplit:SplitButton.Content >
                                                        <StackPanel Orientation="Vertical" >
                                                            <Image Source="{StaticResource newfiltres}" Stretch="Fill"  Width="50" Height="40"/>
                                                            <TextBlock TextTrimming="CharacterEllipsis"
																	   HorizontalAlignment="Center" 
																		VerticalAlignment="Top" 
																		TextAlignment="Center"
																	   Text="Date"
																		
																	   TextWrapping="Wrap" />
                                                        </StackPanel>
                                                    </boutonSplit:SplitButton.Content>
                                                    <MenuItem Header="Suggestion dates"/>
                                                </boutonSplit:SplitButton>

                                            </Canvas>
                                            <Border Grid.Row="2">

                                            </Border>
                                        </Grid>

                                    </Border>
                                    <Border  Background="LightGray"    Width="300" Height="100" BorderBrush="Green"  BorderThickness="3" CornerRadius="5" Margin="3,0">
                                        <Grid >
                                            <Grid.RowDefinitions >
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                            </Grid.RowDefinitions>
                                            <Border Grid.Row="0" >
                                                <Border.Background >
                                                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                        <GradientStop Color="Black" Offset="0" />
                                                        <GradientStop Color="#FF59A050" Offset="0.355" />
                                                    </LinearGradientBrush>
                                                </Border.Background>
                                                <TextBlock Text="Recherches" Margin="0,0"  HorizontalAlignment="Center" Width="80" Foreground="white" FontWeight="Bold" FontSize="12" />
                                            </Border>
                                            <StackPanel Grid.Row="1">
                                                <Grid >
                                                    <Grid.RowDefinitions >
                                                        <RowDefinition Height="auto"/>
                                                        <RowDefinition Height="auto"/>
                                                        <RowDefinition Height="auto"/>
                                                    </Grid.RowDefinitions>
                                                    <Grid.ColumnDefinitions >
                                                        <ColumnDefinition Width="auto"/>
                                                        <ColumnDefinition Width="auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Label Content="Date début" Grid.Row="0" Grid.Column="0" Foreground="Green" FontWeight="Bold" />
                                                    <Label Content="Date fin" Grid.Row="0" Grid.Column="1" Foreground="Green" FontWeight="Bold"/>
                                                    <DatePicker x:Name="datedebut" Width="120"  Grid.Row="1" Grid.Column="0" Margin="0,0"
                                                                SelectedDate="{Binding DateDebut, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                                 DisplayDateEnd="{Binding DateFin}"/>
                                                    <DatePicker x:Name="datefin" Width="120"  Grid.Row="1" Grid.Column="1" Margin="0,0"
                                                                SelectedDate="{Binding DateFin, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                                DisplayDateStart="{Binding DateDebut}"
                                                                 DisplayDateEnd="{x:Static sys:DateTime.Now}">
                                                        <DatePicker.InputBindings>
                                                            <KeyBinding Key="Enter" Command="{Binding SerchByDateCommand}" />
                                                        </DatePicker.InputBindings>
                                                       
                                                    </DatePicker>
                                                    <Button  ToolTip="Rechercher une plage de facture" Grid.Row="2" Grid.Column="0" Height="30" Width="40" Margin="0,0" HorizontalAlignment="Left" 
                                                             Commands:Click.Command="{Binding SerchByDateCommand}">
                                                        <Button.Style>
                                                            <Style TargetType="{x:Type Button}">
                                                                <Setter Property="Cursor" Value="Arrow"/>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Path=IsBusy}" Value="True">
                                                                        <Setter Property="Cursor" Value="Wait"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Button.Style>
                                                        <Image Source="{StaticResource run}" Stretch="Fill" >
                                                            <Image.Style >
                                                                <Style TargetType="Image">
                                                                    <Style.Triggers >
                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                            <Setter Property="Opacity" Value="0.5"/>
                                                                        </Trigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </Image.Style>
                                                        </Image>
                                                    

                                                    </Button>
                                                    <StackPanel Orientation="Horizontal"  Grid.Row="2" Margin="50,0" HorizontalAlignment="Right" Width="230"      Grid.ColumnSpan="2">
                                                        <Label Content="Client"  Foreground="Green" FontWeight="Bold" />
                                                        <!--<ComboBox x:Name="cmbClieListe"  ItemsSource="{Binding ListeClientFacture}"  Width="160" HorizontalAlignment="Right" 
                                                                  DisplayMemberPath="NomClient"
                                                                   SelectedItem="{Binding ClientFactireselect}" />-->
                                                        <ig:XamComboEditor x:Name="cmbClieListe" Grid.Row="1" Grid.Column="1"
                                                           IsEditable="True"  ItemsSource="{Binding ListeClientFacture}"
                                                           AllowMultipleSelection="True"
                                                           EmptyText="{Binding MFACT_HSTF_LSTCLIENT, Source={StaticResource resStrings}}"
                                                           Width="160" Margin="10"
                                                            DisplayMemberPath="NomClient"
                                                           VerticalAlignment="Center" HorizontalAlignment="Left"
                                                             SelectionChanged="cmbClieListe_SelectionChanged"
                                                                           >
                                                            <ig:XamComboEditor.InputBindings>
                                                                <KeyBinding Key="Enter" Command="{Binding SerchByDateCommand}" />
                                                            </ig:XamComboEditor.InputBindings>
                                                        </ig:XamComboEditor>
                                                    </StackPanel>
                                                </Grid>
                                            </StackPanel>
                                        </Grid>

                                    </Border>
                                    <Border  Background="White" Width="auto" Height="100"  BorderBrush="Green"  BorderThickness="3" CornerRadius="5" Margin="2,0">
                                        <Grid >
                                            <Grid.RowDefinitions >
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions >
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>

                                            <Border Grid.Row="0" Grid.ColumnSpan="2" Grid.Column="0"  >
                                                <Border.Background>
                                                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                        <GradientStop Color="Black" Offset="0" />
                                                        <GradientStop Color="#FF59A050" Offset="0.355" />
                                                    </LinearGradientBrush>
                                                </Border.Background>
                                                <TextBlock Text="Impression" Margin="0,0"  HorizontalAlignment="Center" Width="80" Foreground="white" FontWeight="Bold" FontSize="12" />
                                            </Border>
                                            <StackPanel Orientation="Vertical"  Grid.Row="1" Grid.Column="0" Grid.RowSpan="2"  HorizontalAlignment="Left" >


                                              
                                                <boutonSplit:SplitButton  Width="100" Height="40"  Grid.Row="1" Grid.Column="1"
                                                 >
                                                    <boutonSplit:SplitButton.ToolTip >
                                                        <TextBlock  MaxWidth="200" TextWrapping="WrapWithOverflow">
                                                             <Image Width="10" Height="10" Source="{StaticResource etats}" />
                                                            Ce Boutton permet d'exporter sous Excel l'historique des Factures affichés ou les factures sélectionnées
                                                        </TextBlock>
                                                    </boutonSplit:SplitButton.ToolTip>
                                                    <boutonSplit:SplitButton.Content>


                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="{StaticResource excel}"  Stretch="Fill" >
                                                                <Image.Style >
                                                                    <Style TargetType="Image">
                                                                        <Style.Triggers >
                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                <Setter Property="Opacity" Value="0.5"/>
                                                                            </Trigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </Image.Style>
                                                            </Image>
                                                            <TextBlock Text="Export " Margin="3,0,0,0"/>
                                                        </StackPanel>
                                                    </boutonSplit:SplitButton.Content>
                                                    
                                                    <!--<MenuItem Header="Liste de la selection"  Foreground="Blue"  FontWeight="Bold" >-->
                                                    <Button  Command="{Binding ExportCommand}"  Content="Liste de la selection" Width="120">
                                                            <Button.Style >
                                                                <Style TargetType="{x:Type Button}">
                                                                    <Setter Property="Cursor" Value="Arrow"/>
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding Path=IsBusy}" Value="True">
                                                                            <Setter Property="Cursor" Value="Wait"/>
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </Button.Style>
                                                        </Button>
                                                            <!--<MenuItem.Style >
                                                            <Style TargetType="{x:Type MenuItem}">
                                                                <Setter Property="Cursor" Value="Arrow"/>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Path=IsBusy}" Value="True">
                                                                        <Setter Property="Cursor" Value="Wait"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </MenuItem.Style>-->
                                                    <!--</MenuItem>-->
                                                    <Button  Command="{Binding ExportALLCommand}"  Content="Toutes les factures" Width="120" Background="Transparent" >
                                                        <Button.Style >
                                                            <Style TargetType="{x:Type Button}">
                                                                <Setter Property="Cursor" Value="Arrow"/>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Path=IsBusy}" Value="True">
                                                                        <Setter Property="Cursor" Value="Wait"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Button.Style>
                                                    </Button>
                                                    <!--<MenuItem Header="Toute les Factures" Command="{Binding ExportALLCommand}" Foreground="Blue" FontWeight="Bold" >
                                                        <MenuItem.Style >
                                                            <Style TargetType="{x:Type MenuItem}">
                                                                <Setter Property="Cursor" Value="Arrow"/>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Path=IsBusy}" Value="True">
                                                                        <Setter Property="Cursor" Value="Wait"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </MenuItem.Style>
                                                    </MenuItem>-->
                                                </boutonSplit:SplitButton>
                                            </StackPanel>
                                            <boutonSplit:SplitButton  Width="60" Height="40"  Grid.Row="1" Grid.Column="1"
													   x:Name="spImprime"  HorizontalAlignment="Left"  
													>
                                                <boutonSplit:SplitButton.Content >
                                                    <StackPanel Orientation="Vertical" >
                                                        <Image Source="{StaticResource print_new}" Width="25" Stretch="Fill"  Height="30">
                                                            <Image.Style >
                                                                <Style TargetType="Image">
                                                                    <Style.Triggers >
                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                            <Setter Property="Opacity" Value="0.5"/>
                                                                        </Trigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </Image.Style>
                                                        </Image>
                                                        <TextBlock TextTrimming="CharacterEllipsis"
																	   HorizontalAlignment="Center" 
																		VerticalAlignment="Top" 
																		TextAlignment="Center"
																	   Text=""
																		
																	   TextWrapping="Wrap" />
                                                    </StackPanel>
                                                </boutonSplit:SplitButton.Content>
                                                <boutonSplit:SplitButton.Style>
                                                    <Style TargetType="{x:Type Button}">
                                                        <Setter Property="Cursor" Value="Arrow"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Path=IsBusy}" Value="True">
                                                                <Setter Property="Cursor" Value="Wait"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </boutonSplit:SplitButton.Style>
                                                <Button  Command="{Binding ImprimerCommand}"     Content="Imprimer Facture" Width="120">
                                                    <Button.Style >
                                                        <Style TargetType="{x:Type Button}">
                                                            <Setter Property="Cursor" Value="Arrow"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Path=IsBusy}" Value="True">
                                                                    <Setter Property="Cursor" Value="Wait"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Button.Style>
                                                </Button>
                                                <Button  Command="{Binding ImprimerToutCommand}"  Content="Imprimer liste facture" Width="120">
                                                    <Button.Style >
                                                        <Style TargetType="{x:Type Button}">
                                                            <Setter Property="Cursor" Value="Arrow"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Path=IsBusy}" Value="True">
                                                                    <Setter Property="Cursor" Value="Wait"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Button.Style>
                                                </Button>
                                            </boutonSplit:SplitButton>


                                        </Grid>

                                    </Border>
                                    <Border Background="White" Width="250" Height="100" BorderBrush="Green"  BorderThickness="3" CornerRadius="5" Margin="3,0">
                                        <Grid >
                                            <Grid.RowDefinitions >
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                            </Grid.RowDefinitions>
                                            <Border Grid.Row="0" >
                                                <Border.Background>
                                                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                        <GradientStop Color="Black" Offset="0" />
                                                        <GradientStop Color="#FF59A050" Offset="0.355" />
                                                    </LinearGradientBrush>
                                                </Border.Background>
                                                <TextBlock Text="Operation" HorizontalAlignment="Center" Foreground="white" FontWeight="Bold" FontSize="12" />
                                            </Border>
                                            <StackPanel Orientation="Horizontal" Grid.Row="1"  Margin="10,0">
                                                <RepeatButton  Height="50" Width="50" Margin="2" IsEnabled="{Binding EnbameBtnSuspendre}"  Commands:Click.Command="{Binding ValidationCommand}"
															   x:Name="btnvalidation" >
                                                    <RepeatButton.Style>
                                                        <Style TargetType="{x:Type RepeatButton}">
                                                            <Setter Property="Cursor" Value="Arrow"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Path=IsBusy}" Value="True">
                                                                    <Setter Property="Cursor" Value="Wait"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </RepeatButton.Style>
                                                    <Image Source="{StaticResource validate}">
                                                        <Image.Style >
                                                            <Style TargetType="Image">
                                                                <Style.Triggers >
                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                        <Setter Property="Opacity" Value="0.5"/>
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Image.Style>
                                                    </Image>
                                                    <RepeatButton.ToolTip >
                                                        <TextBlock TextWrapping="WrapWithOverflow"  MaxWidth="200" >
                                                             <Image Width="20" Height="15" Source="{StaticResource tips}" />
                                                            Boutton permettant la validation d'une facture sélectionnée donc de la faire passer au <Bold > <Underline >statut validé</Underline></Bold>
                                                        </TextBlock>
                                                    </RepeatButton.ToolTip>
                                                </RepeatButton>
                                                <RepeatButton   Height="50" Width="50" Margin="2" IsEnabled="{Binding EnableBtnSortie}"
                                                              x:Name="cmbsortie"  Commands:Click.Command="{Binding SortieCommand}">
                                                    <RepeatButton.ToolTip >
                                                        <TextBlock TextWrapping="WrapWithOverflow" MaxWidth="150">
                                                              <Image Width="10" Height="10" Source="{StaticResource tips}" />
                                                              boutton permettant de passer une facture au statut<Bold ><Underline > sortie facture</Underline></Bold>
                                                        </TextBlock>
                                                    </RepeatButton.ToolTip>
                                                    <RepeatButton.Style>
                                                        <Style TargetType="{x:Type RepeatButton}">
                                                            <Setter Property="Cursor" Value="Arrow"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Path=IsBusy}" Value="True">
                                                                    <Setter Property="Cursor" Value="Wait"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </RepeatButton.Style>
                                                    <Image Source="{StaticResource sorties}">
                                                        <Image.Style >
                                                            <Style TargetType="Image">
                                                                <Style.Triggers >
                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                        <Setter Property="Opacity" Value="0.5"/>
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Image.Style>
                                                    </Image>

                                                </RepeatButton>

                                                <RepeatButton  ToolTip="Suspension" Height="50" Width="50" Margin="2"
															   IsEnabled="{Binding EnbameBtnSuspendre}"
															   Commands:Click.Command="{Binding SuspensionCommand}" 
															   x:Name="btnSuspension">
                                                    <RepeatButton.Style>
                                                        <Style TargetType="{x:Type RepeatButton}">
                                                            <Setter Property="Cursor" Value="Arrow"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Path=IsBusy}" Value="True">
                                                                    <Setter Property="Cursor" Value="Wait"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </RepeatButton.Style>
                                                    <Image Source="{StaticResource suspendu}">
                                                        <Image.Style >
                                                            <Style TargetType="Image">
                                                                <Style.Triggers >
                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                        <Setter Property="Opacity" Value="0.5"/>
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Image.Style>
                                                    </Image>
                                                </RepeatButton>

                                                <RepeatButton ToolTip="Non valable" Height="50" Width="50" Margin="2" 
																IsEnabled="{Binding EnbameBtnSuspendre}"
															  Commands:Click.Command="{Binding NonValalableCommand}" 
															  x:Name="btnNonValable">
                                                    <RepeatButton.Style>
                                                        <Style TargetType="{x:Type RepeatButton}">
                                                            <Setter Property="Cursor" Value="Arrow"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Path=IsBusy}" Value="True">
                                                                    <Setter Property="Cursor" Value="Wait"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </RepeatButton.Style>
                                                    <Image Source="{StaticResource nonvalable}">
                                                        <Image.Style >
                                                            <Style TargetType="Image">
                                                                <Style.Triggers >
                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                        <Setter Property="Opacity" Value="0.5"/>
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Image.Style>
                                                    </Image>
                                                </RepeatButton>
                                            </StackPanel>
                                        </Grid>
                                    </Border>
                                </StackPanel>

                            </Grid>

                        </ToolBar>
                    </ToolBarTray>
                </Border>
                <Border DockPanel.Dock="Bottom" >
                    <Grid>
                        <Grid.RowDefinitions >
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0">

                        </Border>
                        <Border Grid.Row="1">
                            <Grid >
                                <Grid.RowDefinitions >
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <ProgressBar Grid.Row="0" Margin="350,3,0,5" Width=" 116"  Style="{StaticResource CustomProgressBarStyle}"
										 Height="15" IsIndeterminate="{Binding IsBusy}" 
										Visibility="{Binding Path=ProgressBarVisibility, Converter={StaticResource visibled}}" />
                       <Border Grid.Row="1"  BorderThickness="2"  Height="Auto" >
                                    <DockPanel >
                                        <Border DockPanel.Dock="Top">
                                            <StackPanel Orientation="Horizontal" >
                                                <Button Margin="2,0"   Content="select all " Width="80" Commands:Click.Command="{Binding SelectAllCommand}">
                                                    
                                                </Button>
                                                <Button Content="Deselect All" Width="80" Commands:Click.Command="{Binding DeselectAllCommand}" Margin="2,0"></Button>
                                            </StackPanel>
                                        </Border>
                                   
                                        <tri:SortableListView x:Name="historicGrid" DockPanel.Dock="Bottom"   Height="auto"
                                                            ItemContainerStyle="{StaticResource myItemStyle}" SelectedItem="{Binding FactureSelected}"
                                                           ItemsSource="{Binding FacturesListe}" AlternationCount="2"
                                                          	MouseDoubleClick="historicGrid_MouseDoubleClick_1"
                                    >
                                        <tri:SortableListView.Resources >
                                            <Style TargetType="{x:Type ListViewItem}">
                                                <EventSetter Event="MouseDoubleClick" Handler="historicGrid_MouseDoubleClick" />
                                            </Style>
                                        </tri:SortableListView.Resources>
                                        <tri:SortableListView.View >
                                            <GridView >
                                                <GridView.Columns >
                                                    <GridViewColumn  Header=""     Width="30">
                                                        <GridViewColumn.CellTemplate >
                                                            <DataTemplate >
                                                                <CheckBox  x:Name="chkitems" IsChecked="{Binding IsCheck, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"    />
                                                            </DataTemplate>

                                                        </GridViewColumn.CellTemplate>
                                                    </GridViewColumn>
                                                    <GridViewColumn 
													Header="Facture #" Width="120"   >
                                                        <GridViewColumn.CellTemplate >
                                                            <DataTemplate >
                                                                <DockPanel >
                                                                    <TextBlock DockPanel.Dock="Left"  Text="{Binding Path=NumeroFacture}" />
                                                                    <Image x:Name="TheImage" DockPanel.Dock="Right" Margin="5,0"  />
                                                                </DockPanel>
                                                                <DataTemplate.Triggers>
                                                                    <DataTrigger Binding="{Binding Path=icon}" Value="4">
                                                                        <Setter  TargetName="TheImage" Property="Source" Value="/AllTech.FacturationModule;component/images/fermerlock .png" />
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding Path=icon}" Value="3">
                                                                        <Setter TargetName="TheImage" Property="Source" Value="/AllTech.FacturationModule;component/images/unlock .png" />
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding Path=icon}" Value="2">
                                                                        <Setter TargetName="TheImage" Property="Source" Value="/AllTech.FacturationModule;component/images/editable.png" />
                                                                    </DataTrigger>

                                                                </DataTemplate.Triggers>

                                                            </DataTemplate>
                                                        </GridViewColumn.CellTemplate>
                                                    </GridViewColumn>
                                                    <GridViewColumn DisplayMemberBinding="{Binding Path=DateCreation, Converter={StaticResource convertDate},ConverterParameter=dd/MM/yyyy}"
													Header="Date Creation" Width="100" />
                                                    <GridViewColumn DisplayMemberBinding="{Binding Path=MoisPrestation,Converter={StaticResource convertDate},ConverterParameter=MMM-yyyy}"
													Header="Mois Prestation" Width="110"  />
                                                    <GridViewColumn DisplayMemberBinding="{Binding Path=.CurrentObjetFacture.Libelle }"
													Header="Objet Facture" Width="110"  />

                                                    <GridViewColumn 
													Header="Client" Width="120">
                                                        <GridViewColumn.CellTemplate >
                                                            <DataTemplate >
                                                                <Grid  Background="{Binding Path=ClientbackGround}" Margin="0,0,0,0">
                                                                    <TextBlock Text="{Binding Path=CurrentClient.NomClient}"/>
                                                                </Grid>
                                                            </DataTemplate>
                                                        </GridViewColumn.CellTemplate>
                                                    </GridViewColumn>
                                                    <GridViewColumn DisplayMemberBinding="{Binding Path=UserCreate.Nom}"
													Header="Préparé Par" Width="110"  />
                                                    <GridViewColumn DisplayMemberBinding="{Binding Path=DateCloture, Converter={StaticResource convertDate},ConverterParameter=dd/MM/yyyy}"
													Header="Date Validation" Width="100" />
                                                    <GridViewColumn 
													Header="Statut" Width="120">

                                                        <GridViewColumn.CellTemplate >
                                                            <DataTemplate x:Name="task" >
                                                                <DataTemplate.Resources >
                                                                    <Style TargetType="TextBlock">
                                                                        <Setter Property="FontSize" Value="13"/>
                                                                    </Style>
                                                                </DataTemplate.Resources>
                                                                <Grid  Background="{Binding Path=BackGround}"  >
                                                                    <TextBlock Text="{Binding Path=CurrentStatut.Libelle}"/>
                                                                </Grid>

                                                            </DataTemplate>

                                                        </GridViewColumn.CellTemplate>
                                                    </GridViewColumn>
                                                    <GridViewColumn Header="Total TTC" Width="100" 
																	DisplayMemberBinding="{Binding Path=TotalTTC, StringFormat={}{0:### ### ###}}" >

                                                    </GridViewColumn>
                                                </GridView.Columns>
                                            </GridView>
                                        </tri:SortableListView.View>
                                    </tri:SortableListView>
                                    </DockPanel>

                                </Border>
                        <Border Grid.Row="2" Margin="5,3,0,0"    BorderThickness="2" Background="#CF050014">
                                    <ToolBarPanel >
                                        <Grid >
                                            <Grid.ColumnDefinitions >
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Button Commands:Click.Command="{Binding FirstCommand}" ToolTip="First"  Margin="2,0"   Grid.Column="0"  HorizontalAlignment="Right">
                                                <Image Source="{StaticResource first}" Width="20">
                                                    <Image.Style>
                                                        <Style TargetType="Image">
                                                            <Style.Triggers>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" Value="0.5" />
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Image.Style>
                                                </Image>
                                            </Button>
                                            <Button Commands:Click.Command="{Binding PreviousCommand}" ToolTip="Previous"  Margin="2,0"   Grid.Column="1"  HorizontalAlignment="Right">
                                                <Image Source="{StaticResource preview}" Width="20">
                                                    <Image.Style>
                                                        <Style TargetType="Image">
                                                            <Style.Triggers>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" Value="0.5" />
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Image.Style>
                                                </Image>
                                            </Button>

                                            <Button Commands:Click.Command="{Binding NextCommand}"  ToolTip="Next" Grid.Column="2" Margin="0,0" >
                                                <Image Source="{StaticResource next}" Width="20">
                                                    <Image.Style>
                                                        <Style TargetType="Image">
                                                            <Style.Triggers>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" Value="0.5" />
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Image.Style>
                                                </Image>
                                            </Button>
                                            <Button Commands:Click.Command="{Binding LasstCommand}"  ToolTip="Last" Grid.Column="3" Margin="0,0" >
                                                <Image Source="{StaticResource last}" Width="20">
                                                    <Image.Style>
                                                        <Style TargetType="Image">
                                                            <Style.Triggers>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" Value="0.5" />
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Image.Style>
                                                </Image>
                                            </Button>
                                            <Separator  FontWeight="Bold" BorderThickness="5" BorderBrush="White"   />
                                            <TextBlock Text="Page " Foreground="White" Grid.Column="4" Margin="10,2"/>
                                            <TextBox  Text="{Binding NumeroPageDebut}" Width="30" Margin=" 0,0" Grid.Column="5" Foreground="Blue" />
                                            <TextBlock  Text="Sur" Width="auto" Grid.Column="6" Margin="5,2"  Foreground="White" />
                                            <TextBlock  Text="{Binding Nbrepages}" Width="auto" Grid.Column="7"  Margin="3,2" Foreground="White"/>

                                            <Separator  FontWeight="Bold" Foreground="Black"  BorderBrush="Black" BorderThickness="5" />
                                            <TextBlock Text="Enregistrements : " Grid.Column="8" Margin="2,2" Foreground="White"/>
                                            <TextBlock  Text="{Binding LigneDebut}" Width="auto" Grid.Column="9" Margin="0,2"  Foreground="White" />
                                            <TextBlock Text="-" FontWeight="Bold" Foreground="White"  Width="auto" Grid.Column="10" Margin="0,2" HorizontalAlignment="Left" TextAlignment="Center" />
                                            <TextBlock Text="{Binding LigneFin}" Foreground="White" Width="auto" Grid.Column="11" Margin="0,2"/>
                                            <TextBlock Text="Sur" Width="auto" Grid.Column="12" HorizontalAlignment="Left" Margin="10,2" Foreground="White" />
                                            <TextBlock Text="{Binding TotalLignes}" Foreground="White" Width="auto" Grid.Column="13" Margin="0,2"/>
                                        </Grid>

                                    </ToolBarPanel>
                                    <!--<StatusBar Height="23" Name="statusBar1" Width="120" />-->
                                </Border>
                            </Grid>
                        </Border>
                    </Grid>
                </Border>
            </DockPanel>
        </GroupBox>
        <Popup  x:Name="popUpFacture" Placement="Bottom" PlacementTarget="{Binding ElementName=mnFacture}" StaysOpen="False" Width="200">
            <Border Background="White" BorderBrush="Gray" BorderThickness="1,1,1,1">
                <StackPanel Margin="5,5,5,15">
                    <StackPanel Orientation="Horizontal" Margin="0,0,0,15">
                        <Button Margin="0,0,0,0" Name="btnSelectAll" Click="btnSelectAll_Click">
                            <Button.Template>
                                <ControlTemplate>
                                    <TextBlock Text=" filtrer" Foreground="Blue" Cursor="Hand" />
                                </ControlTemplate>
                            </Button.Template>
                        </Button>

                        <Button Margin="10,0,0,0" Name="btnUnselectAll" Click="btnUnselectAll_Click">
                            <Button.Template>
                                <ControlTemplate>
                                    <TextBlock Text="Annuler filtre" Foreground="Blue" Cursor="Hand" />
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                    </StackPanel>
                    <Grid >
                        <Grid.RowDefinitions >
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <TextBlock Text="Filtre Par Numéro Facture" Grid.Row="0" Foreground="Green" />
                        <TextBox Margin="0,0,0,0"  Grid.Row="1" Width="150" BorderBrush="LightGray" BorderThickness="1" 
					   Text="{Binding FiltertexteFacture, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding FiltreEnable}"  />
                        <Image Grid.Row="1"  Margin="130,0,0,0" Height="20" Source="{StaticResource loupe_petite}"/>
                    </Grid>

                </StackPanel>
            </Border>
        </Popup>

        <Popup  x:Name="popUpClient" Placement="Bottom" PlacementTarget="{Binding ElementName=mnClient}" StaysOpen="False" Width="200">
            <Border Background="White" BorderBrush="Gray" BorderThickness="1,1,1,1">
                <StackPanel Margin="5,5,5,15">
                    <StackPanel Orientation="Horizontal" Margin="0,0,0,15">
                        <Button Margin="0,0,0,0" Name="btnSelectAllclient" Click="btnSelectAllClient_Click">
                            <Button.Template>
                                <ControlTemplate>
                                    <TextBlock Text="Annuler filtre" Foreground="Blue" Cursor="Hand" />
                                </ControlTemplate>
                            </Button.Template>
                        </Button>


                    </StackPanel>
                    <Grid >
                        <Grid.RowDefinitions >
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <TextBlock Text="Filtre Par Client" Grid.Row="0" Foreground="Green" />
                        <TextBox Margin="0,0,0,0" IsEnabled="{Binding FiltreEnable}"  Grid.Row="1" Width="150" BorderBrush="LightGray" BorderThickness="1" 
					   Text="{Binding Filtertexte, UpdateSourceTrigger=PropertyChanged}" />
                        <Image Grid.Row="1"  Margin="130,0,0,0" Height="20" Source="{StaticResource loupe_petite}"/>
                    </Grid>
                    <ListBox x:Name="listboxClient" ItemsSource="{Binding ListeClient}">
                        <ListBox.ItemTemplate >
                            <DataTemplate >
                                <CheckBox IsChecked="{Binding IsClientChecked}" Foreground="Green"   Content="{Binding nomClient}" Checked="ApplyclientFilters" Unchecked="UnApplyclientFilters" />
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>

                </StackPanel>
            </Border>
        </Popup>

        <Popup  x:Name="popUpDate" Placement="Bottom" PlacementTarget="{Binding ElementName=mnClient}" StaysOpen="False" Width="200" Opened="popUpDate_Opened">
            <Border Background="White" BorderBrush="Gray" BorderThickness="1,1,1,1">
                <StackPanel Margin="5,5,5,15">

                    <Grid >
                        <Grid.RowDefinitions >
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions >
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Filtre Par Date " Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Foreground="Green" />
                        <DatePicker Width="120"  Grid.Column="0" Grid.Row="1" 
                                    IsEnabled="{Binding FiltreEnable}" 
						           SelectedDate="{Binding FilterDateDebut, UpdateSourceTrigger=PropertyChanged}"
									BorderBrush="LightGray" BorderThickness="1" x:Name="DateRecherche" />
                        <CheckBox Content="Annuler selection" 
                                  IsChecked="{Binding CheckCancelDateFilter}" Foreground="Green" 
				                   Grid.Column="1" Grid.Row="1" Height="22" Margin="0,14,2,0" Width="125" />
                    </Grid>

                </StackPanel>
            </Border>
        </Popup>
        <Popup Height="Auto" Width="Auto" Name="MyToolTip" StaysOpen="True"  PopupAnimation="Slide" AllowsTransparency="True">
            <Border BorderThickness="1" Background="Azure" >
                <StackPanel Margin="30"  Orientation="Horizontal">
                    <StackPanel.Background >
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,0.3">
                            <LinearGradientBrush.GradientStops>
                                <GradientStop Color="LightGray" Offset="0"/>
                                <GradientStop Color="WhiteSmoke" Offset="1"/>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </StackPanel.Background>


                    <TextBlock Text="Total Marks: "/>
                    <TextBlock  Name="MyFirstPopupTextBlock" />
                </StackPanel>
            </Border>
        </Popup>
    </Grid>
</UserControl>
