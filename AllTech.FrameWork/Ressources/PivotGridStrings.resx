<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="XPG_Aggregators_Label" xml:space="preserve">
    <value>Programmatically change the default aggregator for Amount of sale to:</value>
  </data>
  <data name="XPG_Allow_CompactLayout" xml:space="preserve">
    <value>Allow CompactLayout</value>
  </data>
  <data name="XPG_CellSelection_CellOnly" xml:space="preserve">
    <value>Select cell</value>
  </data>
  <data name="XPG_CellSelection_ColumnOnly" xml:space="preserve">
    <value>Select column</value>
  </data>
  <data name="XPG_CellSelection_RowAndColumn" xml:space="preserve">
    <value>Select row and column</value>
  </data>
  <data name="XPG_CellSelection_RowOnly" xml:space="preserve">
    <value>Select row</value>
  </data>
  <data name="XPG_Cell_Type_Not_Located" xml:space="preserve">
    <value>Could not locate cell type!</value>
  </data>
  <data name="XPG_DataSelectorNoGrid_Columns" xml:space="preserve">
    <value>Columns</value>
  </data>
  <data name="XPG_DataSelectorNoGrid_Rows" xml:space="preserve">
    <value>Rows</value>
  </data>
  <data name="XPG_Data_AmountOfSale_DisplayFormat" xml:space="preserve">
    <value>{0:C2}</value>
  </data>
  <data name="XPG_Data_AmountOfSale_DisplayName" xml:space="preserve">
    <value>Amount of sale</value>
  </data>
  <data name="XPG_Data_Cities" xml:space="preserve">
    <value>Sofia;London;New York;Berlin;Seattle;Mellvile;Tokyo</value>
  </data>
  <data name="XPG_Data_CubeMetadata_DisplayName" xml:space="preserve">
    <value>Sales Data</value>
  </data>
  <data name="XPG_Data_Error" xml:space="preserve">
    <value>Excel file could not be downloaded.</value>
  </data>
  <data name="XPG_Data_HierarchyDescriptors_Location_All" xml:space="preserve">
    <value>All locations</value>
  </data>
  <data name="XPG_Data_HierarchyDescriptors_Location_Name" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="XPG_Data_HierarchyDescriptors_Product_All" xml:space="preserve">
    <value>All products</value>
  </data>
  <data name="XPG_Data_HierarchyDescriptors_Product_Name" xml:space="preserve">
    <value>Product name</value>
  </data>
  <data name="XPG_Data_HierarchyDescriptors_Seller_All" xml:space="preserve">
    <value>All sellers</value>
  </data>
  <data name="XPG_Data_HierarchyDescriptors_Seller_Name" xml:space="preserve">
    <value>Seller name</value>
  </data>
  <data name="XPG_Data_NumberOfUnits_DisplayName" xml:space="preserve">
    <value>Units sold</value>
  </data>
  <data name="XPG_Data_ProductCategories" xml:space="preserve">
    <value>Accessories;Bikes;Clothing;Components</value>
  </data>
  <data name="XPG_Data_PropertyNames_City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="XPG_Data_PropertyNames_Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="XPG_Data_PropertyNames_Product" xml:space="preserve">
    <value>Product</value>
  </data>
  <data name="XPG_Data_PropertyNames_Seller" xml:space="preserve">
    <value>Seller</value>
  </data>
  <data name="XPG_Data_SellerNames" xml:space="preserve">
    <value>John Smith;Alfredo Fetuchini;Howard Sprouse;Russell Shorter;Nicholas Carmona;Larry Lieb;Carl Costello;Benjamin Dupree;Bryan Culver;Monica Freitag;Lydia Burson;Harold Garvin;Walter Pang;David Haley;Glenn Landeros;Harry Tyler;Stanley Brooker;Antonio Charbonneau;Brandon Mckim;Claudia Kobayashi;Benjamin Meekins;Mark Slater;Kathe Pettel;Elisa Longbottom</value>
  </data>
  <data name="XPG_Data_UnitPrice_DisplayName" xml:space="preserve">
    <value>Unit price</value>
  </data>
  <data name="XPG_DGM_Metadata" xml:space="preserve">
    <value>Metadata</value>
  </data>
  <data name="XPG_DGM_Mixed" xml:space="preserve">
    <value>Mixed</value>
  </data>
  <data name="XPG_DGM_Property" xml:space="preserve">
    <value>Property</value>
  </data>
  <data name="XPG_ExcelFileDataSource_CubeDisplayName" xml:space="preserve">
    <value>Sheet1 Data</value>
  </data>
  <data name="XPG_ExcelFileDataSource_DimSettings_DisplayFormat" xml:space="preserve">
    <value>{0} units.</value>
  </data>
  <data name="XPG_ExcelFileDataSource_DimSettings_DisplayName" xml:space="preserve">
    <value>Units</value>
  </data>
  <data name="XPG_ExcelFileDataSource_DimSettings_Units_SrcPropName" xml:space="preserve">
    <value>Units</value>
  </data>
  <data name="XPG_ExcelFileDataSource_ExcelFormatDest" xml:space="preserve">
    <value>{0:C3}</value>
  </data>
  <data name="XPG_ExcelFileDataSource_ExcelFormatSrc" xml:space="preserve">
    <value>\"$\"#,##0.00_);[Red]\\(\"$\"#,##0.00\\)</value>
  </data>
  <data name="XPG_ExcelFileDataSource_HierarchyDesc_All" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="XPG_ExcelFileDataSource_HierarchyDesc_AllDates" xml:space="preserve">
    <value>All Dates</value>
  </data>
  <data name="XPG_ExcelFileDataSource_HierarchyDesc_AllValues" xml:space="preserve">
    <value>AllValues</value>
  </data>
  <data name="XPG_ExcelFileDataSource_HierarchyDesc_Members" xml:space="preserve">
    <value>Members</value>
  </data>
  <data name="XPG_ExcelFileDataSource_HierarchyDesc_Quarters" xml:space="preserve">
    <value>Quarters</value>
  </data>
  <data name="XPG_ExcelFileDataSource_HierarchyDesc_Years" xml:space="preserve">
    <value>Years</value>
  </data>
  <data name="XPG_ExcelFileDataSource_InitialColumns" xml:space="preserve">
    <value>[Date].[Date]</value>
  </data>
  <data name="XPG_ExcelFileDataSource_InitialCube" xml:space="preserve">
    <value>ExcelData</value>
  </data>
  <data name="XPG_ExcelFileDataSource_InitialMeasures" xml:space="preserve">
    <value>Units</value>
  </data>
  <data name="XPG_ExcelFileDataSource_InitialRows" xml:space="preserve">
    <value>[Region].[Region]</value>
  </data>
  <data name="XPG_ExcelFileDataSource_WorksheetName" xml:space="preserve">
    <value>Sheet1</value>
  </data>
  <data name="XPG_Excel_Export_ExcelFileFilter" xml:space="preserve">
    <value>Excel files|*.xls</value>
  </data>
  <data name="XPG_Excel_Export_Sheet_Name" xml:space="preserve">
    <value>Data from PivotGrid</value>
  </data>
  <data name="XPG_Excel_Export_Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="XPG_ExpandToLevelCB_Collapse_All" xml:space="preserve">
    <value>Collapse All</value>
  </data>
  <data name="XPG_ExpandToLevelCB_Expand" xml:space="preserve">
    <value>Expand</value>
  </data>
  <data name="XPG_ExpandToLevelCB_Expand_HalfYears" xml:space="preserve">
    <value>Expand to Half-Years</value>
  </data>
  <data name="XPG_ExpandToLevelCB_Expand_Months" xml:space="preserve">
    <value>Expand to Months</value>
  </data>
  <data name="XPG_ExpandToLevelCB_Expand_Quarters" xml:space="preserve">
    <value>Expand to Quarters</value>
  </data>
  <data name="XPG_ExpandToLevelCB_Expand_Years" xml:space="preserve">
    <value>Expand to Years</value>
  </data>
  <data name="XPG_ExpandToLevelCB_Select_Expansion_Level" xml:space="preserve">
    <value>Select Expansion Level:</value>
  </data>
  <data name="XPG_Export_Column_Headers" xml:space="preserve">
    <value>Export column headers</value>
  </data>
  <data name="XPG_Export_Row_Headers" xml:space="preserve">
    <value>Export Row Headers</value>
  </data>
  <data name="XPG_Export_To_Excel" xml:space="preserve">
    <value>Export To Excel</value>
  </data>
  <data name="XPG_LargeDataHandling_DataGenComplete" xml:space="preserve">
    <value>Data generation complete!</value>
  </data>
  <data name="XPG_LargeDataHandling_DataGenWillStart" xml:space="preserve">
    <value>Data generation will start when you click the OK button</value>
  </data>
  <data name="XPG_LargeDataHandling_GenerateData" xml:space="preserve">
    <value>Generate Data</value>
  </data>
  <data name="XPG_LargeDataHandling_SelectNumRecords" xml:space="preserve">
    <value>Select the number of records to generate:</value>
  </data>
  <data name="XPG_Legend" xml:space="preserve">
    <value>Legend</value>
  </data>
  <data name="XPG_LiveUpdate_AllSales" xml:space="preserve">
    <value>All sales</value>
  </data>
  <data name="XPG_LiveUpdate_LatestSales" xml:space="preserve">
    <value>Latest sales</value>
  </data>
  <data name="XPG_Load_Data_From_Excel_File" xml:space="preserve">
    <value>Load data from excel file</value>
  </data>
  <data name="XPG_Load_Selected_State" xml:space="preserve">
    <value>Load selected state</value>
  </data>
  <data name="XPG_Pivot_Chart" xml:space="preserve">
    <value>Pivot Chart</value>
  </data>
  <data name="XPG_Pivot_Data" xml:space="preserve">
    <value>Pivot Data</value>
  </data>
  <data name="XPG_Pivot_Grid_Data" xml:space="preserve">
    <value>Pivot Grid Data</value>
  </data>
  <data name="XPG_Save_Current_View" xml:space="preserve">
    <value>Save current view</value>
  </data>
  <data name="XPG_Still_Loading" xml:space="preserve">
    <value>Data is still not loaded. Please wait.</value>
  </data>
  <data name="XPG_Wait_Line1" xml:space="preserve">
    <value>Please wait while the data is</value>
  </data>
  <data name="XPG_Wait_Line2" xml:space="preserve">
    <value>downloaded from the analysis server</value>
  </data>
  <data name="XPG_Filtering_Filter" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="XPG_Filtering_Months" xml:space="preserve">
    <value>months</value>
  </data>
  <data name="XPG_Filtering_ShowDataForTheLast" xml:space="preserve">
    <value>Show data for the last</value>
  </data>
  <data name="XPG_LiveUpdate_UpdateString" xml:space="preserve">
    <value>{0} from {1} has sold {2} items from {3} for {4} dollars</value>
  </data>
  <data name="XPG_LargeDataHandling_GeneratingData" xml:space="preserve">
    <value>Generating Data</value>
  </data>
  <data name="XPG_LargeDataHandling_LoadingData" xml:space="preserve">
    <value>Loading Data to PivotGrid</value>
  </data>
</root>